
MyProject(3)0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000039a0  00400000  00400000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000068  20000000  004039a0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000cc4  20000068  00403a08  00020068  2**3
                  ALLOC
  3 .heap         00000204  20000d2c  004046cc  00020068  2**0
                  ALLOC
  4 .stack        00000400  20000f30  004048d0  00020068  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY
  7 .debug_info   00009de0  00000000  00000000  000200ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001be8  00000000  00000000  00029ecf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003024  00000000  00000000  0002bab7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000004d8  00000000  00000000  0002eadb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000500  00000000  00000000  0002efb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00021be4  00000000  00000000  0002f4b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000afde  00000000  00000000  00051097  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009d8ee  00000000  00000000  0005c075  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000107c  00000000  00000000  000f9964  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	30 13 00 20 85 01 40 00 81 01 40 00 e9 12 40 00     0.. ..@...@...@.
  400010:	81 01 40 00 81 01 40 00 81 01 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	81 01 40 00 81 01 40 00 00 00 00 00 81 01 40 00     ..@...@.......@.
  40003c:	81 01 40 00 81 01 40 00 81 01 40 00 81 01 40 00     ..@...@...@...@.
  40004c:	81 01 40 00 81 01 40 00 81 01 40 00 81 01 40 00     ..@...@...@...@.
  40005c:	81 01 40 00 81 01 40 00 81 01 40 00 00 00 00 00     ..@...@...@.....
  40006c:	81 01 40 00 81 01 40 00 81 01 40 00 81 01 40 00     ..@...@...@...@.
  40007c:	81 01 40 00 81 01 40 00 81 01 40 00 81 01 40 00     ..@...@...@...@.
  40008c:	81 01 40 00 81 01 40 00 81 01 40 00 81 01 40 00     ..@...@...@...@.
  40009c:	81 01 40 00 81 01 40 00 81 01 40 00 81 01 40 00     ..@...@...@...@.
  4000ac:	81 01 40 00 81 01 40 00 81 01 40 00 00 00 00 00     ..@...@...@.....
	...
  4000fc:	81 01 40 00 81 01 40 00 81 01 40 00                 ..@...@...@.

00400108 <__do_global_dtors_aux>:
  400108:	b510      	push	{r4, lr}
  40010a:	4c05      	ldr	r4, [pc, #20]	; (400120 <__do_global_dtors_aux+0x18>)
  40010c:	7823      	ldrb	r3, [r4, #0]
  40010e:	b933      	cbnz	r3, 40011e <__do_global_dtors_aux+0x16>
  400110:	4b04      	ldr	r3, [pc, #16]	; (400124 <__do_global_dtors_aux+0x1c>)
  400112:	b113      	cbz	r3, 40011a <__do_global_dtors_aux+0x12>
  400114:	4804      	ldr	r0, [pc, #16]	; (400128 <__do_global_dtors_aux+0x20>)
  400116:	f3af 8000 	nop.w
  40011a:	2301      	movs	r3, #1
  40011c:	7023      	strb	r3, [r4, #0]
  40011e:	bd10      	pop	{r4, pc}
  400120:	20000068 	.word	0x20000068
  400124:	00000000 	.word	0x00000000
  400128:	004039a0 	.word	0x004039a0

0040012c <frame_dummy>:
  40012c:	4b0c      	ldr	r3, [pc, #48]	; (400160 <frame_dummy+0x34>)
  40012e:	b143      	cbz	r3, 400142 <frame_dummy+0x16>
  400130:	480c      	ldr	r0, [pc, #48]	; (400164 <frame_dummy+0x38>)
  400132:	490d      	ldr	r1, [pc, #52]	; (400168 <frame_dummy+0x3c>)
  400134:	b510      	push	{r4, lr}
  400136:	f3af 8000 	nop.w
  40013a:	480c      	ldr	r0, [pc, #48]	; (40016c <frame_dummy+0x40>)
  40013c:	6803      	ldr	r3, [r0, #0]
  40013e:	b923      	cbnz	r3, 40014a <frame_dummy+0x1e>
  400140:	bd10      	pop	{r4, pc}
  400142:	480a      	ldr	r0, [pc, #40]	; (40016c <frame_dummy+0x40>)
  400144:	6803      	ldr	r3, [r0, #0]
  400146:	b933      	cbnz	r3, 400156 <frame_dummy+0x2a>
  400148:	4770      	bx	lr
  40014a:	4b09      	ldr	r3, [pc, #36]	; (400170 <frame_dummy+0x44>)
  40014c:	2b00      	cmp	r3, #0
  40014e:	d0f7      	beq.n	400140 <frame_dummy+0x14>
  400150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400154:	4718      	bx	r3
  400156:	4b06      	ldr	r3, [pc, #24]	; (400170 <frame_dummy+0x44>)
  400158:	2b00      	cmp	r3, #0
  40015a:	d0f5      	beq.n	400148 <frame_dummy+0x1c>
  40015c:	4718      	bx	r3
  40015e:	bf00      	nop
  400160:	00000000 	.word	0x00000000
  400164:	004039a0 	.word	0x004039a0
  400168:	2000006c 	.word	0x2000006c
  40016c:	004039a0 	.word	0x004039a0
  400170:	00000000 	.word	0x00000000

00400174 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
**/
void atmel_start_init(void)
{
  400174:	b508      	push	{r3, lr}
	system_init();
  400176:	4b01      	ldr	r3, [pc, #4]	; (40017c <atmel_start_init+0x8>)
  400178:	4798      	blx	r3
  40017a:	bd08      	pop	{r3, pc}
  40017c:	004002a1 	.word	0x004002a1

00400180 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400180:	e7fe      	b.n	400180 <Dummy_Handler>
	...

00400184 <Reset_Handler>:
{
  400184:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  400186:	4b17      	ldr	r3, [pc, #92]	; (4001e4 <Reset_Handler+0x60>)
  400188:	4a17      	ldr	r2, [pc, #92]	; (4001e8 <Reset_Handler+0x64>)
  40018a:	429a      	cmp	r2, r3
  40018c:	d010      	beq.n	4001b0 <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  40018e:	4b17      	ldr	r3, [pc, #92]	; (4001ec <Reset_Handler+0x68>)
  400190:	4a14      	ldr	r2, [pc, #80]	; (4001e4 <Reset_Handler+0x60>)
  400192:	429a      	cmp	r2, r3
  400194:	d20c      	bcs.n	4001b0 <Reset_Handler+0x2c>
  400196:	3b01      	subs	r3, #1
  400198:	1a9b      	subs	r3, r3, r2
  40019a:	f023 0303 	bic.w	r3, r3, #3
  40019e:	3304      	adds	r3, #4
  4001a0:	4413      	add	r3, r2
  4001a2:	4911      	ldr	r1, [pc, #68]	; (4001e8 <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  4001a4:	f851 0b04 	ldr.w	r0, [r1], #4
  4001a8:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4001ac:	429a      	cmp	r2, r3
  4001ae:	d1f9      	bne.n	4001a4 <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  4001b0:	4b0f      	ldr	r3, [pc, #60]	; (4001f0 <Reset_Handler+0x6c>)
  4001b2:	4a10      	ldr	r2, [pc, #64]	; (4001f4 <Reset_Handler+0x70>)
  4001b4:	429a      	cmp	r2, r3
  4001b6:	d20a      	bcs.n	4001ce <Reset_Handler+0x4a>
  4001b8:	3b01      	subs	r3, #1
  4001ba:	1a9b      	subs	r3, r3, r2
  4001bc:	f023 0303 	bic.w	r3, r3, #3
  4001c0:	3304      	adds	r3, #4
  4001c2:	4413      	add	r3, r2
                *pDest++ = 0;
  4001c4:	2100      	movs	r1, #0
  4001c6:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4001ca:	4293      	cmp	r3, r2
  4001cc:	d1fb      	bne.n	4001c6 <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4001ce:	4a0a      	ldr	r2, [pc, #40]	; (4001f8 <Reset_Handler+0x74>)
  4001d0:	4b0a      	ldr	r3, [pc, #40]	; (4001fc <Reset_Handler+0x78>)
  4001d2:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4001d6:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  4001d8:	4b09      	ldr	r3, [pc, #36]	; (400200 <Reset_Handler+0x7c>)
  4001da:	4798      	blx	r3
        main();
  4001dc:	4b09      	ldr	r3, [pc, #36]	; (400204 <Reset_Handler+0x80>)
  4001de:	4798      	blx	r3
  4001e0:	e7fe      	b.n	4001e0 <Reset_Handler+0x5c>
  4001e2:	bf00      	nop
  4001e4:	20000000 	.word	0x20000000
  4001e8:	004039a0 	.word	0x004039a0
  4001ec:	20000068 	.word	0x20000068
  4001f0:	20000d2c 	.word	0x20000d2c
  4001f4:	20000068 	.word	0x20000068
  4001f8:	e000ed00 	.word	0xe000ed00
  4001fc:	00400000 	.word	0x00400000
  400200:	00403651 	.word	0x00403651
  400204:	00400851 	.word	0x00400851

00400208 <ADC_0_PORT_init>:
	((Pio *)hw)->PIO_PDR = PIO_PSR_P31;
}

static inline void hri_pio_set_PSR_reg(const void *const hw, hri_pio_psr_reg_t mask)
{
	((Pio *)hw)->PIO_PER = mask;
  400208:	f44f 3200 	mov.w	r2, #131072	; 0x20000
  40020c:	4b01      	ldr	r3, [pc, #4]	; (400214 <ADC_0_PORT_init+0xc>)
  40020e:	601a      	str	r2, [r3, #0]
  400210:	4770      	bx	lr
  400212:	bf00      	nop
  400214:	400e0e00 	.word	0x400e0e00

00400218 <ADC_0_CLOCK_init>:
}

static inline hri_pmc_pcsr0_reg_t hri_pmc_get_PCSR0_reg(const void *const hw, hri_pmc_pcsr0_reg_t mask)
{
	uint32_t tmp;
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  400218:	4b04      	ldr	r3, [pc, #16]	; (40022c <ADC_0_CLOCK_init+0x14>)
  40021a:	699b      	ldr	r3, [r3, #24]
 *
 */
static inline void _pmc_enable_periph_clock(uint32_t periph_id)
{
	if (periph_id < 32) {
		if (!hri_pmc_get_PCSR0_reg(PMC, (1 << periph_id))) {
  40021c:	f013 5f00 	tst.w	r3, #536870912	; 0x20000000
  400220:	d103      	bne.n	40022a <ADC_0_CLOCK_init+0x12>
	((Pmc *)hw)->PMC_PCER0 = mask;
  400222:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400226:	4b01      	ldr	r3, [pc, #4]	; (40022c <ADC_0_CLOCK_init+0x14>)
  400228:	611a      	str	r2, [r3, #16]
  40022a:	4770      	bx	lr
  40022c:	400e0400 	.word	0x400e0400

00400230 <ADC_0_init>:

	_pmc_enable_periph_clock(ID_ADC);
}

void ADC_0_init(void)
{
  400230:	b508      	push	{r3, lr}
	ADC_0_CLOCK_init();
  400232:	4b02      	ldr	r3, [pc, #8]	; (40023c <ADC_0_init+0xc>)
  400234:	4798      	blx	r3
	ADC_0_PORT_init();
  400236:	4b02      	ldr	r3, [pc, #8]	; (400240 <ADC_0_init+0x10>)
  400238:	4798      	blx	r3
  40023a:	bd08      	pop	{r3, pc}
  40023c:	00400219 	.word	0x00400219
  400240:	00400209 	.word	0x00400209

00400244 <I2C_0_PORT_init>:
}

static inline void hri_pio_clear_ABCDSR_reg(const void *const hw, uint8_t index, hri_pio_abcdsr_reg_t mask)
{
	PIO_CRITICAL_SECTION_ENTER();
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  400244:	4b0a      	ldr	r3, [pc, #40]	; (400270 <I2C_0_PORT_init+0x2c>)
  400246:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400248:	f022 0210 	bic.w	r2, r2, #16
  40024c:	671a      	str	r2, [r3, #112]	; 0x70
  40024e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400250:	f022 0210 	bic.w	r2, r2, #16
  400254:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  400256:	2210      	movs	r2, #16
  400258:	605a      	str	r2, [r3, #4]
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  40025a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40025c:	f022 0208 	bic.w	r2, r2, #8
  400260:	671a      	str	r2, [r3, #112]	; 0x70
  400262:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400264:	f022 0208 	bic.w	r2, r2, #8
  400268:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  40026a:	2208      	movs	r2, #8
  40026c:	605a      	str	r2, [r3, #4]
  40026e:	4770      	bx	lr
  400270:	400e0e00 	.word	0x400e0e00

00400274 <I2C_0_CLOCK_init>:
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  400274:	4b04      	ldr	r3, [pc, #16]	; (400288 <I2C_0_CLOCK_init+0x14>)
  400276:	699b      	ldr	r3, [r3, #24]
  400278:	f413 2f00 	tst.w	r3, #524288	; 0x80000
  40027c:	d103      	bne.n	400286 <I2C_0_CLOCK_init+0x12>
	((Pmc *)hw)->PMC_PCER0 = mask;
  40027e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400282:	4b01      	ldr	r3, [pc, #4]	; (400288 <I2C_0_CLOCK_init+0x14>)
  400284:	611a      	str	r2, [r3, #16]
  400286:	4770      	bx	lr
  400288:	400e0400 	.word	0x400e0400

0040028c <I2C_0_init>:
{
	_pmc_enable_periph_clock(ID_FLEXCOM3);
}

void I2C_0_init(void)
{
  40028c:	b508      	push	{r3, lr}
	I2C_0_CLOCK_init();
  40028e:	4b02      	ldr	r3, [pc, #8]	; (400298 <I2C_0_init+0xc>)
  400290:	4798      	blx	r3

	//i2c_m_sync_init(&I2C_0, FLEXCOM3);

	I2C_0_PORT_init();
  400292:	4b02      	ldr	r3, [pc, #8]	; (40029c <I2C_0_init+0x10>)
  400294:	4798      	blx	r3
  400296:	bd08      	pop	{r3, pc}
  400298:	00400275 	.word	0x00400275
  40029c:	00400245 	.word	0x00400245

004002a0 <system_init>:
}

void system_init(void)
{
  4002a0:	b508      	push	{r3, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
  4002a2:	4b06      	ldr	r3, [pc, #24]	; (4002bc <system_init+0x1c>)
  4002a4:	4798      	blx	r3
}

static inline void hri_wdt_set_MR_WDDIS_bit(const void *const hw)
{
	WDT_CRITICAL_SECTION_ENTER();
	((Wdt *)hw)->WDT_MR |= WDT_MR_WDDIS;
  4002a6:	4a06      	ldr	r2, [pc, #24]	; (4002c0 <system_init+0x20>)
  4002a8:	6853      	ldr	r3, [r2, #4]
  4002aa:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  4002ae:	6053      	str	r3, [r2, #4]
	init_mcu();

	/* Disable Watchdog */
	hri_wdt_set_MR_WDDIS_bit(WDT);

	ADC_0_init();
  4002b0:	4b04      	ldr	r3, [pc, #16]	; (4002c4 <system_init+0x24>)
  4002b2:	4798      	blx	r3

	I2C_0_init();
  4002b4:	4b04      	ldr	r3, [pc, #16]	; (4002c8 <system_init+0x28>)
  4002b6:	4798      	blx	r3
  4002b8:	bd08      	pop	{r3, pc}
  4002ba:	bf00      	nop
  4002bc:	004005a1 	.word	0x004005a1
  4002c0:	400e1450 	.word	0x400e1450
  4002c4:	00400231 	.word	0x00400231
  4002c8:	0040028d 	.word	0x0040028d

004002cc <adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t adc_sync_init(struct adc_sync_descriptor *const descr, void *const hw, void *const func)
{
  4002cc:	b538      	push	{r3, r4, r5, lr}
  4002ce:	460c      	mov	r4, r1
	ASSERT(descr && hw);
  4002d0:	4605      	mov	r5, r0
  4002d2:	b158      	cbz	r0, 4002ec <adc_sync_init+0x20>
  4002d4:	1c08      	adds	r0, r1, #0
  4002d6:	bf18      	it	ne
  4002d8:	2001      	movne	r0, #1
  4002da:	2243      	movs	r2, #67	; 0x43
  4002dc:	4904      	ldr	r1, [pc, #16]	; (4002f0 <adc_sync_init+0x24>)
  4002de:	4b05      	ldr	r3, [pc, #20]	; (4002f4 <adc_sync_init+0x28>)
  4002e0:	4798      	blx	r3

	return _adc_sync_init(&descr->device, hw);
  4002e2:	4621      	mov	r1, r4
  4002e4:	4628      	mov	r0, r5
  4002e6:	4b04      	ldr	r3, [pc, #16]	; (4002f8 <adc_sync_init+0x2c>)
  4002e8:	4798      	blx	r3
}
  4002ea:	bd38      	pop	{r3, r4, r5, pc}
  4002ec:	2000      	movs	r0, #0
  4002ee:	e7f4      	b.n	4002da <adc_sync_init+0xe>
  4002f0:	004036a8 	.word	0x004036a8
  4002f4:	004004f9 	.word	0x004004f9
  4002f8:	00400501 	.word	0x00400501

004002fc <adc_sync_enable_channel>:

/**
 * \brief Enable ADC
 */
int32_t adc_sync_enable_channel(struct adc_sync_descriptor *const descr, const uint8_t channel)
{
  4002fc:	b538      	push	{r3, r4, r5, lr}
  4002fe:	460d      	mov	r5, r1
	ASSERT(descr);
  400300:	4604      	mov	r4, r0
  400302:	2258      	movs	r2, #88	; 0x58
  400304:	4905      	ldr	r1, [pc, #20]	; (40031c <adc_sync_enable_channel+0x20>)
  400306:	3000      	adds	r0, #0
  400308:	bf18      	it	ne
  40030a:	2001      	movne	r0, #1
  40030c:	4b04      	ldr	r3, [pc, #16]	; (400320 <adc_sync_enable_channel+0x24>)
  40030e:	4798      	blx	r3
	_adc_sync_enable_channel(&descr->device, channel);
  400310:	4629      	mov	r1, r5
  400312:	4620      	mov	r0, r4
  400314:	4b03      	ldr	r3, [pc, #12]	; (400324 <adc_sync_enable_channel+0x28>)
  400316:	4798      	blx	r3

	return ERR_NONE;
}
  400318:	2000      	movs	r0, #0
  40031a:	bd38      	pop	{r3, r4, r5, pc}
  40031c:	004036a8 	.word	0x004036a8
  400320:	004004f9 	.word	0x004004f9
  400324:	00400541 	.word	0x00400541

00400328 <adc_sync_read_channel>:
/*
 * \brief Read data from ADC
 */
int32_t adc_sync_read_channel(struct adc_sync_descriptor *const descr, const uint8_t channel, uint8_t *const buffer,
                              const uint16_t length)
{
  400328:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40032c:	460d      	mov	r5, r1
  40032e:	4691      	mov	r9, r2
  400330:	469a      	mov	sl, r3
	uint8_t  data_size;
	uint16_t offset = 0;

	ASSERT(descr && buffer && length);
  400332:	4680      	mov	r8, r0
  400334:	b1e0      	cbz	r0, 400370 <adc_sync_read_channel+0x48>
  400336:	b1ea      	cbz	r2, 400374 <adc_sync_read_channel+0x4c>
  400338:	1c18      	adds	r0, r3, #0
  40033a:	bf18      	it	ne
  40033c:	2001      	movne	r0, #1
  40033e:	4f1c      	ldr	r7, [pc, #112]	; (4003b0 <adc_sync_read_channel+0x88>)
  400340:	2271      	movs	r2, #113	; 0x71
  400342:	4639      	mov	r1, r7
  400344:	4e1b      	ldr	r6, [pc, #108]	; (4003b4 <adc_sync_read_channel+0x8c>)
  400346:	47b0      	blx	r6
	data_size = _adc_sync_get_data_size(&descr->device);
  400348:	4644      	mov	r4, r8
  40034a:	4640      	mov	r0, r8
  40034c:	4b1a      	ldr	r3, [pc, #104]	; (4003b8 <adc_sync_read_channel+0x90>)
  40034e:	4798      	blx	r3
  400350:	4680      	mov	r8, r0
	ASSERT(!(length % data_size));
  400352:	fb9a f0f0 	sdiv	r0, sl, r0
  400356:	fb08 a010 	mls	r0, r8, r0, sl
  40035a:	2273      	movs	r2, #115	; 0x73
  40035c:	4639      	mov	r1, r7
  40035e:	fab0 f080 	clz	r0, r0
  400362:	0940      	lsrs	r0, r0, #5
  400364:	47b0      	blx	r6
	uint16_t offset = 0;
  400366:	2700      	movs	r7, #0

	do {
		uint16_t result;
		_adc_sync_convert(&descr->device);
  400368:	f8df b058 	ldr.w	fp, [pc, #88]	; 4003c4 <adc_sync_read_channel+0x9c>

		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
  40036c:	4e13      	ldr	r6, [pc, #76]	; (4003bc <adc_sync_read_channel+0x94>)
  40036e:	e007      	b.n	400380 <adc_sync_read_channel+0x58>
	ASSERT(descr && buffer && length);
  400370:	2000      	movs	r0, #0
  400372:	e7e4      	b.n	40033e <adc_sync_read_channel+0x16>
  400374:	2000      	movs	r0, #0
  400376:	e7e2      	b.n	40033e <adc_sync_read_channel+0x16>
  400378:	4447      	add	r7, r8
  40037a:	b2bf      	uxth	r7, r7
		buffer[offset] = result;
		if (1 < data_size) {
			buffer[offset + 1] = result >> 8;
		}
		offset += data_size;
	} while (offset < length);
  40037c:	45ba      	cmp	sl, r7
  40037e:	d914      	bls.n	4003aa <adc_sync_read_channel+0x82>
		_adc_sync_convert(&descr->device);
  400380:	4620      	mov	r0, r4
  400382:	47d8      	blx	fp
		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
  400384:	4629      	mov	r1, r5
  400386:	4620      	mov	r0, r4
  400388:	47b0      	blx	r6
  40038a:	2800      	cmp	r0, #0
  40038c:	d0fa      	beq.n	400384 <adc_sync_read_channel+0x5c>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
  40038e:	4629      	mov	r1, r5
  400390:	4620      	mov	r0, r4
  400392:	4b0b      	ldr	r3, [pc, #44]	; (4003c0 <adc_sync_read_channel+0x98>)
  400394:	4798      	blx	r3
		buffer[offset] = result;
  400396:	f809 0007 	strb.w	r0, [r9, r7]
		if (1 < data_size) {
  40039a:	f1b8 0f01 	cmp.w	r8, #1
  40039e:	d9eb      	bls.n	400378 <adc_sync_read_channel+0x50>
			buffer[offset + 1] = result >> 8;
  4003a0:	eb09 0307 	add.w	r3, r9, r7
  4003a4:	0a00      	lsrs	r0, r0, #8
  4003a6:	7058      	strb	r0, [r3, #1]
  4003a8:	e7e6      	b.n	400378 <adc_sync_read_channel+0x50>

	return offset;
}
  4003aa:	4638      	mov	r0, r7
  4003ac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4003b0:	004036a8 	.word	0x004036a8
  4003b4:	004004f9 	.word	0x004004f9
  4003b8:	0040054d 	.word	0x0040054d
  4003bc:	00400551 	.word	0x00400551
  4003c0:	0040056d 	.word	0x0040056d
  4003c4:	00400565 	.word	0x00400565

004003c8 <atomic_enter_critical>:
 */
__attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4003c8:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
  4003cc:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  4003ce:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  4003d0:	f3bf 8f5f 	dmb	sy
  4003d4:	4770      	bx	lr

004003d6 <atomic_leave_critical>:
  4003d6:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
  4003da:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
  4003dc:	f383 8810 	msr	PRIMASK, r3
  4003e0:	4770      	bx	lr
	...

004003e4 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
  4003e4:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
  4003e6:	4b04      	ldr	r3, [pc, #16]	; (4003f8 <delay_ms+0x14>)
  4003e8:	681c      	ldr	r4, [r3, #0]
  4003ea:	4b04      	ldr	r3, [pc, #16]	; (4003fc <delay_ms+0x18>)
  4003ec:	4798      	blx	r3
  4003ee:	4601      	mov	r1, r0
  4003f0:	4620      	mov	r0, r4
  4003f2:	4b03      	ldr	r3, [pc, #12]	; (400400 <delay_ms+0x1c>)
  4003f4:	4798      	blx	r3
  4003f6:	bd10      	pop	{r4, pc}
  4003f8:	20000084 	.word	0x20000084
  4003fc:	00400579 	.word	0x00400579
  400400:	00400599 	.word	0x00400599

00400404 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
  400404:	b510      	push	{r4, lr}
  400406:	b084      	sub	sp, #16
  400408:	4614      	mov	r4, r2
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
  40040a:	8903      	ldrh	r3, [r0, #8]
  40040c:	f8ad 3004 	strh.w	r3, [sp, #4]
	msg.len    = n;
  400410:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
  400412:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400416:	f8ad 3006 	strh.w	r3, [sp, #6]
	msg.buffer = (uint8_t *)buf;
  40041a:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
  40041c:	a901      	add	r1, sp, #4
  40041e:	3814      	subs	r0, #20
  400420:	4b03      	ldr	r3, [pc, #12]	; (400430 <i2c_m_sync_write+0x2c>)
  400422:	4798      	blx	r3
	if (ret) {
		return ret;
	}

	return n;
}
  400424:	2800      	cmp	r0, #0
  400426:	bf08      	it	eq
  400428:	4620      	moveq	r0, r4
  40042a:	b004      	add	sp, #16
  40042c:	bd10      	pop	{r4, pc}
  40042e:	bf00      	nop
  400430:	004006f1 	.word	0x004006f1

00400434 <i2c_m_sync_read>:
{
  400434:	b510      	push	{r4, lr}
  400436:	b084      	sub	sp, #16
  400438:	4614      	mov	r4, r2
	msg.addr   = i2c->slave_addr;
  40043a:	8903      	ldrh	r3, [r0, #8]
  40043c:	f8ad 3004 	strh.w	r3, [sp, #4]
	msg.len    = n;
  400440:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
  400442:	f248 0301 	movw	r3, #32769	; 0x8001
  400446:	f8ad 3006 	strh.w	r3, [sp, #6]
	msg.buffer = buf;
  40044a:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
  40044c:	a901      	add	r1, sp, #4
  40044e:	3814      	subs	r0, #20
  400450:	4b03      	ldr	r3, [pc, #12]	; (400460 <i2c_m_sync_read+0x2c>)
  400452:	4798      	blx	r3
}
  400454:	2800      	cmp	r0, #0
  400456:	bf08      	it	eq
  400458:	4620      	moveq	r0, r4
  40045a:	b004      	add	sp, #16
  40045c:	bd10      	pop	{r4, pc}
  40045e:	bf00      	nop
  400460:	004006f1 	.word	0x004006f1

00400464 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
  400464:	b538      	push	{r3, r4, r5, lr}
  400466:	460d      	mov	r5, r1
	int32_t init_status;
	ASSERT(i2c);
  400468:	4604      	mov	r4, r0
  40046a:	2268      	movs	r2, #104	; 0x68
  40046c:	4908      	ldr	r1, [pc, #32]	; (400490 <i2c_m_sync_init+0x2c>)
  40046e:	3000      	adds	r0, #0
  400470:	bf18      	it	ne
  400472:	2001      	movne	r0, #1
  400474:	4b07      	ldr	r3, [pc, #28]	; (400494 <i2c_m_sync_init+0x30>)
  400476:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
  400478:	4629      	mov	r1, r5
  40047a:	4620      	mov	r0, r4
  40047c:	4b06      	ldr	r3, [pc, #24]	; (400498 <i2c_m_sync_init+0x34>)
  40047e:	4798      	blx	r3
	if (init_status) {
  400480:	4603      	mov	r3, r0
  400482:	b918      	cbnz	r0, 40048c <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
  400484:	4a05      	ldr	r2, [pc, #20]	; (40049c <i2c_m_sync_init+0x38>)
  400486:	61a2      	str	r2, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
  400488:	4a05      	ldr	r2, [pc, #20]	; (4004a0 <i2c_m_sync_init+0x3c>)
  40048a:	6162      	str	r2, [r4, #20]

	return ERR_NONE;
}
  40048c:	4618      	mov	r0, r3
  40048e:	bd38      	pop	{r3, r4, r5, pc}
  400490:	004036c4 	.word	0x004036c4
  400494:	004004f9 	.word	0x004004f9
  400498:	00400661 	.word	0x00400661
  40049c:	00400435 	.word	0x00400435
  4004a0:	00400405 	.word	0x00400405

004004a4 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
  4004a4:	b508      	push	{r3, lr}
	return _i2c_m_sync_enable(&i2c->device);
  4004a6:	4b01      	ldr	r3, [pc, #4]	; (4004ac <i2c_m_sync_enable+0x8>)
  4004a8:	4798      	blx	r3
}
  4004aa:	bd08      	pop	{r3, pc}
  4004ac:	004006cd 	.word	0x004006cd

004004b0 <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
  4004b0:	f3c1 0109 	ubfx	r1, r1, #0, #10
  4004b4:	f402 6280 	and.w	r2, r2, #1024	; 0x400
  4004b8:	430a      	orrs	r2, r1
  4004ba:	8382      	strh	r2, [r0, #28]
}
  4004bc:	4610      	mov	r0, r2
  4004be:	4770      	bx	lr

004004c0 <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
  4004c0:	3014      	adds	r0, #20
  4004c2:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
  4004c4:	2000      	movs	r0, #0
  4004c6:	4770      	bx	lr

004004c8 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
  4004c8:	b570      	push	{r4, r5, r6, lr}
  4004ca:	460d      	mov	r5, r1
  4004cc:	4616      	mov	r6, r2
	ASSERT(io_descr && buf);
  4004ce:	4604      	mov	r4, r0
  4004d0:	b160      	cbz	r0, 4004ec <io_write+0x24>
  4004d2:	1c08      	adds	r0, r1, #0
  4004d4:	bf18      	it	ne
  4004d6:	2001      	movne	r0, #1
  4004d8:	223e      	movs	r2, #62	; 0x3e
  4004da:	4905      	ldr	r1, [pc, #20]	; (4004f0 <io_write+0x28>)
  4004dc:	4b05      	ldr	r3, [pc, #20]	; (4004f4 <io_write+0x2c>)
  4004de:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
  4004e0:	6823      	ldr	r3, [r4, #0]
  4004e2:	4632      	mov	r2, r6
  4004e4:	4629      	mov	r1, r5
  4004e6:	4620      	mov	r0, r4
  4004e8:	4798      	blx	r3
}
  4004ea:	bd70      	pop	{r4, r5, r6, pc}
  4004ec:	2000      	movs	r0, #0
  4004ee:	e7f3      	b.n	4004d8 <io_write+0x10>
  4004f0:	004036e0 	.word	0x004036e0
  4004f4:	004004f9 	.word	0x004004f9

004004f8 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
  4004f8:	b900      	cbnz	r0, 4004fc <assert+0x4>
		__asm("BKPT #0");
  4004fa:	be00      	bkpt	0x0000
  4004fc:	4770      	bx	lr
	...

00400500 <_adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t _adc_sync_init(struct _adc_sync_device *const device, void *const hw)
{
  400500:	b538      	push	{r3, r4, r5, lr}
  400502:	460c      	mov	r4, r1
	ASSERT(device);
  400504:	4605      	mov	r5, r0
  400506:	2258      	movs	r2, #88	; 0x58
  400508:	4909      	ldr	r1, [pc, #36]	; (400530 <_adc_sync_init+0x30>)
  40050a:	3000      	adds	r0, #0
  40050c:	bf18      	it	ne
  40050e:	2001      	movne	r0, #1
  400510:	4b08      	ldr	r3, [pc, #32]	; (400534 <_adc_sync_init+0x34>)
  400512:	4798      	blx	r3

	device->hw = hw;
  400514:	602c      	str	r4, [r5, #0]
}

static inline void hri_adc_write_MR_reg(const void *const hw, hri_adc_mr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->ADC_MR = data;
  400516:	4b08      	ldr	r3, [pc, #32]	; (400538 <_adc_sync_init+0x38>)
  400518:	6063      	str	r3, [r4, #4]
}

static inline void hri_adc_write_EMR_reg(const void *const hw, hri_adc_emr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->ADC_EMR = data;
  40051a:	2000      	movs	r0, #0
  40051c:	6420      	str	r0, [r4, #64]	; 0x40
	((Adc *)hw)->ADC_SEQR1 = data;
  40051e:	4b07      	ldr	r3, [pc, #28]	; (40053c <_adc_sync_init+0x3c>)
  400520:	60a3      	str	r3, [r4, #8]
}

static inline void hri_adc_write_ACR_reg(const void *const hw, hri_adc_acr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->ADC_ACR = data;
  400522:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
	((Adc *)hw)->ADC_LCCWR = data;
  400526:	63a0      	str	r0, [r4, #56]	; 0x38
	((Adc *)hw)->ADC_CHER = mask;
  400528:	2301      	movs	r3, #1
  40052a:	6123      	str	r3, [r4, #16]
	((Adc *)hw)->ADC_COR = data;
  40052c:	64e0      	str	r0, [r4, #76]	; 0x4c

	return _adc_init(hw);
}
  40052e:	bd38      	pop	{r3, r4, r5, pc}
  400530:	004036f4 	.word	0x004036f4
  400534:	004004f9 	.word	0x004004f9
  400538:	20040000 	.word	0x20040000
  40053c:	06543210 	.word	0x06543210

00400540 <_adc_sync_enable_channel>:
/**
 * \brief Enable ADC
 */
void _adc_sync_enable_channel(struct _adc_sync_device *const device, const uint8_t channel)
{
	hri_adc_set_CHSR_reg(device->hw, (1 << channel));
  400540:	6802      	ldr	r2, [r0, #0]
  400542:	2301      	movs	r3, #1
  400544:	fa03 f101 	lsl.w	r1, r3, r1
	((Adc *)hw)->ADC_CHER = mask;
  400548:	6111      	str	r1, [r2, #16]
  40054a:	4770      	bx	lr

0040054c <_adc_sync_get_data_size>:
uint8_t _adc_sync_get_data_size(const struct _adc_sync_device *const device)
{
	(void)device;

	return 2;
}
  40054c:	2002      	movs	r0, #2
  40054e:	4770      	bx	lr

00400550 <_adc_sync_is_channel_conversion_done>:
/**
 * \brief Check if conversion is done
 */
bool _adc_sync_is_channel_conversion_done(const struct _adc_sync_device *const device, const uint8_t channel)
{
	return (bool)hri_adc_get_ISR_reg(device->hw, (1 << channel));
  400550:	6803      	ldr	r3, [r0, #0]
	tmp = ((Adc *)hw)->ADC_ISR;
  400552:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400554:	2301      	movs	r3, #1
  400556:	fa03 f101 	lsl.w	r1, r3, r1
  40055a:	4211      	tst	r1, r2
}
  40055c:	bf14      	ite	ne
  40055e:	4618      	movne	r0, r3
  400560:	2000      	moveq	r0, #0
  400562:	4770      	bx	lr

00400564 <_adc_sync_convert>:
/**
 * \brief Make conversion
 */
void _adc_sync_convert(struct _adc_sync_device *const device)
{
	hri_adc_write_CR_reg(device->hw, ADC_CR_START);
  400564:	6803      	ldr	r3, [r0, #0]
	((Adc *)hw)->ADC_CR = data;
  400566:	2202      	movs	r2, #2
  400568:	601a      	str	r2, [r3, #0]
  40056a:	4770      	bx	lr

0040056c <_adc_sync_read_channel_data>:
/**
 * \brief Retrieve the conversion result
 */
uint16_t _adc_sync_read_channel_data(const struct _adc_sync_device *const device, const uint8_t channel)
{
	return hri_adc_read_CDR_reg(device->hw, channel);
  40056c:	6803      	ldr	r3, [r0, #0]
	return tmp;
}

static inline hri_adc_cdr_reg_t hri_adc_read_CDR_reg(const void *const hw, uint8_t index)
{
	return ((Adc *)hw)->ADC_CDR[index];
  40056e:	3114      	adds	r1, #20
  400570:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
}
  400574:	b280      	uxth	r0, r0
  400576:	4770      	bx	lr

00400578 <_get_cycles_for_ms>:
	case 9:
		return (ms * (freq / 1000000) + 2) / 3 * 1000;
	case 8:
		return (ms * (freq / 100000) + 2) / 3 * 100;
	case 7:
		return (ms * (freq / 10000) + 2) / 3 * 10;
  400578:	f44f 7348 	mov.w	r3, #800	; 0x320
  40057c:	fb03 f000 	mul.w	r0, r3, r0
  400580:	3002      	adds	r0, #2
  400582:	4b04      	ldr	r3, [pc, #16]	; (400594 <_get_cycles_for_ms+0x1c>)
  400584:	fba3 3000 	umull	r3, r0, r3, r0
  400588:	0840      	lsrs	r0, r0, #1
  40058a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
  40058e:	0040      	lsls	r0, r0, #1
  400590:	4770      	bx	lr
  400592:	bf00      	nop
  400594:	aaaaaaab 	.word	0xaaaaaaab

00400598 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
  400598:	3901      	subs	r1, #1
  40059a:	d8fd      	bhi.n	400598 <_delay_cycles>
  40059c:	4770      	bx	lr
	...

004005a0 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
  4005a0:	b500      	push	{lr}
  4005a2:	b083      	sub	sp, #12
/**
 * \brief Enable FPU
 */
static inline void _fpu_enable(void)
{
	CRITICAL_SECTION_ENTER()
  4005a4:	a801      	add	r0, sp, #4
  4005a6:	4b0d      	ldr	r3, [pc, #52]	; (4005dc <_init_chip+0x3c>)
  4005a8:	4798      	blx	r3
	/** Set bits 20-23 to enable CP10 and CP11 coprocessors */
	SCB->CPACR |= (0xFu << 20);
  4005aa:	4a0d      	ldr	r2, [pc, #52]	; (4005e0 <_init_chip+0x40>)
  4005ac:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
  4005b0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4005b4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
  4005b8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4005bc:	f3bf 8f6f 	isb	sy
	__DSB();
	__ISB();
	CRITICAL_SECTION_LEAVE()
  4005c0:	a801      	add	r0, sp, #4
  4005c2:	4b08      	ldr	r3, [pc, #32]	; (4005e4 <_init_chip+0x44>)
  4005c4:	4798      	blx	r3

static inline void hri_efc_write_EEFC_FMR_FWS_bf(const void *const hw, hri_efc_eefc_fmr_reg_t data)
{
	uint32_t tmp;
	EFC_CRITICAL_SECTION_ENTER();
	tmp = ((Efc *)hw)->EEFC_FMR;
  4005c6:	4a08      	ldr	r2, [pc, #32]	; (4005e8 <_init_chip+0x48>)
  4005c8:	6813      	ldr	r3, [r2, #0]
	tmp &= ~EEFC_FMR_FWS_Msk;
  4005ca:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
	tmp |= EEFC_FMR_FWS(data);
	((Efc *)hw)->EEFC_FMR = tmp;
  4005ce:	6013      	str	r3, [r2, #0]
#if CONF_MEM2MEM_ENABLE
	_pmc_enable_periph_clock(ID_MEM2MEM);
	_dma_init();

#endif
	_pmc_init();
  4005d0:	4b06      	ldr	r3, [pc, #24]	; (4005ec <_init_chip+0x4c>)
  4005d2:	4798      	blx	r3
}
  4005d4:	b003      	add	sp, #12
  4005d6:	f85d fb04 	ldr.w	pc, [sp], #4
  4005da:	bf00      	nop
  4005dc:	004003c9 	.word	0x004003c9
  4005e0:	e000ed00 	.word	0xe000ed00
  4005e4:	004003d7 	.word	0x004003d7
  4005e8:	400e0a00 	.word	0x400e0a00
  4005ec:	004005f1 	.word	0x004005f1

004005f0 <_pmc_init>:
}

static inline void hri_pmc_set_CKGR_MOR_reg(const void *const hw, hri_pmc_ckgr_mor_reg_t mask)
{
	PMC_CRITICAL_SECTION_ENTER();
	((Pmc *)hw)->CKGR_MOR |= mask;
  4005f0:	4a1a      	ldr	r2, [pc, #104]	; (40065c <_pmc_init+0x6c>)
  4005f2:	6a13      	ldr	r3, [r2, #32]
  4005f4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005f8:	f043 0308 	orr.w	r3, r3, #8
  4005fc:	6213      	str	r3, [r2, #32]
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MOSCSELS) > 0;
}

static inline bool hri_pmc_get_SR_MOSCRCS_bit(const void *const hw)
{
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MOSCRCS) > 0;
  4005fe:	6e93      	ldr	r3, [r2, #104]	; 0x68
#if (CONF_PMC_MAINCK_ENABLE == 1)
	uint32_t data = 0;
#if (CONF_PMC_OSC24M_ENABLE && (CONF_PMC_MAINCK_SRC == 0))
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	hri_pmc_set_CKGR_MOR_reg(PMC, (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN));
	while (!hri_pmc_get_SR_MOSCRCS_bit(PMC)) {
  400600:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  400604:	d0fb      	beq.n	4005fe <_pmc_init+0xe>
	return ((Pmc *)hw)->CKGR_MOR;
  400606:	4a15      	ldr	r2, [pc, #84]	; (40065c <_pmc_init+0x6c>)
  400608:	6a13      	ldr	r3, [r2, #32]
		/* Wait until the Fast RC to stabilize */
	}
	/* Change Fast RC oscillator frequency */
	data = hri_pmc_read_CKGR_MOR_reg(PMC) & ~CKGR_MOR_MOSCRCF_Msk;
  40060a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
	data |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCF(CONF_PMC_OSC24M_SELECTOR);
  40060e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	((Pmc *)hw)->CKGR_MOR = data;
  400612:	6213      	str	r3, [r2, #32]
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MOSCRCS) > 0;
  400614:	6e93      	ldr	r3, [r2, #104]	; 0x68
	hri_pmc_write_CKGR_MOR_reg(PMC, data);
	while (!hri_pmc_get_SR_MOSCRCS_bit(PMC)) {
  400616:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  40061a:	d0fb      	beq.n	400614 <_pmc_init+0x24>
	return ((Pmc *)hw)->CKGR_MOR;
  40061c:	4a0f      	ldr	r2, [pc, #60]	; (40065c <_pmc_init+0x6c>)
  40061e:	6a13      	ldr	r3, [r2, #32]
		/* Wait until the Fast RC to stabilize */
	}
	/* Switch to Fast RC */
	data = hri_pmc_read_CKGR_MOR_reg(PMC) & ~CKGR_MOR_MOSCSEL;
  400620:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
	data |= CKGR_MOR_KEY_PASSWD;
  400624:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	((Pmc *)hw)->CKGR_MOR = data;
  400628:	6213      	str	r3, [r2, #32]
	tmp = ((Pmc *)hw)->PMC_MCKR;
  40062a:	6b13      	ldr	r3, [r2, #48]	; 0x30
	tmp &= ~PMC_MCKR_CSS_Msk;
  40062c:	f023 0303 	bic.w	r3, r3, #3
	tmp |= PMC_MCKR_CSS(data);
  400630:	f043 0301 	orr.w	r3, r3, #1
	((Pmc *)hw)->PMC_MCKR = tmp;
  400634:	6313      	str	r3, [r2, #48]	; 0x30
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MCKRDY) > 0;
  400636:	6e93      	ldr	r3, [r2, #104]	; 0x68
	}
#endif

#if ((CONF_PMC_MCK_SRC == PMC_MCKR_CSS_SLOW_CLK_Val) || (CONF_PMC_MCK_SRC == PMC_MCKR_CSS_MAIN_CLK_Val))
	hri_pmc_write_MCKR_CSS_bf(PMC, CONF_PMC_MCK_SRC);
	while (!hri_pmc_get_SR_MCKRDY_bit(PMC)) {
  400638:	f013 0f08 	tst.w	r3, #8
  40063c:	d0fb      	beq.n	400636 <_pmc_init+0x46>
	tmp = ((Pmc *)hw)->PMC_MCKR;
  40063e:	4a07      	ldr	r2, [pc, #28]	; (40065c <_pmc_init+0x6c>)
  400640:	6b13      	ldr	r3, [r2, #48]	; 0x30
	tmp &= ~PMC_MCKR_PRES_Msk;
  400642:	f023 0370 	bic.w	r3, r3, #112	; 0x70
	((Pmc *)hw)->PMC_MCKR = tmp;
  400646:	6313      	str	r3, [r2, #48]	; 0x30
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MCKRDY) > 0;
  400648:	6e93      	ldr	r3, [r2, #104]	; 0x68
		/* Wait until master clock is ready */
	}
	hri_pmc_write_MCKR_PRES_bf(PMC, CONF_PMC_MCK_PRESC);
	while (!hri_pmc_get_SR_MCKRDY_bit(PMC)) {
  40064a:	f013 0f08 	tst.w	r3, #8
  40064e:	d0fb      	beq.n	400648 <_pmc_init+0x58>
	((Pmc *)hw)->PMC_USB = data;
  400650:	4b02      	ldr	r3, [pc, #8]	; (40065c <_pmc_init+0x6c>)
  400652:	2200      	movs	r2, #0
  400654:	639a      	str	r2, [r3, #56]	; 0x38
	((Pmc *)hw)->PMC_SCER = PMC_SCSR_UDP;
  400656:	2280      	movs	r2, #128	; 0x80
  400658:	601a      	str	r2, [r3, #0]
  40065a:	4770      	bx	lr
  40065c:	400e0400 	.word	0x400e0400

00400660 <_i2c_m_sync_init>:
	}
	return NULL;
}

int32_t _i2c_m_sync_init(struct _i2c_m_sync_device *const dev, void *const hw)
{
  400660:	b538      	push	{r3, r4, r5, lr}
  400662:	460d      	mov	r5, r1
	ASSERT(dev && hw);
  400664:	4604      	mov	r4, r0
  400666:	b1e8      	cbz	r0, 4006a4 <_i2c_m_sync_init+0x44>
  400668:	b1f1      	cbz	r1, 4006a8 <_i2c_m_sync_init+0x48>
  40066a:	2001      	movs	r0, #1
  40066c:	2284      	movs	r2, #132	; 0x84
  40066e:	4913      	ldr	r1, [pc, #76]	; (4006bc <_i2c_m_sync_init+0x5c>)
  400670:	4b13      	ldr	r3, [pc, #76]	; (4006c0 <_i2c_m_sync_init+0x60>)
  400672:	4798      	blx	r3

	const struct _i2cm_sync_cfg *cfg;

	/* Get TWI base address from FLEXCOM */
	dev->hw = (void *)(((uint32_t)hw) + 0x600U);
  400674:	f505 62c0 	add.w	r2, r5, #1536	; 0x600
  400678:	6122      	str	r2, [r4, #16]
			return &(_i2cm_sync_cfgs[i]);
  40067a:	4b12      	ldr	r3, [pc, #72]	; (4006c4 <_i2c_m_sync_init+0x64>)
  40067c:	4912      	ldr	r1, [pc, #72]	; (4006c8 <_i2c_m_sync_init+0x68>)
  40067e:	428a      	cmp	r2, r1
  400680:	bf18      	it	ne
  400682:	2300      	movne	r3, #0
}

static inline void hri_flexcom_write_MR_reg(const void *const hw, hri_flexcom_mr_reg_t data)
{
	FLEXCOM_CRITICAL_SECTION_ENTER();
	((Flexcom *)hw)->FLEXCOM_MR = data;
  400684:	2203      	movs	r2, #3
  400686:	602a      	str	r2, [r5, #0]
	cfg     = _get_i2cm_sync_cfg(dev->hw);

	hri_flexcom_write_MR_reg(hw, FLEXCOM_MR_OPMODE_TWI);

	hri_twi_write_CR_reg(dev->hw, cfg->ctrl);
  400688:	6922      	ldr	r2, [r4, #16]
  40068a:	6859      	ldr	r1, [r3, #4]
}

static inline void hri_twi_write_CR_reg(const void *const hw, hri_twi_cr_reg_t data)
{
	TWI_CRITICAL_SECTION_ENTER();
	((Twi *)hw)->TWI_CR = data;
  40068c:	6011      	str	r1, [r2, #0]
	hri_twi_write_SMBTR_reg(dev->hw, cfg->smbtr);
  40068e:	6922      	ldr	r2, [r4, #16]
  400690:	6899      	ldr	r1, [r3, #8]
}

static inline void hri_twi_write_SMBTR_reg(const void *const hw, hri_twi_smbtr_reg_t data)
{
	TWI_CRITICAL_SECTION_ENTER();
	((Twi *)hw)->TWI_SMBTR = data;
  400692:	6391      	str	r1, [r2, #56]	; 0x38
	hri_twi_write_FILTR_reg(dev->hw, cfg->filtr);
  400694:	6922      	ldr	r2, [r4, #16]
  400696:	68d9      	ldr	r1, [r3, #12]
}

static inline void hri_twi_write_FILTR_reg(const void *const hw, hri_twi_filtr_reg_t data)
{
	TWI_CRITICAL_SECTION_ENTER();
	((Twi *)hw)->TWI_FILTR = data;
  400698:	6451      	str	r1, [r2, #68]	; 0x44
	hri_twi_write_CWGR_reg(dev->hw, cfg->cwgr);
  40069a:	6922      	ldr	r2, [r4, #16]
  40069c:	691b      	ldr	r3, [r3, #16]
	((Twi *)hw)->TWI_CWGR = data;
  40069e:	6113      	str	r3, [r2, #16]

	return ERR_NONE;
}
  4006a0:	2000      	movs	r0, #0
  4006a2:	bd38      	pop	{r3, r4, r5, pc}
	ASSERT(dev && hw);
  4006a4:	2000      	movs	r0, #0
  4006a6:	e7e1      	b.n	40066c <_i2c_m_sync_init+0xc>
  4006a8:	2284      	movs	r2, #132	; 0x84
  4006aa:	4904      	ldr	r1, [pc, #16]	; (4006bc <_i2c_m_sync_init+0x5c>)
  4006ac:	2000      	movs	r0, #0
  4006ae:	4b04      	ldr	r3, [pc, #16]	; (4006c0 <_i2c_m_sync_init+0x60>)
  4006b0:	4798      	blx	r3
	dev->hw = (void *)(((uint32_t)hw) + 0x600U);
  4006b2:	f505 63c0 	add.w	r3, r5, #1536	; 0x600
  4006b6:	6123      	str	r3, [r4, #16]
	return NULL;
  4006b8:	2300      	movs	r3, #0
  4006ba:	e7e3      	b.n	400684 <_i2c_m_sync_init+0x24>
  4006bc:	00403724 	.word	0x00403724
  4006c0:	004004f9 	.word	0x004004f9
  4006c4:	0040370c 	.word	0x0040370c
  4006c8:	40018600 	.word	0x40018600

004006cc <_i2c_m_sync_enable>:

	return ERR_NONE;
}

int32_t _i2c_m_sync_enable(struct _i2c_m_sync_device *const dev)
{
  4006cc:	b510      	push	{r4, lr}
	ASSERT(dev);
  4006ce:	4604      	mov	r4, r0
  4006d0:	22a2      	movs	r2, #162	; 0xa2
  4006d2:	4905      	ldr	r1, [pc, #20]	; (4006e8 <_i2c_m_sync_enable+0x1c>)
  4006d4:	3000      	adds	r0, #0
  4006d6:	bf18      	it	ne
  4006d8:	2001      	movne	r0, #1
  4006da:	4b04      	ldr	r3, [pc, #16]	; (4006ec <_i2c_m_sync_enable+0x20>)
  4006dc:	4798      	blx	r3

	hri_twi_write_CR_reg(dev->hw, TWI_CR_MSEN);
  4006de:	6923      	ldr	r3, [r4, #16]
	((Twi *)hw)->TWI_CR = data;
  4006e0:	2204      	movs	r2, #4
  4006e2:	601a      	str	r2, [r3, #0]

	return ERR_NONE;
}
  4006e4:	2000      	movs	r0, #0
  4006e6:	bd10      	pop	{r4, pc}
  4006e8:	00403724 	.word	0x00403724
  4006ec:	004004f9 	.word	0x004004f9

004006f0 <_i2c_m_sync_transfer>:

	return ERR_NONE;
}

int32_t _i2c_m_sync_transfer(struct _i2c_m_sync_device *const dev, struct _i2c_m_msg *msg)
{
  4006f0:	b570      	push	{r4, r5, r6, lr}
  4006f2:	460c      	mov	r4, r1
	ASSERT(dev && msg);
  4006f4:	4605      	mov	r5, r0
  4006f6:	2800      	cmp	r0, #0
  4006f8:	d02d      	beq.n	400756 <_i2c_m_sync_transfer+0x66>
  4006fa:	1c08      	adds	r0, r1, #0
  4006fc:	bf18      	it	ne
  4006fe:	2001      	movne	r0, #1
  400700:	22c8      	movs	r2, #200	; 0xc8
  400702:	4951      	ldr	r1, [pc, #324]	; (400848 <_i2c_m_sync_transfer+0x158>)
  400704:	4b51      	ldr	r3, [pc, #324]	; (40084c <_i2c_m_sync_transfer+0x15c>)
  400706:	4798      	blx	r3

	if (dev->service.msg.flags & I2C_M_BUSY) {
  400708:	886b      	ldrh	r3, [r5, #2]
  40070a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40070e:	f040 8098 	bne.w	400842 <_i2c_m_sync_transfer+0x152>
		return I2C_ERR_BUSY;
	}

	if (msg->flags & I2C_M_RD) {
  400712:	8863      	ldrh	r3, [r4, #2]
  400714:	f013 0f01 	tst.w	r3, #1
  400718:	d11f      	bne.n	40075a <_i2c_m_sync_transfer+0x6a>
{
	uint32_t i;
	uint32_t sr;
	int      ret = ERR_NONE;

	msg->flags |= I2C_M_BUSY;
  40071a:	8863      	ldrh	r3, [r4, #2]
  40071c:	b29b      	uxth	r3, r3
  40071e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400722:	8063      	strh	r3, [r4, #2]

	if (msg->addr & I2C_M_TEN) {
  400724:	8823      	ldrh	r3, [r4, #0]
  400726:	f413 6f80 	tst.w	r3, #1024	; 0x400
  40072a:	d05e      	beq.n	4007ea <_i2c_m_sync_transfer+0xfa>
		hri_twi_write_MMR_reg(dev->hw, TWI_MMR_DADR(0x78 | (msg->addr >> 8)) | TWI_MMR_IADRSZ(1));
  40072c:	692a      	ldr	r2, [r5, #16]
  40072e:	0a1b      	lsrs	r3, r3, #8
  400730:	f043 0378 	orr.w	r3, r3, #120	; 0x78
  400734:	041b      	lsls	r3, r3, #16
  400736:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
  40073a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
	((Twi *)hw)->TWI_MMR = data;
  40073e:	6053      	str	r3, [r2, #4]
		hri_twi_write_IADR_reg(dev->hw, msg->addr & 0xff);
  400740:	692b      	ldr	r3, [r5, #16]
  400742:	7822      	ldrb	r2, [r4, #0]
	((Twi *)hw)->TWI_IADR = data;
  400744:	60da      	str	r2, [r3, #12]
	} else {
		hri_twi_write_MMR_reg(dev->hw, TWI_MMR_DADR(msg->addr));
	}

	for (i = 0; i < msg->len; i++) {
  400746:	6863      	ldr	r3, [r4, #4]
  400748:	2b00      	cmp	r3, #0
  40074a:	d065      	beq.n	400818 <_i2c_m_sync_transfer+0x128>
  40074c:	2000      	movs	r0, #0
  40074e:	4601      	mov	r1, r0
		/* Wait for data is transferred from TWI_THR or if NACK is detected */
		do {
			sr = hri_twi_read_SR_reg(dev->hw);
			if (sr & TWI_SR_NACK) {
				ret = I2C_NACK;
  400750:	f06f 0601 	mvn.w	r6, #1
  400754:	e057      	b.n	400806 <_i2c_m_sync_transfer+0x116>
  400756:	2000      	movs	r0, #0
  400758:	e7d2      	b.n	400700 <_i2c_m_sync_transfer+0x10>

static inline int32_t _i2c_m_sync_read(struct _i2c_m_sync_device *const dev, struct _i2c_m_msg *msg)
{
	uint32_t i;

	msg->flags |= I2C_M_BUSY;
  40075a:	8863      	ldrh	r3, [r4, #2]
  40075c:	b29b      	uxth	r3, r3
  40075e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400762:	8063      	strh	r3, [r4, #2]

	if (msg->addr & I2C_M_TEN) {
  400764:	8823      	ldrh	r3, [r4, #0]
  400766:	f413 6f80 	tst.w	r3, #1024	; 0x400
  40076a:	d036      	beq.n	4007da <_i2c_m_sync_transfer+0xea>
		hri_twi_write_MMR_reg(dev->hw, TWI_MMR_DADR(0x78 | (msg->addr >> 8)) | TWI_MMR_IADRSZ(1) | TWI_MMR_MREAD);
  40076c:	692a      	ldr	r2, [r5, #16]
  40076e:	0a1b      	lsrs	r3, r3, #8
  400770:	f043 0378 	orr.w	r3, r3, #120	; 0x78
  400774:	041b      	lsls	r3, r3, #16
  400776:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
  40077a:	f443 5388 	orr.w	r3, r3, #4352	; 0x1100
	((Twi *)hw)->TWI_MMR = data;
  40077e:	6053      	str	r3, [r2, #4]
		hri_twi_write_IADR_reg(dev->hw, msg->addr & 0xff);
  400780:	692b      	ldr	r3, [r5, #16]
  400782:	7822      	ldrb	r2, [r4, #0]
	((Twi *)hw)->TWI_IADR = data;
  400784:	60da      	str	r2, [r3, #12]
	} else {
		hri_twi_write_MMR_reg(dev->hw, TWI_MMR_DADR(msg->addr) | TWI_MMR_MREAD);
	}
	/* In single data byte master read, the START and STOP must both be set */
	hri_twi_write_CR_reg(dev->hw, TWI_CR_START | ((msg->len == 1) ? TWI_CR_STOP : 0));
  400786:	692b      	ldr	r3, [r5, #16]
  400788:	6862      	ldr	r2, [r4, #4]
  40078a:	2a01      	cmp	r2, #1
  40078c:	bf0c      	ite	eq
  40078e:	2203      	moveq	r2, #3
  400790:	2201      	movne	r2, #1
	((Twi *)hw)->TWI_CR = data;
  400792:	601a      	str	r2, [r3, #0]

	for (i = 0; i < msg->len; i++) {
  400794:	6863      	ldr	r3, [r4, #4]
  400796:	b19b      	cbz	r3, 4007c0 <_i2c_m_sync_transfer+0xd0>
  400798:	2100      	movs	r1, #0
  40079a:	2002      	movs	r0, #2
		/* Wait for a byte has been received in TWI_RHR since last read */
		while (!hri_twi_get_SR_RXRDY_bit(dev->hw)) {
  40079c:	692a      	ldr	r2, [r5, #16]
	return (((Twi *)hw)->TWI_SR & TWI_SR_TXCOMP) > 0;
}

static inline bool hri_twi_get_SR_RXRDY_bit(const void *const hw)
{
	return (((Twi *)hw)->TWI_SR & TWI_SR_RXRDY) > 0;
  40079e:	6a13      	ldr	r3, [r2, #32]
  4007a0:	f013 0f02 	tst.w	r3, #2
  4007a4:	d0fb      	beq.n	40079e <_i2c_m_sync_transfer+0xae>
	return tmp;
}

static inline hri_twi_rhr_reg_t hri_twi_read_RHR_reg(const void *const hw)
{
	return ((Twi *)hw)->TWI_RHR;
  4007a6:	6b12      	ldr	r2, [r2, #48]	; 0x30
		};

		msg->buffer[i] = hri_twi_read_RHR_reg(dev->hw);
  4007a8:	68a3      	ldr	r3, [r4, #8]
  4007aa:	545a      	strb	r2, [r3, r1]
		/* In multiple data bytes master read, the STOP must be set after the
		 * last data received but one */
		if (i == (msg->len - 2)) {
  4007ac:	6863      	ldr	r3, [r4, #4]
  4007ae:	3b02      	subs	r3, #2
  4007b0:	428b      	cmp	r3, r1
			hri_twi_write_CR_reg(dev->hw, TWI_CR_STOP);
  4007b2:	bf04      	itt	eq
  4007b4:	692b      	ldreq	r3, [r5, #16]
	((Twi *)hw)->TWI_CR = data;
  4007b6:	6018      	streq	r0, [r3, #0]
	for (i = 0; i < msg->len; i++) {
  4007b8:	3101      	adds	r1, #1
  4007ba:	6863      	ldr	r3, [r4, #4]
  4007bc:	4299      	cmp	r1, r3
  4007be:	d3ed      	bcc.n	40079c <_i2c_m_sync_transfer+0xac>
		}
	}

	while (!hri_twi_get_SR_TXCOMP_bit(dev->hw)) {
  4007c0:	692a      	ldr	r2, [r5, #16]
	return (((Twi *)hw)->TWI_SR & TWI_SR_TXCOMP) > 0;
  4007c2:	6a13      	ldr	r3, [r2, #32]
  4007c4:	f013 0f01 	tst.w	r3, #1
  4007c8:	d0fb      	beq.n	4007c2 <_i2c_m_sync_transfer+0xd2>
	};
	dev->service.msg.flags &= ~I2C_M_BUSY;
  4007ca:	886b      	ldrh	r3, [r5, #2]
  4007cc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
  4007d0:	041b      	lsls	r3, r3, #16
  4007d2:	0c1b      	lsrs	r3, r3, #16
  4007d4:	806b      	strh	r3, [r5, #2]
		return _i2c_m_sync_read(dev, msg);
  4007d6:	2000      	movs	r0, #0
  4007d8:	bd70      	pop	{r4, r5, r6, pc}
		hri_twi_write_MMR_reg(dev->hw, TWI_MMR_DADR(msg->addr) | TWI_MMR_MREAD);
  4007da:	692a      	ldr	r2, [r5, #16]
  4007dc:	041b      	lsls	r3, r3, #16
  4007de:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
  4007e2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
	((Twi *)hw)->TWI_MMR = data;
  4007e6:	6053      	str	r3, [r2, #4]
  4007e8:	e7cd      	b.n	400786 <_i2c_m_sync_transfer+0x96>
		hri_twi_write_MMR_reg(dev->hw, TWI_MMR_DADR(msg->addr));
  4007ea:	692a      	ldr	r2, [r5, #16]
  4007ec:	041b      	lsls	r3, r3, #16
  4007ee:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
  4007f2:	6053      	str	r3, [r2, #4]
  4007f4:	e7a7      	b.n	400746 <_i2c_m_sync_transfer+0x56>
				ret = I2C_NACK;
  4007f6:	4630      	mov	r0, r6
		hri_twi_write_THR_reg(dev->hw, msg->buffer[i]);
  4007f8:	68a3      	ldr	r3, [r4, #8]
  4007fa:	5c5b      	ldrb	r3, [r3, r1]
	((Twi *)hw)->TWI_THR = data;
  4007fc:	6353      	str	r3, [r2, #52]	; 0x34
	for (i = 0; i < msg->len; i++) {
  4007fe:	3101      	adds	r1, #1
  400800:	6863      	ldr	r3, [r4, #4]
  400802:	4299      	cmp	r1, r3
  400804:	d209      	bcs.n	40081a <_i2c_m_sync_transfer+0x12a>
			sr = hri_twi_read_SR_reg(dev->hw);
  400806:	692a      	ldr	r2, [r5, #16]
	return ((Twi *)hw)->TWI_SR;
  400808:	6a13      	ldr	r3, [r2, #32]
			if (sr & TWI_SR_NACK) {
  40080a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40080e:	d1f2      	bne.n	4007f6 <_i2c_m_sync_transfer+0x106>
		} while (!(sr & TWI_SR_TXRDY));
  400810:	f013 0f04 	tst.w	r3, #4
  400814:	d0f8      	beq.n	400808 <_i2c_m_sync_transfer+0x118>
  400816:	e7ef      	b.n	4007f8 <_i2c_m_sync_transfer+0x108>
	for (i = 0; i < msg->len; i++) {
  400818:	2000      	movs	r0, #0
	if (msg->flags & I2C_M_STOP) {
  40081a:	8863      	ldrh	r3, [r4, #2]
  40081c:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  400820:	d106      	bne.n	400830 <_i2c_m_sync_transfer+0x140>
	dev->service.msg.flags &= ~I2C_M_BUSY;
  400822:	886b      	ldrh	r3, [r5, #2]
  400824:	f423 7380 	bic.w	r3, r3, #256	; 0x100
  400828:	041b      	lsls	r3, r3, #16
  40082a:	0c1b      	lsrs	r3, r3, #16
  40082c:	806b      	strh	r3, [r5, #2]
		return _i2c_m_sync_write(dev, msg);
  40082e:	bd70      	pop	{r4, r5, r6, pc}
		hri_twi_write_CR_reg(dev->hw, TWI_CR_STOP);
  400830:	692b      	ldr	r3, [r5, #16]
	((Twi *)hw)->TWI_CR = data;
  400832:	2202      	movs	r2, #2
  400834:	601a      	str	r2, [r3, #0]
		while (!hri_twi_get_SR_TXCOMP_bit(dev->hw)) {
  400836:	692a      	ldr	r2, [r5, #16]
	return (((Twi *)hw)->TWI_SR & TWI_SR_TXCOMP) > 0;
  400838:	6a13      	ldr	r3, [r2, #32]
  40083a:	f013 0f01 	tst.w	r3, #1
  40083e:	d0fb      	beq.n	400838 <_i2c_m_sync_transfer+0x148>
  400840:	e7ef      	b.n	400822 <_i2c_m_sync_transfer+0x132>
		return I2C_ERR_BUSY;
  400842:	f06f 0005 	mvn.w	r0, #5
}
  400846:	bd70      	pop	{r4, r5, r6, pc}
  400848:	00403724 	.word	0x00403724
  40084c:	004004f9 	.word	0x004004f9

00400850 <main>:
#include <atmel_start.h>
int main(void)
{
  400850:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  400854:	f2ad 6de4 	subw	sp, sp, #1764	; 0x6e4
	struct io_descriptor  *i2c0;
	struct i2c_m_sync_desc SPEAKER;

	volatile int i,j;
	volatile int x;
	volatile int maxIndex = 0;
  400858:	2400      	movs	r4, #0
  40085a:	f8cd 46a8 	str.w	r4, [sp, #1704]	; 0x6a8
	volatile int next =0;
  40085e:	f8cd 46a4 	str.w	r4, [sp, #1700]	; 0x6a4
	volatile double max = 0;
  400862:	2200      	movs	r2, #0
  400864:	2300      	movs	r3, #0
  400866:	f50d 61d3 	add.w	r1, sp, #1688	; 0x698
  40086a:	e9c1 2300 	strd	r2, r3, [r1]
	volatile double nu = 0.1;
  40086e:	a179      	add	r1, pc, #484	; (adr r1, 400a54 <main+0x204>)
  400870:	e9d1 0100 	ldrd	r0, r1, [r1]
  400874:	f50d 65d2 	add.w	r5, sp, #1680	; 0x690
  400878:	e9c5 0100 	strd	r0, r1, [r5]
	volatile double en = 0; 
  40087c:	f50d 61d1 	add.w	r1, sp, #1672	; 0x688
  400880:	e9c1 2300 	strd	r2, r3, [r1]
	volatile double phase;
	volatile double frequency = 1470.0/ 7.0;
  400884:	2200      	movs	r2, #0
  400886:	4b62      	ldr	r3, [pc, #392]	; (400a10 <main+0x1c0>)
  400888:	f50d 61cf 	add.w	r1, sp, #1656	; 0x678
  40088c:	e9c1 2300 	strd	r2, r3, [r1]
	volatile double t = 1470.0;
  400890:	a35d      	add	r3, pc, #372	; (adr r3, 400a08 <main+0x1b8>)
  400892:	e9d3 2300 	ldrd	r2, r3, [r3]
  400896:	f50d 61ce 	add.w	r1, sp, #1648	; 0x670
  40089a:	e9c1 2300 	strd	r2, r3, [r1]
	volatile double signal[MAXSAMPLE] = {0};
  40089e:	f44f 7648 	mov.w	r6, #800	; 0x320
  4008a2:	4632      	mov	r2, r6
  4008a4:	4621      	mov	r1, r4
  4008a6:	a8d4      	add	r0, sp, #848	; 0x350
  4008a8:	4d5a      	ldr	r5, [pc, #360]	; (400a14 <main+0x1c4>)
  4008aa:	47a8      	blx	r5
	volatile double found[MAXSAMPLE] = {0};
  4008ac:	4632      	mov	r2, r6
  4008ae:	4621      	mov	r1, r4
  4008b0:	a80c      	add	r0, sp, #48	; 0x30
  4008b2:	47a8      	blx	r5

	static volatile double ww[3][MAXSAMPLE];
	static volatile double final[MAXSAMPLE] = {0};
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  4008b4:	4b58      	ldr	r3, [pc, #352]	; (400a18 <main+0x1c8>)
  4008b6:	4798      	blx	r3
	i2c_m_sync_init(&i2c0, FLEXCOM3);
  4008b8:	4958      	ldr	r1, [pc, #352]	; (400a1c <main+0x1cc>)
  4008ba:	f50d 60db 	add.w	r0, sp, #1752	; 0x6d8
  4008be:	4b58      	ldr	r3, [pc, #352]	; (400a20 <main+0x1d0>)
  4008c0:	4798      	blx	r3
	adc_sync_init(&mic, ADC, (void *)NULL);
  4008c2:	4622      	mov	r2, r4
  4008c4:	4957      	ldr	r1, [pc, #348]	; (400a24 <main+0x1d4>)
  4008c6:	f20d 60dc 	addw	r0, sp, #1756	; 0x6dc
  4008ca:	4b57      	ldr	r3, [pc, #348]	; (400a28 <main+0x1d8>)
  4008cc:	4798      	blx	r3
	adc_sync_enable_channel(&mic, CONF_ADC_0_CHANNEL_0);
  4008ce:	4621      	mov	r1, r4
  4008d0:	f20d 60dc 	addw	r0, sp, #1756	; 0x6dc
  4008d4:	4b55      	ldr	r3, [pc, #340]	; (400a2c <main+0x1dc>)
  4008d6:	4798      	blx	r3

	i2c_m_sync_get_io_descriptor(&SPEAKER, &i2c0);
  4008d8:	f50d 61db 	add.w	r1, sp, #1752	; 0x6d8
  4008dc:	f50d 60d7 	add.w	r0, sp, #1720	; 0x6b8
  4008e0:	4b53      	ldr	r3, [pc, #332]	; (400a30 <main+0x1e0>)
  4008e2:	4798      	blx	r3
	i2c_m_sync_enable(&SPEAKER);
  4008e4:	f50d 60d7 	add.w	r0, sp, #1720	; 0x6b8
  4008e8:	4b52      	ldr	r3, [pc, #328]	; (400a34 <main+0x1e4>)
  4008ea:	4798      	blx	r3
	i2c_m_sync_set_slaveaddr(&SPEAKER, 0x61, I2C_M_SEVEN);
  4008ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4008f0:	2161      	movs	r1, #97	; 0x61
  4008f2:	f50d 60d7 	add.w	r0, sp, #1720	; 0x6b8
  4008f6:	4b50      	ldr	r3, [pc, #320]	; (400a38 <main+0x1e8>)
  4008f8:	4798      	blx	r3
	
	delay_ms(500);
  4008fa:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
  4008fe:	4b4f      	ldr	r3, [pc, #316]	; (400a3c <main+0x1ec>)
  400900:	4798      	blx	r3
	
	//Initialized the weight
	for (i =0; i < 3; i++)
  400902:	f8cd 46b4 	str.w	r4, [sp, #1716]	; 0x6b4
  400906:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  40090a:	2b02      	cmp	r3, #2
  40090c:	dc25      	bgt.n	40095a <main+0x10a>
		for (j=0; j <MAXSAMPLE; j++)
			ww[i][j] = 0.0; 
  40090e:	484c      	ldr	r0, [pc, #304]	; (400a40 <main+0x1f0>)
  400910:	2164      	movs	r1, #100	; 0x64
  400912:	2600      	movs	r6, #0
  400914:	2700      	movs	r7, #0
		for (j=0; j <MAXSAMPLE; j++)
  400916:	f8cd 46b0 	str.w	r4, [sp, #1712]	; 0x6b0
  40091a:	f8dd 36b0 	ldr.w	r3, [sp, #1712]	; 0x6b0
  40091e:	2b63      	cmp	r3, #99	; 0x63
  400920:	dc12      	bgt.n	400948 <main+0xf8>
			ww[i][j] = 0.0; 
  400922:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400926:	f8dd 26b0 	ldr.w	r2, [sp, #1712]	; 0x6b0
  40092a:	fb01 2303 	mla	r3, r1, r3, r2
  40092e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
  400932:	e9c3 6700 	strd	r6, r7, [r3]
		for (j=0; j <MAXSAMPLE; j++)
  400936:	f8dd 36b0 	ldr.w	r3, [sp, #1712]	; 0x6b0
  40093a:	3301      	adds	r3, #1
  40093c:	f8cd 36b0 	str.w	r3, [sp, #1712]	; 0x6b0
  400940:	f8dd 36b0 	ldr.w	r3, [sp, #1712]	; 0x6b0
  400944:	2b63      	cmp	r3, #99	; 0x63
  400946:	ddec      	ble.n	400922 <main+0xd2>
	for (i =0; i < 3; i++)
  400948:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  40094c:	3301      	adds	r3, #1
  40094e:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400952:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400956:	2b02      	cmp	r3, #2
  400958:	dddd      	ble.n	400916 <main+0xc6>
	//Sample the audio 
	for (i = 0; i < MAXSAMPLE; i++){
  40095a:	2300      	movs	r3, #0
  40095c:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400960:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400964:	2b63      	cmp	r3, #99	; 0x63
  400966:	dc79      	bgt.n	400a5c <main+0x20c>
		volatile uint8_t buffer_ch0[2];
		volatile int16_t rx;
		adc_sync_read_channel(&ADC_0, CONF_ADC_0_CHANNEL_0, buffer_ch0, 2);
  400968:	4f36      	ldr	r7, [pc, #216]	; (400a44 <main+0x1f4>)
  40096a:	4e37      	ldr	r6, [pc, #220]	; (400a48 <main+0x1f8>)
		rx  =buffer_ch0[0] + (buffer_ch0[1] << 8);
		//rx = 2047+2047*cos(2.*M_PI*i/7 + M_PI/4);
		rx &= 0x0fff;
		signal[i] = ((double ) rx) ;
  40096c:	4d37      	ldr	r5, [pc, #220]	; (400a4c <main+0x1fc>)
  40096e:	e008      	b.n	400982 <main+0x132>
	for (i = 0; i < MAXSAMPLE; i++){
  400970:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400974:	3301      	adds	r3, #1
  400976:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  40097a:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  40097e:	2b63      	cmp	r3, #99	; 0x63
  400980:	dc6c      	bgt.n	400a5c <main+0x20c>
		adc_sync_read_channel(&ADC_0, CONF_ADC_0_CHANNEL_0, buffer_ch0, 2);
  400982:	2302      	movs	r3, #2
  400984:	aa07      	add	r2, sp, #28
  400986:	2100      	movs	r1, #0
  400988:	4638      	mov	r0, r7
  40098a:	47b0      	blx	r6
		rx  =buffer_ch0[0] + (buffer_ch0[1] << 8);
  40098c:	f89d 301c 	ldrb.w	r3, [sp, #28]
  400990:	f89d 201d 	ldrb.w	r2, [sp, #29]
  400994:	eb03 2302 	add.w	r3, r3, r2, lsl #8
  400998:	b21b      	sxth	r3, r3
  40099a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
		rx &= 0x0fff;
  40099e:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
  4009a2:	f3c3 030b 	ubfx	r3, r3, #0, #12
  4009a6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
		signal[i] = ((double ) rx) ;
  4009aa:	f8dd 46b4 	ldr.w	r4, [sp, #1716]	; 0x6b4
  4009ae:	f8bd 0026 	ldrh.w	r0, [sp, #38]	; 0x26
  4009b2:	b200      	sxth	r0, r0
  4009b4:	47a8      	blx	r5
  4009b6:	abd4      	add	r3, sp, #848	; 0x350
  4009b8:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
  4009bc:	e9c4 0100 	strd	r0, r1, [r4]
		if ((int)(signal[i]) > (int)(max)){
  4009c0:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4009c4:	aad4      	add	r2, sp, #848	; 0x350
  4009c6:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  4009ca:	e9d3 0100 	ldrd	r0, r1, [r3]
  4009ce:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  4009d2:	e9d3 ab00 	ldrd	sl, fp, [r3]
  4009d6:	4c1e      	ldr	r4, [pc, #120]	; (400a50 <main+0x200>)
  4009d8:	47a0      	blx	r4
  4009da:	4680      	mov	r8, r0
  4009dc:	4650      	mov	r0, sl
  4009de:	4659      	mov	r1, fp
  4009e0:	47a0      	blx	r4
  4009e2:	4580      	cmp	r8, r0
  4009e4:	ddc4      	ble.n	400970 <main+0x120>
			max = signal[i];
  4009e6:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4009ea:	aad4      	add	r2, sp, #848	; 0x350
  4009ec:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  4009f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4009f4:	f50d 61d3 	add.w	r1, sp, #1688	; 0x698
  4009f8:	e9c1 2300 	strd	r2, r3, [r1]
			maxIndex = i;
  4009fc:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400a00:	f8cd 36a8 	str.w	r3, [sp, #1704]	; 0x6a8
  400a04:	e7b4      	b.n	400970 <main+0x120>
  400a06:	bf00      	nop
  400a08:	00000000 	.word	0x00000000
  400a0c:	4096f800 	.word	0x4096f800
  400a10:	406a4000 	.word	0x406a4000
  400a14:	00403699 	.word	0x00403699
  400a18:	00400175 	.word	0x00400175
  400a1c:	40018000 	.word	0x40018000
  400a20:	00400465 	.word	0x00400465
  400a24:	40038000 	.word	0x40038000
  400a28:	004002cd 	.word	0x004002cd
  400a2c:	004002fd 	.word	0x004002fd
  400a30:	004004c1 	.word	0x004004c1
  400a34:	004004a5 	.word	0x004004a5
  400a38:	004004b1 	.word	0x004004b1
  400a3c:	004003e5 	.word	0x004003e5
  400a40:	20000088 	.word	0x20000088
  400a44:	20000d08 	.word	0x20000d08
  400a48:	00400329 	.word	0x00400329
  400a4c:	00402fc9 	.word	0x00402fc9
  400a50:	004035f5 	.word	0x004035f5
  400a54:	9999999a 	.word	0x9999999a
  400a58:	3fb99999 	.word	0x3fb99999
		}
	}

	//Find the next occurrence of the peak
	for (i = maxIndex +1; i< MAXSAMPLE; i++){
  400a5c:	f8dd 36a8 	ldr.w	r3, [sp, #1704]	; 0x6a8
  400a60:	3301      	adds	r3, #1
  400a62:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400a66:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400a6a:	2b63      	cmp	r3, #99	; 0x63
  400a6c:	dc15      	bgt.n	400a9a <main+0x24a>
		if ((signal[i]) == (signal[i] )){
  400a6e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400a72:	aad4      	add	r2, sp, #848	; 0x350
  400a74:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400a78:	e9d3 0100 	ldrd	r0, r1, [r3]
  400a7c:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400a80:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400a84:	e9d3 2300 	ldrd	r2, r3, [r3]
  400a88:	4c99      	ldr	r4, [pc, #612]	; (400cf0 <main+0x4a0>)
  400a8a:	47a0      	blx	r4
  400a8c:	2800      	cmp	r0, #0
  400a8e:	f000 8308 	beq.w	4010a2 <main+0x852>
			next = i;
  400a92:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400a96:	f8cd 36a4 	str.w	r3, [sp, #1700]	; 0x6a4
			break;
		}
	}
	//Find the following occurance of the peak
	for(i = next + 1; i <MAXSAMPLE; i++)
  400a9a:	f8dd 36a4 	ldr.w	r3, [sp, #1700]	; 0x6a4
  400a9e:	3301      	adds	r3, #1
  400aa0:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400aa4:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400aa8:	2b63      	cmp	r3, #99	; 0x63
  400aaa:	dc38      	bgt.n	400b1e <main+0x2ce>
		if (signal[i] >=(max - 0.005 * 4095) && signal[i] <=(max + 0.005 * 4095))
  400aac:	4f91      	ldr	r7, [pc, #580]	; (400cf4 <main+0x4a4>)
  400aae:	f20f 2918 	addw	r9, pc, #536	; 0x218
  400ab2:	e9d9 8900 	ldrd	r8, r9, [r9]
  400ab6:	4e90      	ldr	r6, [pc, #576]	; (400cf8 <main+0x4a8>)
  400ab8:	4d90      	ldr	r5, [pc, #576]	; (400cfc <main+0x4ac>)
  400aba:	4c91      	ldr	r4, [pc, #580]	; (400d00 <main+0x4b0>)
  400abc:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400ac0:	aad4      	add	r2, sp, #848	; 0x350
  400ac2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400ac6:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400aca:	4642      	mov	r2, r8
  400acc:	464b      	mov	r3, r9
  400ace:	f50d 61d3 	add.w	r1, sp, #1688	; 0x698
  400ad2:	e9d1 0100 	ldrd	r0, r1, [r1]
  400ad6:	47b8      	blx	r7
  400ad8:	4602      	mov	r2, r0
  400ada:	460b      	mov	r3, r1
  400adc:	4650      	mov	r0, sl
  400ade:	4659      	mov	r1, fp
  400ae0:	47b0      	blx	r6
  400ae2:	b198      	cbz	r0, 400b0c <main+0x2bc>
  400ae4:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400ae8:	aad4      	add	r2, sp, #848	; 0x350
  400aea:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400aee:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400af2:	4642      	mov	r2, r8
  400af4:	464b      	mov	r3, r9
  400af6:	f50d 61d3 	add.w	r1, sp, #1688	; 0x698
  400afa:	e9d1 0100 	ldrd	r0, r1, [r1]
  400afe:	47a8      	blx	r5
  400b00:	4602      	mov	r2, r0
  400b02:	460b      	mov	r3, r1
  400b04:	4650      	mov	r0, sl
  400b06:	4659      	mov	r1, fp
  400b08:	47a0      	blx	r4
  400b0a:	b940      	cbnz	r0, 400b1e <main+0x2ce>
	for(i = next + 1; i <MAXSAMPLE; i++)
  400b0c:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400b10:	3301      	adds	r3, #1
  400b12:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400b16:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400b1a:	2b63      	cmp	r3, #99	; 0x63
  400b1c:	ddce      	ble.n	400abc <main+0x26c>
			break;
			
	//Develop the parameter of the signal 
	frequency = 1/((double)(i - next +1)/ 1470);
  400b1e:	f8dd 06b4 	ldr.w	r0, [sp, #1716]	; 0x6b4
  400b22:	f8dd 36a4 	ldr.w	r3, [sp, #1700]	; 0x6a4
  400b26:	1ac0      	subs	r0, r0, r3
  400b28:	3001      	adds	r0, #1
  400b2a:	4b76      	ldr	r3, [pc, #472]	; (400d04 <main+0x4b4>)
  400b2c:	4798      	blx	r3
  400b2e:	4c76      	ldr	r4, [pc, #472]	; (400d08 <main+0x4b8>)
  400b30:	a367      	add	r3, pc, #412	; (adr r3, 400cd0 <main+0x480>)
  400b32:	e9d3 2300 	ldrd	r2, r3, [r3]
  400b36:	47a0      	blx	r4
  400b38:	4602      	mov	r2, r0
  400b3a:	460b      	mov	r3, r1
  400b3c:	2000      	movs	r0, #0
  400b3e:	4973      	ldr	r1, [pc, #460]	; (400d0c <main+0x4bc>)
  400b40:	47a0      	blx	r4
  400b42:	f50d 63cf 	add.w	r3, sp, #1656	; 0x678
  400b46:	e9c3 0100 	strd	r0, r1, [r3]
	x = (int) (1470.0/ (2.0 *frequency));
  400b4a:	e9d3 0100 	ldrd	r0, r1, [r3]
  400b4e:	4602      	mov	r2, r0
  400b50:	460b      	mov	r3, r1
  400b52:	4d6a      	ldr	r5, [pc, #424]	; (400cfc <main+0x4ac>)
  400b54:	47a8      	blx	r5
  400b56:	4602      	mov	r2, r0
  400b58:	460b      	mov	r3, r1
  400b5a:	a15d      	add	r1, pc, #372	; (adr r1, 400cd0 <main+0x480>)
  400b5c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400b60:	47a0      	blx	r4
  400b62:	4b6b      	ldr	r3, [pc, #428]	; (400d10 <main+0x4c0>)
  400b64:	4798      	blx	r3
  400b66:	f8cd 06ac 	str.w	r0, [sp, #1708]	; 0x6ac
	en = acos(-1* (signal[x-1]/(max/2) -1));
  400b6a:	f8dd 36ac 	ldr.w	r3, [sp, #1708]	; 0x6ac
  400b6e:	f50d 62dc 	add.w	r2, sp, #1760	; 0x6e0
  400b72:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400b76:	f5a3 7366 	sub.w	r3, r3, #920	; 0x398
  400b7a:	e9d3 6700 	ldrd	r6, r7, [r3]
  400b7e:	2200      	movs	r2, #0
  400b80:	4b64      	ldr	r3, [pc, #400]	; (400d14 <main+0x4c4>)
  400b82:	f50d 61d3 	add.w	r1, sp, #1688	; 0x698
  400b86:	e9d1 0100 	ldrd	r0, r1, [r1]
  400b8a:	4d63      	ldr	r5, [pc, #396]	; (400d18 <main+0x4c8>)
  400b8c:	47a8      	blx	r5
  400b8e:	4602      	mov	r2, r0
  400b90:	460b      	mov	r3, r1
  400b92:	4630      	mov	r0, r6
  400b94:	4639      	mov	r1, r7
  400b96:	47a0      	blx	r4
  400b98:	2200      	movs	r2, #0
  400b9a:	4b5c      	ldr	r3, [pc, #368]	; (400d0c <main+0x4bc>)
  400b9c:	4c55      	ldr	r4, [pc, #340]	; (400cf4 <main+0x4a4>)
  400b9e:	47a0      	blx	r4
  400ba0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  400ba4:	4619      	mov	r1, r3
  400ba6:	4b5d      	ldr	r3, [pc, #372]	; (400d1c <main+0x4cc>)
  400ba8:	4798      	blx	r3
  400baa:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  400bae:	e9c3 0100 	strd	r0, r1, [r3]
	phase = en < 0 ? en *-.5 : x * .5;	
  400bb2:	2200      	movs	r2, #0
  400bb4:	2300      	movs	r3, #0
  400bb6:	f50d 61d1 	add.w	r1, sp, #1672	; 0x688
  400bba:	e9d1 0100 	ldrd	r0, r1, [r1]
  400bbe:	4c58      	ldr	r4, [pc, #352]	; (400d20 <main+0x4d0>)
  400bc0:	47a0      	blx	r4
  400bc2:	2800      	cmp	r0, #0
  400bc4:	f000 8277 	beq.w	4010b6 <main+0x866>
  400bc8:	2200      	movs	r2, #0
  400bca:	4b56      	ldr	r3, [pc, #344]	; (400d24 <main+0x4d4>)
  400bcc:	f50d 61d1 	add.w	r1, sp, #1672	; 0x688
  400bd0:	e9d1 0100 	ldrd	r0, r1, [r1]
  400bd4:	47a8      	blx	r5
  400bd6:	f50d 63d0 	add.w	r3, sp, #1664	; 0x680
  400bda:	e9c3 0100 	strd	r0, r1, [r3]
	
	//Recreate the signal
	for (i = 0; i <MAXSAMPLE; i++){
  400bde:	2300      	movs	r3, #0
  400be0:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400be4:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400be8:	2b63      	cmp	r3, #99	; 0x63
  400bea:	dc59      	bgt.n	400ca0 <main+0x450>
		found[i] = max/2 * cos(2*M_PI * frequency * (double)i/ t + phase ) + max/2;
  400bec:	4d4a      	ldr	r5, [pc, #296]	; (400d18 <main+0x4c8>)
  400bee:	ed9f 9b3a 	vldr	d9, [pc, #232]	; 400cd8 <main+0x488>
  400bf2:	f8df a110 	ldr.w	sl, [pc, #272]	; 400d04 <main+0x4b4>
  400bf6:	f8df b110 	ldr.w	fp, [pc, #272]	; 400d08 <main+0x4b8>
  400bfa:	4f40      	ldr	r7, [pc, #256]	; (400cfc <main+0x4ac>)
  400bfc:	4e4a      	ldr	r6, [pc, #296]	; (400d28 <main+0x4d8>)
  400bfe:	ed9f 8b38 	vldr	d8, [pc, #224]	; 400ce0 <main+0x490>
  400c02:	f8dd 46b4 	ldr.w	r4, [sp, #1716]	; 0x6b4
  400c06:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  400c0a:	ed93 bb00 	vldr	d11, [r3]
  400c0e:	f50d 63cf 	add.w	r3, sp, #1656	; 0x678
  400c12:	e9d3 0100 	ldrd	r0, r1, [r3]
  400c16:	f8dd 86b4 	ldr.w	r8, [sp, #1716]	; 0x6b4
  400c1a:	f50d 63ce 	add.w	r3, sp, #1648	; 0x670
  400c1e:	ed93 cb00 	vldr	d12, [r3]
  400c22:	f50d 63d0 	add.w	r3, sp, #1664	; 0x680
  400c26:	ed93 ab00 	vldr	d10, [r3]
  400c2a:	ec53 2b19 	vmov	r2, r3, d9
  400c2e:	47a8      	blx	r5
  400c30:	e9cd 0104 	strd	r0, r1, [sp, #16]
  400c34:	4640      	mov	r0, r8
  400c36:	47d0      	blx	sl
  400c38:	4602      	mov	r2, r0
  400c3a:	460b      	mov	r3, r1
  400c3c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400c40:	47a8      	blx	r5
  400c42:	ec53 2b1c 	vmov	r2, r3, d12
  400c46:	47d8      	blx	fp
  400c48:	ec53 2b1a 	vmov	r2, r3, d10
  400c4c:	47b8      	blx	r7
  400c4e:	47b0      	blx	r6
  400c50:	4680      	mov	r8, r0
  400c52:	4689      	mov	r9, r1
  400c54:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  400c58:	ed93 ab00 	vldr	d10, [r3]
  400c5c:	ec53 2b18 	vmov	r2, r3, d8
  400c60:	ec51 0b1b 	vmov	r0, r1, d11
  400c64:	47a8      	blx	r5
  400c66:	4642      	mov	r2, r8
  400c68:	464b      	mov	r3, r9
  400c6a:	47a8      	blx	r5
  400c6c:	4680      	mov	r8, r0
  400c6e:	4689      	mov	r9, r1
  400c70:	ec53 2b18 	vmov	r2, r3, d8
  400c74:	ec51 0b1a 	vmov	r0, r1, d10
  400c78:	47a8      	blx	r5
  400c7a:	4602      	mov	r2, r0
  400c7c:	460b      	mov	r3, r1
  400c7e:	4640      	mov	r0, r8
  400c80:	4649      	mov	r1, r9
  400c82:	47b8      	blx	r7
  400c84:	ab0c      	add	r3, sp, #48	; 0x30
  400c86:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
  400c8a:	e9c4 0100 	strd	r0, r1, [r4]
	for (i = 0; i <MAXSAMPLE; i++){
  400c8e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400c92:	3301      	adds	r3, #1
  400c94:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400c98:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400c9c:	2b63      	cmp	r3, #99	; 0x63
  400c9e:	ddb0      	ble.n	400c02 <main+0x3b2>
	}
	//Develop the weight
	for (i = 2; i < MAXSAMPLE ; i++){
  400ca0:	2302      	movs	r3, #2
  400ca2:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400ca6:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400caa:	2b63      	cmp	r3, #99	; 0x63
  400cac:	f300 815a 	bgt.w	400f64 <main+0x714>
		
		en=found[i]-ww[0][i]*found[i]-ww[1][i]*found[i-1]-ww[2][i ]*found[i-2];//ERROR SGNAL S-(S+E)
  400cb0:	4d1e      	ldr	r5, [pc, #120]	; (400d2c <main+0x4dc>)
  400cb2:	4c19      	ldr	r4, [pc, #100]	; (400d18 <main+0x4c8>)
  400cb4:	f8df 903c 	ldr.w	r9, [pc, #60]	; 400cf4 <main+0x4a4>
		nu=2*(found[i] *found[i]+found[i-1] * found[i-1]+found[i-2] * found[i-2]);//STEP SIZE USED
  400cb8:	f8df 8040 	ldr.w	r8, [pc, #64]	; 400cfc <main+0x4ac>
		nu=1/nu;
  400cbc:	f8df a048 	ldr.w	sl, [pc, #72]	; 400d08 <main+0x4b8>
  400cc0:	ed9f cb09 	vldr	d12, [pc, #36]	; 400ce8 <main+0x498>
  400cc4:	e034      	b.n	400d30 <main+0x4e0>
  400cc6:	bf00      	nop
  400cc8:	9999999a 	.word	0x9999999a
  400ccc:	40347999 	.word	0x40347999
  400cd0:	00000000 	.word	0x00000000
  400cd4:	4096f800 	.word	0x4096f800
  400cd8:	54442d18 	.word	0x54442d18
  400cdc:	401921fb 	.word	0x401921fb
  400ce0:	00000000 	.word	0x00000000
  400ce4:	3fe00000 	.word	0x3fe00000
  400ce8:	00000000 	.word	0x00000000
  400cec:	3ff00000 	.word	0x3ff00000
  400cf0:	00403565 	.word	0x00403565
  400cf4:	00402d2d 	.word	0x00402d2d
  400cf8:	004035a1 	.word	0x004035a1
  400cfc:	00402d31 	.word	0x00402d31
  400d00:	0040358d 	.word	0x0040358d
  400d04:	00402fc9 	.word	0x00402fc9
  400d08:	004032e9 	.word	0x004032e9
  400d0c:	3ff00000 	.word	0x3ff00000
  400d10:	004035f5 	.word	0x004035f5
  400d14:	3fe00000 	.word	0x3fe00000
  400d18:	00403095 	.word	0x00403095
  400d1c:	0040138d 	.word	0x0040138d
  400d20:	00403579 	.word	0x00403579
  400d24:	bfe00000 	.word	0xbfe00000
  400d28:	004012f9 	.word	0x004012f9
  400d2c:	20000088 	.word	0x20000088
		en=found[i]-ww[0][i]*found[i]-ww[1][i]*found[i-1]-ww[2][i ]*found[i-2];//ERROR SGNAL S-(S+E)
  400d30:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d34:	aa0c      	add	r2, sp, #48	; 0x30
  400d36:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400d3a:	e9d3 6700 	ldrd	r6, r7, [r3]
  400d3e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d42:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400d46:	e9d3 0100 	ldrd	r0, r1, [r3]
  400d4a:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d4e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400d52:	e9d3 bc00 	ldrd	fp, ip, [r3]
  400d56:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d5a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400d5e:	ed93 abc8 	vldr	d10, [r3, #800]	; 0x320
  400d62:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d66:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400d6a:	ed13 bb02 	vldr	d11, [r3, #-8]
  400d6e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d72:	33c8      	adds	r3, #200	; 0xc8
  400d74:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400d78:	ed93 8b00 	vldr	d8, [r3]
  400d7c:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400d80:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400d84:	ed13 9b04 	vldr	d9, [r3, #-16]
  400d88:	465a      	mov	r2, fp
  400d8a:	4663      	mov	r3, ip
  400d8c:	47a0      	blx	r4
  400d8e:	4602      	mov	r2, r0
  400d90:	460b      	mov	r3, r1
  400d92:	4630      	mov	r0, r6
  400d94:	4639      	mov	r1, r7
  400d96:	47c8      	blx	r9
  400d98:	4606      	mov	r6, r0
  400d9a:	460f      	mov	r7, r1
  400d9c:	ec53 2b1b 	vmov	r2, r3, d11
  400da0:	ec51 0b1a 	vmov	r0, r1, d10
  400da4:	47a0      	blx	r4
  400da6:	4602      	mov	r2, r0
  400da8:	460b      	mov	r3, r1
  400daa:	4630      	mov	r0, r6
  400dac:	4639      	mov	r1, r7
  400dae:	47c8      	blx	r9
  400db0:	4606      	mov	r6, r0
  400db2:	460f      	mov	r7, r1
  400db4:	ec53 2b19 	vmov	r2, r3, d9
  400db8:	ec51 0b18 	vmov	r0, r1, d8
  400dbc:	47a0      	blx	r4
  400dbe:	4602      	mov	r2, r0
  400dc0:	460b      	mov	r3, r1
  400dc2:	4630      	mov	r0, r6
  400dc4:	4639      	mov	r1, r7
  400dc6:	47c8      	blx	r9
  400dc8:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  400dcc:	e9c3 0100 	strd	r0, r1, [r3]
		nu=2*(found[i] *found[i]+found[i-1] * found[i-1]+found[i-2] * found[i-2]);//STEP SIZE USED
  400dd0:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400dd4:	aa0c      	add	r2, sp, #48	; 0x30
  400dd6:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400dda:	e9d3 0100 	ldrd	r0, r1, [r3]
  400dde:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400de2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400de6:	e9d3 6700 	ldrd	r6, r7, [r3]
  400dea:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400dee:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400df2:	ed13 ab02 	vldr	d10, [r3, #-8]
  400df6:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400dfa:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400dfe:	ed13 bb02 	vldr	d11, [r3, #-8]
  400e02:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400e06:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400e0a:	ed13 8b04 	vldr	d8, [r3, #-16]
  400e0e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400e12:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400e16:	ed13 9b04 	vldr	d9, [r3, #-16]
  400e1a:	4632      	mov	r2, r6
  400e1c:	463b      	mov	r3, r7
  400e1e:	47a0      	blx	r4
  400e20:	4606      	mov	r6, r0
  400e22:	460f      	mov	r7, r1
  400e24:	ec53 2b1b 	vmov	r2, r3, d11
  400e28:	ec51 0b1a 	vmov	r0, r1, d10
  400e2c:	47a0      	blx	r4
  400e2e:	4602      	mov	r2, r0
  400e30:	460b      	mov	r3, r1
  400e32:	4630      	mov	r0, r6
  400e34:	4639      	mov	r1, r7
  400e36:	47c0      	blx	r8
  400e38:	4606      	mov	r6, r0
  400e3a:	460f      	mov	r7, r1
  400e3c:	ec53 2b19 	vmov	r2, r3, d9
  400e40:	ec51 0b18 	vmov	r0, r1, d8
  400e44:	47a0      	blx	r4
  400e46:	4602      	mov	r2, r0
  400e48:	460b      	mov	r3, r1
  400e4a:	4630      	mov	r0, r6
  400e4c:	4639      	mov	r1, r7
  400e4e:	47c0      	blx	r8
  400e50:	4602      	mov	r2, r0
  400e52:	460b      	mov	r3, r1
  400e54:	47c0      	blx	r8
  400e56:	f50d 63d2 	add.w	r3, sp, #1680	; 0x690
  400e5a:	e9c3 0100 	strd	r0, r1, [r3]
		nu=1/nu;
  400e5e:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e62:	ec51 0b1c 	vmov	r0, r1, d12
  400e66:	47d0      	blx	sl
  400e68:	f50d 63d2 	add.w	r3, sp, #1680	; 0x690
  400e6c:	e9c3 0100 	strd	r0, r1, [r3]

		//CALCULATING WEIGHTS
		ww[0][i+1]=(ww[0][i]+nu*en*found[i]);
  400e70:	f8dd 66b4 	ldr.w	r6, [sp, #1716]	; 0x6b4
  400e74:	3601      	adds	r6, #1
  400e76:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400e7a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400e7e:	ed93 8b00 	vldr	d8, [r3]
  400e82:	f50d 63d2 	add.w	r3, sp, #1680	; 0x690
  400e86:	e9d3 0100 	ldrd	r0, r1, [r3]
  400e8a:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  400e8e:	e9d3 bc00 	ldrd	fp, ip, [r3]
  400e92:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400e96:	aa0c      	add	r2, sp, #48	; 0x30
  400e98:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400e9c:	ed93 9b00 	vldr	d9, [r3]
  400ea0:	465a      	mov	r2, fp
  400ea2:	4663      	mov	r3, ip
  400ea4:	47a0      	blx	r4
  400ea6:	ec53 2b19 	vmov	r2, r3, d9
  400eaa:	47a0      	blx	r4
  400eac:	ec53 2b18 	vmov	r2, r3, d8
  400eb0:	47c0      	blx	r8
  400eb2:	eb05 06c6 	add.w	r6, r5, r6, lsl #3
  400eb6:	e9c6 0100 	strd	r0, r1, [r6]
		ww[1][i+1]=ww[1][i]+nu*en*found[(i-1)];
  400eba:	f8dd 66b4 	ldr.w	r6, [sp, #1716]	; 0x6b4
  400ebe:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400ec2:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400ec6:	ed93 8bc8 	vldr	d8, [r3, #800]	; 0x320
  400eca:	f50d 63d2 	add.w	r3, sp, #1680	; 0x690
  400ece:	e9d3 0100 	ldrd	r0, r1, [r3]
  400ed2:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  400ed6:	e9d3 bc00 	ldrd	fp, ip, [r3]
  400eda:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400ede:	aa0c      	add	r2, sp, #48	; 0x30
  400ee0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400ee4:	ed13 9b02 	vldr	d9, [r3, #-8]
  400ee8:	465a      	mov	r2, fp
  400eea:	4663      	mov	r3, ip
  400eec:	47a0      	blx	r4
  400eee:	ec53 2b19 	vmov	r2, r3, d9
  400ef2:	47a0      	blx	r4
  400ef4:	ec53 2b18 	vmov	r2, r3, d8
  400ef8:	47c0      	blx	r8
  400efa:	eb05 06c6 	add.w	r6, r5, r6, lsl #3
  400efe:	e9c6 01ca 	strd	r0, r1, [r6, #808]	; 0x328
		ww[2][i+1]=(ww[2][i]+nu*en*found[(i-2)]);
  400f02:	f8dd 66b4 	ldr.w	r6, [sp, #1716]	; 0x6b4
  400f06:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400f0a:	33c8      	adds	r3, #200	; 0xc8
  400f0c:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400f10:	ed93 8b00 	vldr	d8, [r3]
  400f14:	f50d 63d2 	add.w	r3, sp, #1680	; 0x690
  400f18:	e9d3 0100 	ldrd	r0, r1, [r3]
  400f1c:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  400f20:	e9d3 bc00 	ldrd	fp, ip, [r3]
  400f24:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400f28:	aa0c      	add	r2, sp, #48	; 0x30
  400f2a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400f2e:	ed13 9b04 	vldr	d9, [r3, #-16]
  400f32:	465a      	mov	r2, fp
  400f34:	4663      	mov	r3, ip
  400f36:	47a0      	blx	r4
  400f38:	ec53 2b19 	vmov	r2, r3, d9
  400f3c:	47a0      	blx	r4
  400f3e:	ec53 2b18 	vmov	r2, r3, d8
  400f42:	47c0      	blx	r8
  400f44:	f106 03c9 	add.w	r3, r6, #201	; 0xc9
  400f48:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  400f4c:	e9c3 0100 	strd	r0, r1, [r3]
	for (i = 2; i < MAXSAMPLE ; i++){
  400f50:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400f54:	3301      	adds	r3, #1
  400f56:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400f5a:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400f5e:	2b63      	cmp	r3, #99	; 0x63
  400f60:	f77f aee6 	ble.w	400d30 <main+0x4e0>
	}
	for (i =0; i < MAXSAMPLE; i++)
  400f64:	2300      	movs	r3, #0
  400f66:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  400f6a:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400f6e:	2b63      	cmp	r3, #99	; 0x63
  400f70:	dc7c      	bgt.n	40106c <main+0x81c>
	{
		final[i] =  -1* ww[0][MAXSAMPLE -1] * found[i] ;
  400f72:	4f6a      	ldr	r7, [pc, #424]	; (40111c <main+0x8cc>)
  400f74:	f8df 81b4 	ldr.w	r8, [pc, #436]	; 40112c <main+0x8dc>
  400f78:	f507 6416 	add.w	r4, r7, #2400	; 0x960
		if ( i > 0)
			final[i] -= ww[2][MAXSAMPLE -1] * found[i -1];
  400f7c:	f607 1958 	addw	r9, r7, #2392	; 0x958
  400f80:	4e67      	ldr	r6, [pc, #412]	; (401120 <main+0x8d0>)
		if (i > 1)
			final[i] -= ww[2][MAXSAMPLE-1] *found[i-2];
		final[i] += max;
  400f82:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 401130 <main+0x8e0>
		final[i] =  -1* ww[0][MAXSAMPLE -1] * found[i] ;
  400f86:	f8dd 56b4 	ldr.w	r5, [sp, #1716]	; 0x6b4
  400f8a:	e9d7 01c6 	ldrd	r0, r1, [r7, #792]	; 0x318
  400f8e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400f92:	aa0c      	add	r2, sp, #48	; 0x30
  400f94:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400f98:	9002      	str	r0, [sp, #8]
  400f9a:	f101 4200 	add.w	r2, r1, #2147483648	; 0x80000000
  400f9e:	9203      	str	r2, [sp, #12]
  400fa0:	e9d3 2300 	ldrd	r2, r3, [r3]
  400fa4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400fa8:	47c0      	blx	r8
  400faa:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
  400fae:	e9c5 0100 	strd	r0, r1, [r5]
		if ( i > 0)
  400fb2:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400fb6:	2b00      	cmp	r3, #0
  400fb8:	dd16      	ble.n	400fe8 <main+0x798>
			final[i] -= ww[2][MAXSAMPLE -1] * found[i -1];
  400fba:	e9d9 0100 	ldrd	r0, r1, [r9]
  400fbe:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400fc2:	aa0c      	add	r2, sp, #48	; 0x30
  400fc4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400fc8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  400fcc:	f8dd 56b4 	ldr.w	r5, [sp, #1716]	; 0x6b4
  400fd0:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
  400fd4:	ed95 8b00 	vldr	d8, [r5]
  400fd8:	47c0      	blx	r8
  400fda:	4602      	mov	r2, r0
  400fdc:	460b      	mov	r3, r1
  400fde:	ec51 0b18 	vmov	r0, r1, d8
  400fe2:	47b0      	blx	r6
  400fe4:	e9c5 0100 	strd	r0, r1, [r5]
		if (i > 1)
  400fe8:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400fec:	2b01      	cmp	r3, #1
  400fee:	dd16      	ble.n	40101e <main+0x7ce>
			final[i] -= ww[2][MAXSAMPLE-1] *found[i-2];
  400ff0:	e9d9 0100 	ldrd	r0, r1, [r9]
  400ff4:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  400ff8:	aa0c      	add	r2, sp, #48	; 0x30
  400ffa:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400ffe:	e953 2304 	ldrd	r2, r3, [r3, #-16]
  401002:	f8dd 56b4 	ldr.w	r5, [sp, #1716]	; 0x6b4
  401006:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
  40100a:	ed95 8b00 	vldr	d8, [r5]
  40100e:	47c0      	blx	r8
  401010:	4602      	mov	r2, r0
  401012:	460b      	mov	r3, r1
  401014:	ec51 0b18 	vmov	r0, r1, d8
  401018:	47b0      	blx	r6
  40101a:	e9c5 0100 	strd	r0, r1, [r5]
		final[i] += max;
  40101e:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  401022:	e9d3 0100 	ldrd	r0, r1, [r3]
  401026:	f8dd 56b4 	ldr.w	r5, [sp, #1716]	; 0x6b4
  40102a:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
  40102e:	e9d5 2300 	ldrd	r2, r3, [r5]
  401032:	47d0      	blx	sl
  401034:	e9c5 0100 	strd	r0, r1, [r5]
		final[i] = max - final[i];
  401038:	f8dd 56b4 	ldr.w	r5, [sp, #1716]	; 0x6b4
  40103c:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  401040:	e9d3 0100 	ldrd	r0, r1, [r3]
  401044:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401048:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
  40104c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401050:	47b0      	blx	r6
  401052:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
  401056:	e9c5 0100 	strd	r0, r1, [r5]
	for (i =0; i < MAXSAMPLE; i++)
  40105a:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  40105e:	3301      	adds	r3, #1
  401060:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  401064:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401068:	2b63      	cmp	r3, #99	; 0x63
  40106a:	dd8c      	ble.n	400f86 <main+0x736>
	}
	i = 0;
  40106c:	2300      	movs	r3, #0
  40106e:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
		volatile uint8_t tx[2];
		
		adc_sync_read_channel(&mic, CONF_ADC_0_CHANNEL_0, buffer_ch0, 2);
		rx = (double)( buffer_ch0[0] + (buffer_ch0[1] << 8));
		found[i] = rx;
		final[i] =  -1* ww[0][MAXSAMPLE -1] * rx;
  401072:	4e2a      	ldr	r6, [pc, #168]	; (40111c <main+0x8cc>)
  401074:	f506 6416 	add.w	r4, r6, #2400	; 0x960
		if ( i == 0)
			final[i] -= ww[2][MAXSAMPLE -1] * found[MAXSAMPLE -1] - ww[2][MAXSAMPLE-1] *found[MAXSAMPLE-2];;
  401078:	4d29      	ldr	r5, [pc, #164]	; (401120 <main+0x8d0>)
		adc_sync_read_channel(&mic, CONF_ADC_0_CHANNEL_0, buffer_ch0, 2);
  40107a:	f04f 0b02 	mov.w	fp, #2
  40107e:	e06e      	b.n	40115e <main+0x90e>
		if ((signal[i]) == (signal[i] )){
  401080:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401084:	aad4      	add	r2, sp, #848	; 0x350
  401086:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  40108a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40108e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401092:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  401096:	e9d3 2300 	ldrd	r2, r3, [r3]
  40109a:	47a0      	blx	r4
  40109c:	2800      	cmp	r0, #0
  40109e:	f47f acf8 	bne.w	400a92 <main+0x242>
	for (i = maxIndex +1; i< MAXSAMPLE; i++){
  4010a2:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4010a6:	3301      	adds	r3, #1
  4010a8:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  4010ac:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4010b0:	2b63      	cmp	r3, #99	; 0x63
  4010b2:	dde5      	ble.n	401080 <main+0x830>
  4010b4:	e4f1      	b.n	400a9a <main+0x24a>
	phase = en < 0 ? en *-.5 : x * .5;	
  4010b6:	f8dd 06ac 	ldr.w	r0, [sp, #1708]	; 0x6ac
  4010ba:	4b1a      	ldr	r3, [pc, #104]	; (401124 <main+0x8d4>)
  4010bc:	4798      	blx	r3
  4010be:	2200      	movs	r2, #0
  4010c0:	4b19      	ldr	r3, [pc, #100]	; (401128 <main+0x8d8>)
  4010c2:	4c1a      	ldr	r4, [pc, #104]	; (40112c <main+0x8dc>)
  4010c4:	47a0      	blx	r4
  4010c6:	e586      	b.n	400bd6 <main+0x386>
		if (i == 1)
			final[i] -= ww[2][MAXSAMPLE -1] * found[0] - ww[2][MAXSAMPLE-1] *found[MAXSAMPLE-1];
  4010c8:	f606 1358 	addw	r3, r6, #2392	; 0x958
  4010cc:	e9d3 0100 	ldrd	r0, r1, [r3]
  4010d0:	e9dd 890c 	ldrd	r8, r9, [sp, #48]	; 0x30
  4010d4:	ed93 9b00 	vldr	d9, [r3]
  4010d8:	ed9d abd2 	vldr	d10, [sp, #840]	; 0x348
  4010dc:	f8dd 76b4 	ldr.w	r7, [sp, #1716]	; 0x6b4
  4010e0:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
  4010e4:	ed97 8b00 	vldr	d8, [r7]
  4010e8:	f8df a040 	ldr.w	sl, [pc, #64]	; 40112c <main+0x8dc>
  4010ec:	4642      	mov	r2, r8
  4010ee:	464b      	mov	r3, r9
  4010f0:	47d0      	blx	sl
  4010f2:	4680      	mov	r8, r0
  4010f4:	4689      	mov	r9, r1
  4010f6:	ec53 2b1a 	vmov	r2, r3, d10
  4010fa:	ec51 0b19 	vmov	r0, r1, d9
  4010fe:	47d0      	blx	sl
  401100:	4602      	mov	r2, r0
  401102:	460b      	mov	r3, r1
  401104:	4640      	mov	r0, r8
  401106:	4649      	mov	r1, r9
  401108:	47a8      	blx	r5
  40110a:	4602      	mov	r2, r0
  40110c:	460b      	mov	r3, r1
  40110e:	ec51 0b18 	vmov	r0, r1, d8
  401112:	47a8      	blx	r5
  401114:	e9c7 0100 	strd	r0, r1, [r7]
  401118:	e0ab      	b.n	401272 <main+0xa22>
  40111a:	bf00      	nop
  40111c:	20000088 	.word	0x20000088
  401120:	00402d2d 	.word	0x00402d2d
  401124:	00402fc9 	.word	0x00402fc9
  401128:	3fe00000 	.word	0x3fe00000
  40112c:	00403095 	.word	0x00403095
  401130:	00402d31 	.word	0x00402d31
							tx[0] = 0x0f;
							tx[1] = 0xff;
						}
		else
						{
							tx[0] = 0x00;
  401134:	2300      	movs	r3, #0
  401136:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
							tx[1] = 0x00;
  40113a:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
						}
		io_write(i2c0, tx, 2);
  40113e:	465a      	mov	r2, fp
  401140:	a909      	add	r1, sp, #36	; 0x24
  401142:	f8dd 06d8 	ldr.w	r0, [sp, #1752]	; 0x6d8
  401146:	4b63      	ldr	r3, [pc, #396]	; (4012d4 <main+0xa84>)
  401148:	4798      	blx	r3

		i++; 
  40114a:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  40114e:	3301      	adds	r3, #1
  401150:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
		if (i == MAXSAMPLE)
  401154:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401158:	2b64      	cmp	r3, #100	; 0x64
  40115a:	f000 80b7 	beq.w	4012cc <main+0xa7c>
		adc_sync_read_channel(&mic, CONF_ADC_0_CHANNEL_0, buffer_ch0, 2);
  40115e:	465b      	mov	r3, fp
  401160:	aa08      	add	r2, sp, #32
  401162:	2100      	movs	r1, #0
  401164:	f20d 60dc 	addw	r0, sp, #1756	; 0x6dc
  401168:	4f5b      	ldr	r7, [pc, #364]	; (4012d8 <main+0xa88>)
  40116a:	47b8      	blx	r7
		rx = (double)( buffer_ch0[0] + (buffer_ch0[1] << 8));
  40116c:	f89d 3020 	ldrb.w	r3, [sp, #32]
  401170:	f89d 0021 	ldrb.w	r0, [sp, #33]	; 0x21
  401174:	eb03 2000 	add.w	r0, r3, r0, lsl #8
  401178:	4b58      	ldr	r3, [pc, #352]	; (4012dc <main+0xa8c>)
  40117a:	4798      	blx	r3
  40117c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
		found[i] = rx;
  401180:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401184:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  401188:	aa0c      	add	r2, sp, #48	; 0x30
  40118a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  40118e:	e9c3 0100 	strd	r0, r1, [r3]
		final[i] =  -1* ww[0][MAXSAMPLE -1] * rx;
  401192:	f8dd 76b4 	ldr.w	r7, [sp, #1716]	; 0x6b4
  401196:	e9d6 23c6 	ldrd	r2, r3, [r6, #792]	; 0x318
  40119a:	9200      	str	r2, [sp, #0]
  40119c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  4011a0:	9301      	str	r3, [sp, #4]
  4011a2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  4011a6:	e9dd 0100 	ldrd	r0, r1, [sp]
  4011aa:	f8df 8134 	ldr.w	r8, [pc, #308]	; 4012e0 <main+0xa90>
  4011ae:	47c0      	blx	r8
  4011b0:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
  4011b4:	e9c7 0100 	strd	r0, r1, [r7]
		if ( i == 0)
  4011b8:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4011bc:	bb3b      	cbnz	r3, 40120e <main+0x9be>
			final[i] -= ww[2][MAXSAMPLE -1] * found[MAXSAMPLE -1] - ww[2][MAXSAMPLE-1] *found[MAXSAMPLE-2];;
  4011be:	f606 1358 	addw	r3, r6, #2392	; 0x958
  4011c2:	e9d3 0100 	ldrd	r0, r1, [r3]
  4011c6:	e9dd 89d2 	ldrd	r8, r9, [sp, #840]	; 0x348
  4011ca:	ed93 9b00 	vldr	d9, [r3]
  4011ce:	ed9d abd0 	vldr	d10, [sp, #832]	; 0x340
  4011d2:	f8dd 76b4 	ldr.w	r7, [sp, #1716]	; 0x6b4
  4011d6:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
  4011da:	ed97 8b00 	vldr	d8, [r7]
  4011de:	f8df a100 	ldr.w	sl, [pc, #256]	; 4012e0 <main+0xa90>
  4011e2:	4642      	mov	r2, r8
  4011e4:	464b      	mov	r3, r9
  4011e6:	47d0      	blx	sl
  4011e8:	4680      	mov	r8, r0
  4011ea:	4689      	mov	r9, r1
  4011ec:	ec53 2b1a 	vmov	r2, r3, d10
  4011f0:	ec51 0b19 	vmov	r0, r1, d9
  4011f4:	47d0      	blx	sl
  4011f6:	4602      	mov	r2, r0
  4011f8:	460b      	mov	r3, r1
  4011fa:	4640      	mov	r0, r8
  4011fc:	4649      	mov	r1, r9
  4011fe:	47a8      	blx	r5
  401200:	4602      	mov	r2, r0
  401202:	460b      	mov	r3, r1
  401204:	ec51 0b18 	vmov	r0, r1, d8
  401208:	47a8      	blx	r5
  40120a:	e9c7 0100 	strd	r0, r1, [r7]
		if (i == 1)
  40120e:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401212:	2b01      	cmp	r3, #1
  401214:	f43f af58 	beq.w	4010c8 <main+0x878>
			final[i] -= ww[2][MAXSAMPLE -1] * found[i-1] - ww[2][MAXSAMPLE-1] *found[MAXSAMPLE-1];
  401218:	f606 1158 	addw	r1, r6, #2392	; 0x958
  40121c:	e9d1 8900 	ldrd	r8, r9, [r1]
  401220:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  401224:	aa0c      	add	r2, sp, #48	; 0x30
  401226:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  40122a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40122e:	ed91 9b00 	vldr	d9, [r1]
  401232:	ed9d abd2 	vldr	d10, [sp, #840]	; 0x348
  401236:	f8dd 76b4 	ldr.w	r7, [sp, #1716]	; 0x6b4
  40123a:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
  40123e:	ed97 8b00 	vldr	d8, [r7]
  401242:	f8df a09c 	ldr.w	sl, [pc, #156]	; 4012e0 <main+0xa90>
  401246:	4640      	mov	r0, r8
  401248:	4649      	mov	r1, r9
  40124a:	47d0      	blx	sl
  40124c:	4680      	mov	r8, r0
  40124e:	4689      	mov	r9, r1
  401250:	ec53 2b1a 	vmov	r2, r3, d10
  401254:	ec51 0b19 	vmov	r0, r1, d9
  401258:	47d0      	blx	sl
  40125a:	4602      	mov	r2, r0
  40125c:	460b      	mov	r3, r1
  40125e:	4640      	mov	r0, r8
  401260:	4649      	mov	r1, r9
  401262:	47a8      	blx	r5
  401264:	4602      	mov	r2, r0
  401266:	460b      	mov	r3, r1
  401268:	ec51 0b18 	vmov	r0, r1, d8
  40126c:	47a8      	blx	r5
  40126e:	e9c7 0100 	strd	r0, r1, [r7]
		final[i] += max;
  401272:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  401276:	e9d3 0100 	ldrd	r0, r1, [r3]
  40127a:	f8dd 76b4 	ldr.w	r7, [sp, #1716]	; 0x6b4
  40127e:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
  401282:	e9d7 2300 	ldrd	r2, r3, [r7]
  401286:	f8df 805c 	ldr.w	r8, [pc, #92]	; 4012e4 <main+0xa94>
  40128a:	47c0      	blx	r8
  40128c:	e9c7 0100 	strd	r0, r1, [r7]
		final[i] = max - final[i];
  401290:	f8dd 76b4 	ldr.w	r7, [sp, #1716]	; 0x6b4
  401294:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  401298:	e9d3 0100 	ldrd	r0, r1, [r3]
  40129c:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4012a0:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
  4012a4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012a8:	47a8      	blx	r5
  4012aa:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
  4012ae:	e9c7 0100 	strd	r0, r1, [r7]
		if (i %2 == 0)
  4012b2:	f8dd 36b4 	ldr.w	r3, [sp, #1716]	; 0x6b4
  4012b6:	f013 0f01 	tst.w	r3, #1
  4012ba:	f47f af3b 	bne.w	401134 <main+0x8e4>
							tx[0] = 0x0f;
  4012be:	230f      	movs	r3, #15
  4012c0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
							tx[1] = 0xff;
  4012c4:	23ff      	movs	r3, #255	; 0xff
  4012c6:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
  4012ca:	e738      	b.n	40113e <main+0x8ee>
	    i = 0; 
  4012cc:	2300      	movs	r3, #0
  4012ce:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  4012d2:	e744      	b.n	40115e <main+0x90e>
  4012d4:	004004c9 	.word	0x004004c9
  4012d8:	00400329 	.word	0x00400329
  4012dc:	00402fc9 	.word	0x00402fc9
  4012e0:	00403095 	.word	0x00403095
  4012e4:	00402d31 	.word	0x00402d31

004012e8 <HardFault_Handler>:
	}
}

void HardFault_Handler()
{
  4012e8:	b082      	sub	sp, #8
	volatile int a;
	a =  SCB->CFSR;
  4012ea:	4b02      	ldr	r3, [pc, #8]	; (4012f4 <HardFault_Handler+0xc>)
  4012ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  4012ee:	9301      	str	r3, [sp, #4]
	__ASM volatile("BKPT #01");
  4012f0:	be01      	bkpt	0x0001
  4012f2:	e7fe      	b.n	4012f2 <HardFault_Handler+0xa>
  4012f4:	e000ed00 	.word	0xe000ed00

004012f8 <cos>:
  4012f8:	b530      	push	{r4, r5, lr}
  4012fa:	4a22      	ldr	r2, [pc, #136]	; (401384 <cos+0x8c>)
  4012fc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  401300:	4293      	cmp	r3, r2
  401302:	b087      	sub	sp, #28
  401304:	dd1b      	ble.n	40133e <cos+0x46>
  401306:	4a20      	ldr	r2, [pc, #128]	; (401388 <cos+0x90>)
  401308:	4293      	cmp	r3, r2
  40130a:	dd05      	ble.n	401318 <cos+0x20>
  40130c:	4602      	mov	r2, r0
  40130e:	460b      	mov	r3, r1
  401310:	f001 fd0c 	bl	402d2c <__aeabi_dsub>
  401314:	b007      	add	sp, #28
  401316:	bd30      	pop	{r4, r5, pc}
  401318:	aa02      	add	r2, sp, #8
  40131a:	f000 fae1 	bl	4018e0 <__ieee754_rem_pio2>
  40131e:	f000 0303 	and.w	r3, r0, #3
  401322:	2b01      	cmp	r3, #1
  401324:	d01a      	beq.n	40135c <cos+0x64>
  401326:	2b02      	cmp	r3, #2
  401328:	d00f      	beq.n	40134a <cos+0x52>
  40132a:	b31b      	cbz	r3, 401374 <cos+0x7c>
  40132c:	2401      	movs	r4, #1
  40132e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401332:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401336:	9400      	str	r4, [sp, #0]
  401338:	f001 fb1e 	bl	402978 <__kernel_sin>
  40133c:	e7ea      	b.n	401314 <cos+0x1c>
  40133e:	2200      	movs	r2, #0
  401340:	2300      	movs	r3, #0
  401342:	f000 fdad 	bl	401ea0 <__kernel_cos>
  401346:	b007      	add	sp, #28
  401348:	bd30      	pop	{r4, r5, pc}
  40134a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  40134e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401352:	f000 fda5 	bl	401ea0 <__kernel_cos>
  401356:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  40135a:	e7db      	b.n	401314 <cos+0x1c>
  40135c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  401360:	9300      	str	r3, [sp, #0]
  401362:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401366:	4622      	mov	r2, r4
  401368:	462b      	mov	r3, r5
  40136a:	f001 fb05 	bl	402978 <__kernel_sin>
  40136e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  401372:	e7cf      	b.n	401314 <cos+0x1c>
  401374:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401378:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40137c:	f000 fd90 	bl	401ea0 <__kernel_cos>
  401380:	e7c8      	b.n	401314 <cos+0x1c>
  401382:	bf00      	nop
  401384:	3fe921fb 	.word	0x3fe921fb
  401388:	7fefffff 	.word	0x7fefffff

0040138c <acos>:
  40138c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401390:	f8df 809c 	ldr.w	r8, [pc, #156]	; 401430 <acos+0xa4>
  401394:	b08b      	sub	sp, #44	; 0x2c
  401396:	4604      	mov	r4, r0
  401398:	460d      	mov	r5, r1
  40139a:	f000 f84d 	bl	401438 <__ieee754_acos>
  40139e:	f998 3000 	ldrsb.w	r3, [r8]
  4013a2:	3301      	adds	r3, #1
  4013a4:	4606      	mov	r6, r0
  4013a6:	460f      	mov	r7, r1
  4013a8:	d02b      	beq.n	401402 <acos+0x76>
  4013aa:	4622      	mov	r2, r4
  4013ac:	462b      	mov	r3, r5
  4013ae:	4620      	mov	r0, r4
  4013b0:	4629      	mov	r1, r5
  4013b2:	f002 f909 	bl	4035c8 <__aeabi_dcmpun>
  4013b6:	4681      	mov	r9, r0
  4013b8:	bb18      	cbnz	r0, 401402 <acos+0x76>
  4013ba:	4620      	mov	r0, r4
  4013bc:	4629      	mov	r1, r5
  4013be:	f001 fb91 	bl	402ae4 <fabs>
  4013c2:	2200      	movs	r2, #0
  4013c4:	4b17      	ldr	r3, [pc, #92]	; (401424 <acos+0x98>)
  4013c6:	f002 f8f5 	bl	4035b4 <__aeabi_dcmpgt>
  4013ca:	b1d0      	cbz	r0, 401402 <acos+0x76>
  4013cc:	4b16      	ldr	r3, [pc, #88]	; (401428 <acos+0x9c>)
  4013ce:	4817      	ldr	r0, [pc, #92]	; (40142c <acos+0xa0>)
  4013d0:	f8cd 9020 	str.w	r9, [sp, #32]
  4013d4:	2201      	movs	r2, #1
  4013d6:	e88d 000c 	stmia.w	sp, {r2, r3}
  4013da:	e9cd 4504 	strd	r4, r5, [sp, #16]
  4013de:	e9cd 4502 	strd	r4, r5, [sp, #8]
  4013e2:	f001 fc13 	bl	402c0c <nan>
  4013e6:	f998 3000 	ldrsb.w	r3, [r8]
  4013ea:	2b02      	cmp	r3, #2
  4013ec:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4013f0:	d00c      	beq.n	40140c <acos+0x80>
  4013f2:	4668      	mov	r0, sp
  4013f4:	f001 fc08 	bl	402c08 <matherr>
  4013f8:	b140      	cbz	r0, 40140c <acos+0x80>
  4013fa:	9b08      	ldr	r3, [sp, #32]
  4013fc:	b96b      	cbnz	r3, 40141a <acos+0x8e>
  4013fe:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
  401402:	4630      	mov	r0, r6
  401404:	4639      	mov	r1, r7
  401406:	b00b      	add	sp, #44	; 0x2c
  401408:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40140c:	f002 f91a 	bl	403644 <__errno>
  401410:	2321      	movs	r3, #33	; 0x21
  401412:	6003      	str	r3, [r0, #0]
  401414:	9b08      	ldr	r3, [sp, #32]
  401416:	2b00      	cmp	r3, #0
  401418:	d0f1      	beq.n	4013fe <acos+0x72>
  40141a:	f002 f913 	bl	403644 <__errno>
  40141e:	9b08      	ldr	r3, [sp, #32]
  401420:	6003      	str	r3, [r0, #0]
  401422:	e7ec      	b.n	4013fe <acos+0x72>
  401424:	3ff00000 	.word	0x3ff00000
  401428:	0040373c 	.word	0x0040373c
  40142c:	00403708 	.word	0x00403708
  401430:	20000000 	.word	0x20000000
  401434:	00000000 	.word	0x00000000

00401438 <__ieee754_acos>:
  401438:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40143c:	4ec4      	ldr	r6, [pc, #784]	; (401750 <__ieee754_acos+0x318>)
  40143e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  401442:	42b3      	cmp	r3, r6
  401444:	460c      	mov	r4, r1
  401446:	4605      	mov	r5, r0
  401448:	dd0d      	ble.n	401466 <__ieee754_acos+0x2e>
  40144a:	f103 4340 	add.w	r3, r3, #3221225472	; 0xc0000000
  40144e:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
  401452:	4303      	orrs	r3, r0
  401454:	f040 80b9 	bne.w	4015ca <__ieee754_acos+0x192>
  401458:	2900      	cmp	r1, #0
  40145a:	f340 8140 	ble.w	4016de <__ieee754_acos+0x2a6>
  40145e:	2000      	movs	r0, #0
  401460:	2100      	movs	r1, #0
  401462:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401466:	4ebb      	ldr	r6, [pc, #748]	; (401754 <__ieee754_acos+0x31c>)
  401468:	42b3      	cmp	r3, r6
  40146a:	f340 80a6 	ble.w	4015ba <__ieee754_acos+0x182>
  40146e:	2900      	cmp	r1, #0
  401470:	f2c0 8178 	blt.w	401764 <__ieee754_acos+0x32c>
  401474:	4602      	mov	r2, r0
  401476:	460b      	mov	r3, r1
  401478:	2000      	movs	r0, #0
  40147a:	49b7      	ldr	r1, [pc, #732]	; (401758 <__ieee754_acos+0x320>)
  40147c:	f001 fc56 	bl	402d2c <__aeabi_dsub>
  401480:	2200      	movs	r2, #0
  401482:	4bb6      	ldr	r3, [pc, #728]	; (40175c <__ieee754_acos+0x324>)
  401484:	f001 fe06 	bl	403094 <__aeabi_dmul>
  401488:	4604      	mov	r4, r0
  40148a:	460d      	mov	r5, r1
  40148c:	f000 fc4a 	bl	401d24 <__ieee754_sqrt>
  401490:	a395      	add	r3, pc, #596	; (adr r3, 4016e8 <__ieee754_acos+0x2b0>)
  401492:	e9d3 2300 	ldrd	r2, r3, [r3]
  401496:	4689      	mov	r9, r1
  401498:	4680      	mov	r8, r0
  40149a:	4629      	mov	r1, r5
  40149c:	4620      	mov	r0, r4
  40149e:	f001 fdf9 	bl	403094 <__aeabi_dmul>
  4014a2:	a393      	add	r3, pc, #588	; (adr r3, 4016f0 <__ieee754_acos+0x2b8>)
  4014a4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014a8:	f001 fc42 	bl	402d30 <__adddf3>
  4014ac:	4622      	mov	r2, r4
  4014ae:	462b      	mov	r3, r5
  4014b0:	f001 fdf0 	bl	403094 <__aeabi_dmul>
  4014b4:	a390      	add	r3, pc, #576	; (adr r3, 4016f8 <__ieee754_acos+0x2c0>)
  4014b6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014ba:	f001 fc37 	bl	402d2c <__aeabi_dsub>
  4014be:	4622      	mov	r2, r4
  4014c0:	462b      	mov	r3, r5
  4014c2:	f001 fde7 	bl	403094 <__aeabi_dmul>
  4014c6:	a38e      	add	r3, pc, #568	; (adr r3, 401700 <__ieee754_acos+0x2c8>)
  4014c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014cc:	f001 fc30 	bl	402d30 <__adddf3>
  4014d0:	4622      	mov	r2, r4
  4014d2:	462b      	mov	r3, r5
  4014d4:	f001 fdde 	bl	403094 <__aeabi_dmul>
  4014d8:	a38b      	add	r3, pc, #556	; (adr r3, 401708 <__ieee754_acos+0x2d0>)
  4014da:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014de:	f001 fc25 	bl	402d2c <__aeabi_dsub>
  4014e2:	4622      	mov	r2, r4
  4014e4:	462b      	mov	r3, r5
  4014e6:	f001 fdd5 	bl	403094 <__aeabi_dmul>
  4014ea:	a389      	add	r3, pc, #548	; (adr r3, 401710 <__ieee754_acos+0x2d8>)
  4014ec:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014f0:	f001 fc1e 	bl	402d30 <__adddf3>
  4014f4:	4622      	mov	r2, r4
  4014f6:	462b      	mov	r3, r5
  4014f8:	f001 fdcc 	bl	403094 <__aeabi_dmul>
  4014fc:	a386      	add	r3, pc, #536	; (adr r3, 401718 <__ieee754_acos+0x2e0>)
  4014fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  401502:	4682      	mov	sl, r0
  401504:	468b      	mov	fp, r1
  401506:	4620      	mov	r0, r4
  401508:	4629      	mov	r1, r5
  40150a:	f001 fdc3 	bl	403094 <__aeabi_dmul>
  40150e:	a384      	add	r3, pc, #528	; (adr r3, 401720 <__ieee754_acos+0x2e8>)
  401510:	e9d3 2300 	ldrd	r2, r3, [r3]
  401514:	f001 fc0a 	bl	402d2c <__aeabi_dsub>
  401518:	4622      	mov	r2, r4
  40151a:	462b      	mov	r3, r5
  40151c:	f001 fdba 	bl	403094 <__aeabi_dmul>
  401520:	a381      	add	r3, pc, #516	; (adr r3, 401728 <__ieee754_acos+0x2f0>)
  401522:	e9d3 2300 	ldrd	r2, r3, [r3]
  401526:	f001 fc03 	bl	402d30 <__adddf3>
  40152a:	4622      	mov	r2, r4
  40152c:	462b      	mov	r3, r5
  40152e:	f001 fdb1 	bl	403094 <__aeabi_dmul>
  401532:	a37f      	add	r3, pc, #508	; (adr r3, 401730 <__ieee754_acos+0x2f8>)
  401534:	e9d3 2300 	ldrd	r2, r3, [r3]
  401538:	f001 fbf8 	bl	402d2c <__aeabi_dsub>
  40153c:	4622      	mov	r2, r4
  40153e:	462b      	mov	r3, r5
  401540:	f001 fda8 	bl	403094 <__aeabi_dmul>
  401544:	2200      	movs	r2, #0
  401546:	4b84      	ldr	r3, [pc, #528]	; (401758 <__ieee754_acos+0x320>)
  401548:	f001 fbf2 	bl	402d30 <__adddf3>
  40154c:	4602      	mov	r2, r0
  40154e:	460b      	mov	r3, r1
  401550:	4650      	mov	r0, sl
  401552:	4659      	mov	r1, fp
  401554:	f001 fec8 	bl	4032e8 <__aeabi_ddiv>
  401558:	4642      	mov	r2, r8
  40155a:	464b      	mov	r3, r9
  40155c:	f001 fd9a 	bl	403094 <__aeabi_dmul>
  401560:	2600      	movs	r6, #0
  401562:	4682      	mov	sl, r0
  401564:	468b      	mov	fp, r1
  401566:	4632      	mov	r2, r6
  401568:	464b      	mov	r3, r9
  40156a:	4630      	mov	r0, r6
  40156c:	4649      	mov	r1, r9
  40156e:	f001 fd91 	bl	403094 <__aeabi_dmul>
  401572:	4602      	mov	r2, r0
  401574:	460b      	mov	r3, r1
  401576:	4620      	mov	r0, r4
  401578:	4629      	mov	r1, r5
  40157a:	f001 fbd7 	bl	402d2c <__aeabi_dsub>
  40157e:	4632      	mov	r2, r6
  401580:	4604      	mov	r4, r0
  401582:	460d      	mov	r5, r1
  401584:	464b      	mov	r3, r9
  401586:	4640      	mov	r0, r8
  401588:	4649      	mov	r1, r9
  40158a:	f001 fbd1 	bl	402d30 <__adddf3>
  40158e:	4602      	mov	r2, r0
  401590:	460b      	mov	r3, r1
  401592:	4620      	mov	r0, r4
  401594:	4629      	mov	r1, r5
  401596:	f001 fea7 	bl	4032e8 <__aeabi_ddiv>
  40159a:	4602      	mov	r2, r0
  40159c:	460b      	mov	r3, r1
  40159e:	4650      	mov	r0, sl
  4015a0:	4659      	mov	r1, fp
  4015a2:	f001 fbc5 	bl	402d30 <__adddf3>
  4015a6:	4632      	mov	r2, r6
  4015a8:	464b      	mov	r3, r9
  4015aa:	f001 fbc1 	bl	402d30 <__adddf3>
  4015ae:	4602      	mov	r2, r0
  4015b0:	460b      	mov	r3, r1
  4015b2:	f001 fbbd 	bl	402d30 <__adddf3>
  4015b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4015ba:	4a69      	ldr	r2, [pc, #420]	; (401760 <__ieee754_acos+0x328>)
  4015bc:	4293      	cmp	r3, r2
  4015be:	dc0e      	bgt.n	4015de <__ieee754_acos+0x1a6>
  4015c0:	a15d      	add	r1, pc, #372	; (adr r1, 401738 <__ieee754_acos+0x300>)
  4015c2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4015c6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4015ca:	4602      	mov	r2, r0
  4015cc:	460b      	mov	r3, r1
  4015ce:	f001 fbad 	bl	402d2c <__aeabi_dsub>
  4015d2:	4602      	mov	r2, r0
  4015d4:	460b      	mov	r3, r1
  4015d6:	f001 fe87 	bl	4032e8 <__aeabi_ddiv>
  4015da:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4015de:	4602      	mov	r2, r0
  4015e0:	460b      	mov	r3, r1
  4015e2:	f001 fd57 	bl	403094 <__aeabi_dmul>
  4015e6:	a340      	add	r3, pc, #256	; (adr r3, 4016e8 <__ieee754_acos+0x2b0>)
  4015e8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4015ec:	4606      	mov	r6, r0
  4015ee:	460f      	mov	r7, r1
  4015f0:	f001 fd50 	bl	403094 <__aeabi_dmul>
  4015f4:	a33e      	add	r3, pc, #248	; (adr r3, 4016f0 <__ieee754_acos+0x2b8>)
  4015f6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4015fa:	f001 fb99 	bl	402d30 <__adddf3>
  4015fe:	4632      	mov	r2, r6
  401600:	463b      	mov	r3, r7
  401602:	f001 fd47 	bl	403094 <__aeabi_dmul>
  401606:	a33c      	add	r3, pc, #240	; (adr r3, 4016f8 <__ieee754_acos+0x2c0>)
  401608:	e9d3 2300 	ldrd	r2, r3, [r3]
  40160c:	f001 fb8e 	bl	402d2c <__aeabi_dsub>
  401610:	4632      	mov	r2, r6
  401612:	463b      	mov	r3, r7
  401614:	f001 fd3e 	bl	403094 <__aeabi_dmul>
  401618:	a339      	add	r3, pc, #228	; (adr r3, 401700 <__ieee754_acos+0x2c8>)
  40161a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40161e:	f001 fb87 	bl	402d30 <__adddf3>
  401622:	4632      	mov	r2, r6
  401624:	463b      	mov	r3, r7
  401626:	f001 fd35 	bl	403094 <__aeabi_dmul>
  40162a:	a337      	add	r3, pc, #220	; (adr r3, 401708 <__ieee754_acos+0x2d0>)
  40162c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401630:	f001 fb7c 	bl	402d2c <__aeabi_dsub>
  401634:	4632      	mov	r2, r6
  401636:	463b      	mov	r3, r7
  401638:	f001 fd2c 	bl	403094 <__aeabi_dmul>
  40163c:	a334      	add	r3, pc, #208	; (adr r3, 401710 <__ieee754_acos+0x2d8>)
  40163e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401642:	f001 fb75 	bl	402d30 <__adddf3>
  401646:	4632      	mov	r2, r6
  401648:	463b      	mov	r3, r7
  40164a:	f001 fd23 	bl	403094 <__aeabi_dmul>
  40164e:	a332      	add	r3, pc, #200	; (adr r3, 401718 <__ieee754_acos+0x2e0>)
  401650:	e9d3 2300 	ldrd	r2, r3, [r3]
  401654:	4680      	mov	r8, r0
  401656:	4689      	mov	r9, r1
  401658:	4630      	mov	r0, r6
  40165a:	4639      	mov	r1, r7
  40165c:	f001 fd1a 	bl	403094 <__aeabi_dmul>
  401660:	a32f      	add	r3, pc, #188	; (adr r3, 401720 <__ieee754_acos+0x2e8>)
  401662:	e9d3 2300 	ldrd	r2, r3, [r3]
  401666:	f001 fb61 	bl	402d2c <__aeabi_dsub>
  40166a:	4632      	mov	r2, r6
  40166c:	463b      	mov	r3, r7
  40166e:	f001 fd11 	bl	403094 <__aeabi_dmul>
  401672:	a32d      	add	r3, pc, #180	; (adr r3, 401728 <__ieee754_acos+0x2f0>)
  401674:	e9d3 2300 	ldrd	r2, r3, [r3]
  401678:	f001 fb5a 	bl	402d30 <__adddf3>
  40167c:	4632      	mov	r2, r6
  40167e:	463b      	mov	r3, r7
  401680:	f001 fd08 	bl	403094 <__aeabi_dmul>
  401684:	a32a      	add	r3, pc, #168	; (adr r3, 401730 <__ieee754_acos+0x2f8>)
  401686:	e9d3 2300 	ldrd	r2, r3, [r3]
  40168a:	f001 fb4f 	bl	402d2c <__aeabi_dsub>
  40168e:	4632      	mov	r2, r6
  401690:	463b      	mov	r3, r7
  401692:	f001 fcff 	bl	403094 <__aeabi_dmul>
  401696:	2200      	movs	r2, #0
  401698:	4b2f      	ldr	r3, [pc, #188]	; (401758 <__ieee754_acos+0x320>)
  40169a:	f001 fb49 	bl	402d30 <__adddf3>
  40169e:	4602      	mov	r2, r0
  4016a0:	460b      	mov	r3, r1
  4016a2:	4640      	mov	r0, r8
  4016a4:	4649      	mov	r1, r9
  4016a6:	f001 fe1f 	bl	4032e8 <__aeabi_ddiv>
  4016aa:	462a      	mov	r2, r5
  4016ac:	4623      	mov	r3, r4
  4016ae:	f001 fcf1 	bl	403094 <__aeabi_dmul>
  4016b2:	4602      	mov	r2, r0
  4016b4:	460b      	mov	r3, r1
  4016b6:	a122      	add	r1, pc, #136	; (adr r1, 401740 <__ieee754_acos+0x308>)
  4016b8:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016bc:	f001 fb36 	bl	402d2c <__aeabi_dsub>
  4016c0:	4602      	mov	r2, r0
  4016c2:	460b      	mov	r3, r1
  4016c4:	4628      	mov	r0, r5
  4016c6:	4621      	mov	r1, r4
  4016c8:	f001 fb30 	bl	402d2c <__aeabi_dsub>
  4016cc:	4602      	mov	r2, r0
  4016ce:	460b      	mov	r3, r1
  4016d0:	a119      	add	r1, pc, #100	; (adr r1, 401738 <__ieee754_acos+0x300>)
  4016d2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016d6:	f001 fb29 	bl	402d2c <__aeabi_dsub>
  4016da:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4016de:	a11a      	add	r1, pc, #104	; (adr r1, 401748 <__ieee754_acos+0x310>)
  4016e0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4016e8:	0dfdf709 	.word	0x0dfdf709
  4016ec:	3f023de1 	.word	0x3f023de1
  4016f0:	7501b288 	.word	0x7501b288
  4016f4:	3f49efe0 	.word	0x3f49efe0
  4016f8:	b5688f3b 	.word	0xb5688f3b
  4016fc:	3fa48228 	.word	0x3fa48228
  401700:	0e884455 	.word	0x0e884455
  401704:	3fc9c155 	.word	0x3fc9c155
  401708:	03eb6f7d 	.word	0x03eb6f7d
  40170c:	3fd4d612 	.word	0x3fd4d612
  401710:	55555555 	.word	0x55555555
  401714:	3fc55555 	.word	0x3fc55555
  401718:	b12e9282 	.word	0xb12e9282
  40171c:	3fb3b8c5 	.word	0x3fb3b8c5
  401720:	1b8d0159 	.word	0x1b8d0159
  401724:	3fe6066c 	.word	0x3fe6066c
  401728:	9c598ac8 	.word	0x9c598ac8
  40172c:	40002ae5 	.word	0x40002ae5
  401730:	1c8a2d4b 	.word	0x1c8a2d4b
  401734:	40033a27 	.word	0x40033a27
  401738:	54442d18 	.word	0x54442d18
  40173c:	3ff921fb 	.word	0x3ff921fb
  401740:	33145c07 	.word	0x33145c07
  401744:	3c91a626 	.word	0x3c91a626
  401748:	54442d18 	.word	0x54442d18
  40174c:	400921fb 	.word	0x400921fb
  401750:	3fefffff 	.word	0x3fefffff
  401754:	3fdfffff 	.word	0x3fdfffff
  401758:	3ff00000 	.word	0x3ff00000
  40175c:	3fe00000 	.word	0x3fe00000
  401760:	3c600000 	.word	0x3c600000
  401764:	2200      	movs	r2, #0
  401766:	4b5c      	ldr	r3, [pc, #368]	; (4018d8 <__ieee754_acos+0x4a0>)
  401768:	f001 fae2 	bl	402d30 <__adddf3>
  40176c:	2200      	movs	r2, #0
  40176e:	4b5b      	ldr	r3, [pc, #364]	; (4018dc <__ieee754_acos+0x4a4>)
  401770:	f001 fc90 	bl	403094 <__aeabi_dmul>
  401774:	a340      	add	r3, pc, #256	; (adr r3, 401878 <__ieee754_acos+0x440>)
  401776:	e9d3 2300 	ldrd	r2, r3, [r3]
  40177a:	4604      	mov	r4, r0
  40177c:	460d      	mov	r5, r1
  40177e:	f001 fc89 	bl	403094 <__aeabi_dmul>
  401782:	a33f      	add	r3, pc, #252	; (adr r3, 401880 <__ieee754_acos+0x448>)
  401784:	e9d3 2300 	ldrd	r2, r3, [r3]
  401788:	f001 fad2 	bl	402d30 <__adddf3>
  40178c:	4622      	mov	r2, r4
  40178e:	462b      	mov	r3, r5
  401790:	f001 fc80 	bl	403094 <__aeabi_dmul>
  401794:	a33c      	add	r3, pc, #240	; (adr r3, 401888 <__ieee754_acos+0x450>)
  401796:	e9d3 2300 	ldrd	r2, r3, [r3]
  40179a:	f001 fac7 	bl	402d2c <__aeabi_dsub>
  40179e:	4622      	mov	r2, r4
  4017a0:	462b      	mov	r3, r5
  4017a2:	f001 fc77 	bl	403094 <__aeabi_dmul>
  4017a6:	a33a      	add	r3, pc, #232	; (adr r3, 401890 <__ieee754_acos+0x458>)
  4017a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017ac:	f001 fac0 	bl	402d30 <__adddf3>
  4017b0:	4622      	mov	r2, r4
  4017b2:	462b      	mov	r3, r5
  4017b4:	f001 fc6e 	bl	403094 <__aeabi_dmul>
  4017b8:	a337      	add	r3, pc, #220	; (adr r3, 401898 <__ieee754_acos+0x460>)
  4017ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017be:	f001 fab5 	bl	402d2c <__aeabi_dsub>
  4017c2:	4622      	mov	r2, r4
  4017c4:	462b      	mov	r3, r5
  4017c6:	f001 fc65 	bl	403094 <__aeabi_dmul>
  4017ca:	a335      	add	r3, pc, #212	; (adr r3, 4018a0 <__ieee754_acos+0x468>)
  4017cc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017d0:	f001 faae 	bl	402d30 <__adddf3>
  4017d4:	4622      	mov	r2, r4
  4017d6:	462b      	mov	r3, r5
  4017d8:	f001 fc5c 	bl	403094 <__aeabi_dmul>
  4017dc:	4680      	mov	r8, r0
  4017de:	4689      	mov	r9, r1
  4017e0:	4620      	mov	r0, r4
  4017e2:	4629      	mov	r1, r5
  4017e4:	f000 fa9e 	bl	401d24 <__ieee754_sqrt>
  4017e8:	a32f      	add	r3, pc, #188	; (adr r3, 4018a8 <__ieee754_acos+0x470>)
  4017ea:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017ee:	4606      	mov	r6, r0
  4017f0:	460f      	mov	r7, r1
  4017f2:	4620      	mov	r0, r4
  4017f4:	4629      	mov	r1, r5
  4017f6:	f001 fc4d 	bl	403094 <__aeabi_dmul>
  4017fa:	a32d      	add	r3, pc, #180	; (adr r3, 4018b0 <__ieee754_acos+0x478>)
  4017fc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401800:	f001 fa94 	bl	402d2c <__aeabi_dsub>
  401804:	4622      	mov	r2, r4
  401806:	462b      	mov	r3, r5
  401808:	f001 fc44 	bl	403094 <__aeabi_dmul>
  40180c:	a32a      	add	r3, pc, #168	; (adr r3, 4018b8 <__ieee754_acos+0x480>)
  40180e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401812:	f001 fa8d 	bl	402d30 <__adddf3>
  401816:	4622      	mov	r2, r4
  401818:	462b      	mov	r3, r5
  40181a:	f001 fc3b 	bl	403094 <__aeabi_dmul>
  40181e:	a328      	add	r3, pc, #160	; (adr r3, 4018c0 <__ieee754_acos+0x488>)
  401820:	e9d3 2300 	ldrd	r2, r3, [r3]
  401824:	f001 fa82 	bl	402d2c <__aeabi_dsub>
  401828:	4622      	mov	r2, r4
  40182a:	462b      	mov	r3, r5
  40182c:	f001 fc32 	bl	403094 <__aeabi_dmul>
  401830:	2200      	movs	r2, #0
  401832:	4b29      	ldr	r3, [pc, #164]	; (4018d8 <__ieee754_acos+0x4a0>)
  401834:	f001 fa7c 	bl	402d30 <__adddf3>
  401838:	4602      	mov	r2, r0
  40183a:	460b      	mov	r3, r1
  40183c:	4640      	mov	r0, r8
  40183e:	4649      	mov	r1, r9
  401840:	f001 fd52 	bl	4032e8 <__aeabi_ddiv>
  401844:	4632      	mov	r2, r6
  401846:	463b      	mov	r3, r7
  401848:	f001 fc24 	bl	403094 <__aeabi_dmul>
  40184c:	a31e      	add	r3, pc, #120	; (adr r3, 4018c8 <__ieee754_acos+0x490>)
  40184e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401852:	f001 fa6b 	bl	402d2c <__aeabi_dsub>
  401856:	4632      	mov	r2, r6
  401858:	463b      	mov	r3, r7
  40185a:	f001 fa69 	bl	402d30 <__adddf3>
  40185e:	4602      	mov	r2, r0
  401860:	460b      	mov	r3, r1
  401862:	f001 fa65 	bl	402d30 <__adddf3>
  401866:	4602      	mov	r2, r0
  401868:	460b      	mov	r3, r1
  40186a:	a119      	add	r1, pc, #100	; (adr r1, 4018d0 <__ieee754_acos+0x498>)
  40186c:	e9d1 0100 	ldrd	r0, r1, [r1]
  401870:	f001 fa5c 	bl	402d2c <__aeabi_dsub>
  401874:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401878:	0dfdf709 	.word	0x0dfdf709
  40187c:	3f023de1 	.word	0x3f023de1
  401880:	7501b288 	.word	0x7501b288
  401884:	3f49efe0 	.word	0x3f49efe0
  401888:	b5688f3b 	.word	0xb5688f3b
  40188c:	3fa48228 	.word	0x3fa48228
  401890:	0e884455 	.word	0x0e884455
  401894:	3fc9c155 	.word	0x3fc9c155
  401898:	03eb6f7d 	.word	0x03eb6f7d
  40189c:	3fd4d612 	.word	0x3fd4d612
  4018a0:	55555555 	.word	0x55555555
  4018a4:	3fc55555 	.word	0x3fc55555
  4018a8:	b12e9282 	.word	0xb12e9282
  4018ac:	3fb3b8c5 	.word	0x3fb3b8c5
  4018b0:	1b8d0159 	.word	0x1b8d0159
  4018b4:	3fe6066c 	.word	0x3fe6066c
  4018b8:	9c598ac8 	.word	0x9c598ac8
  4018bc:	40002ae5 	.word	0x40002ae5
  4018c0:	1c8a2d4b 	.word	0x1c8a2d4b
  4018c4:	40033a27 	.word	0x40033a27
  4018c8:	33145c07 	.word	0x33145c07
  4018cc:	3c91a626 	.word	0x3c91a626
  4018d0:	54442d18 	.word	0x54442d18
  4018d4:	400921fb 	.word	0x400921fb
  4018d8:	3ff00000 	.word	0x3ff00000
  4018dc:	3fe00000 	.word	0x3fe00000

004018e0 <__ieee754_rem_pio2>:
  4018e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018e4:	4e9a      	ldr	r6, [pc, #616]	; (401b50 <__ieee754_rem_pio2+0x270>)
  4018e6:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  4018ea:	42b7      	cmp	r7, r6
  4018ec:	b091      	sub	sp, #68	; 0x44
  4018ee:	f340 808e 	ble.w	401a0e <__ieee754_rem_pio2+0x12e>
  4018f2:	4692      	mov	sl, r2
  4018f4:	4a97      	ldr	r2, [pc, #604]	; (401b54 <__ieee754_rem_pio2+0x274>)
  4018f6:	4297      	cmp	r7, r2
  4018f8:	460c      	mov	r4, r1
  4018fa:	dc26      	bgt.n	40194a <__ieee754_rem_pio2+0x6a>
  4018fc:	2900      	cmp	r1, #0
  4018fe:	a38a      	add	r3, pc, #552	; (adr r3, 401b28 <__ieee754_rem_pio2+0x248>)
  401900:	e9d3 2300 	ldrd	r2, r3, [r3]
  401904:	f340 81b4 	ble.w	401c70 <__ieee754_rem_pio2+0x390>
  401908:	f001 fa10 	bl	402d2c <__aeabi_dsub>
  40190c:	4b92      	ldr	r3, [pc, #584]	; (401b58 <__ieee754_rem_pio2+0x278>)
  40190e:	429f      	cmp	r7, r3
  401910:	4604      	mov	r4, r0
  401912:	460d      	mov	r5, r1
  401914:	f000 8090 	beq.w	401a38 <__ieee754_rem_pio2+0x158>
  401918:	a385      	add	r3, pc, #532	; (adr r3, 401b30 <__ieee754_rem_pio2+0x250>)
  40191a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40191e:	f001 fa05 	bl	402d2c <__aeabi_dsub>
  401922:	4602      	mov	r2, r0
  401924:	460b      	mov	r3, r1
  401926:	e9ca 2300 	strd	r2, r3, [sl]
  40192a:	4620      	mov	r0, r4
  40192c:	4629      	mov	r1, r5
  40192e:	f001 f9fd 	bl	402d2c <__aeabi_dsub>
  401932:	a37f      	add	r3, pc, #508	; (adr r3, 401b30 <__ieee754_rem_pio2+0x250>)
  401934:	e9d3 2300 	ldrd	r2, r3, [r3]
  401938:	f001 f9f8 	bl	402d2c <__aeabi_dsub>
  40193c:	2501      	movs	r5, #1
  40193e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401942:	4628      	mov	r0, r5
  401944:	b011      	add	sp, #68	; 0x44
  401946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40194a:	4a84      	ldr	r2, [pc, #528]	; (401b5c <__ieee754_rem_pio2+0x27c>)
  40194c:	4297      	cmp	r7, r2
  40194e:	f340 8090 	ble.w	401a72 <__ieee754_rem_pio2+0x192>
  401952:	4a83      	ldr	r2, [pc, #524]	; (401b60 <__ieee754_rem_pio2+0x280>)
  401954:	4297      	cmp	r7, r2
  401956:	dc65      	bgt.n	401a24 <__ieee754_rem_pio2+0x144>
  401958:	153d      	asrs	r5, r7, #20
  40195a:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
  40195e:	eba7 5305 	sub.w	r3, r7, r5, lsl #20
  401962:	4619      	mov	r1, r3
  401964:	461f      	mov	r7, r3
  401966:	4606      	mov	r6, r0
  401968:	f001 fe44 	bl	4035f4 <__aeabi_d2iz>
  40196c:	f001 fb2c 	bl	402fc8 <__aeabi_i2d>
  401970:	4680      	mov	r8, r0
  401972:	4689      	mov	r9, r1
  401974:	4602      	mov	r2, r0
  401976:	460b      	mov	r3, r1
  401978:	4630      	mov	r0, r6
  40197a:	4639      	mov	r1, r7
  40197c:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  401980:	f001 f9d4 	bl	402d2c <__aeabi_dsub>
  401984:	2200      	movs	r2, #0
  401986:	4b77      	ldr	r3, [pc, #476]	; (401b64 <__ieee754_rem_pio2+0x284>)
  401988:	f001 fb84 	bl	403094 <__aeabi_dmul>
  40198c:	4689      	mov	r9, r1
  40198e:	4680      	mov	r8, r0
  401990:	f001 fe30 	bl	4035f4 <__aeabi_d2iz>
  401994:	f001 fb18 	bl	402fc8 <__aeabi_i2d>
  401998:	4602      	mov	r2, r0
  40199a:	460b      	mov	r3, r1
  40199c:	4606      	mov	r6, r0
  40199e:	460f      	mov	r7, r1
  4019a0:	4640      	mov	r0, r8
  4019a2:	4649      	mov	r1, r9
  4019a4:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
  4019a8:	f001 f9c0 	bl	402d2c <__aeabi_dsub>
  4019ac:	2200      	movs	r2, #0
  4019ae:	4b6d      	ldr	r3, [pc, #436]	; (401b64 <__ieee754_rem_pio2+0x284>)
  4019b0:	f001 fb70 	bl	403094 <__aeabi_dmul>
  4019b4:	2200      	movs	r2, #0
  4019b6:	2300      	movs	r3, #0
  4019b8:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  4019bc:	f001 fdd2 	bl	403564 <__aeabi_dcmpeq>
  4019c0:	2800      	cmp	r0, #0
  4019c2:	f000 8173 	beq.w	401cac <__ieee754_rem_pio2+0x3cc>
  4019c6:	2300      	movs	r3, #0
  4019c8:	4630      	mov	r0, r6
  4019ca:	4639      	mov	r1, r7
  4019cc:	2200      	movs	r2, #0
  4019ce:	f001 fdc9 	bl	403564 <__aeabi_dcmpeq>
  4019d2:	2800      	cmp	r0, #0
  4019d4:	bf14      	ite	ne
  4019d6:	2301      	movne	r3, #1
  4019d8:	2302      	moveq	r3, #2
  4019da:	4a63      	ldr	r2, [pc, #396]	; (401b68 <__ieee754_rem_pio2+0x288>)
  4019dc:	9201      	str	r2, [sp, #4]
  4019de:	2102      	movs	r1, #2
  4019e0:	462a      	mov	r2, r5
  4019e2:	9100      	str	r1, [sp, #0]
  4019e4:	a80a      	add	r0, sp, #40	; 0x28
  4019e6:	4651      	mov	r1, sl
  4019e8:	f000 fb7e 	bl	4020e8 <__kernel_rem_pio2>
  4019ec:	2c00      	cmp	r4, #0
  4019ee:	4605      	mov	r5, r0
  4019f0:	da14      	bge.n	401a1c <__ieee754_rem_pio2+0x13c>
  4019f2:	f8da 2004 	ldr.w	r2, [sl, #4]
  4019f6:	f8da 300c 	ldr.w	r3, [sl, #12]
  4019fa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  4019fe:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  401a02:	4245      	negs	r5, r0
  401a04:	f8ca 2004 	str.w	r2, [sl, #4]
  401a08:	f8ca 300c 	str.w	r3, [sl, #12]
  401a0c:	e006      	b.n	401a1c <__ieee754_rem_pio2+0x13c>
  401a0e:	e9c2 0100 	strd	r0, r1, [r2]
  401a12:	2500      	movs	r5, #0
  401a14:	2400      	movs	r4, #0
  401a16:	e9c2 4502 	strd	r4, r5, [r2, #8]
  401a1a:	2500      	movs	r5, #0
  401a1c:	4628      	mov	r0, r5
  401a1e:	b011      	add	sp, #68	; 0x44
  401a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a24:	4602      	mov	r2, r0
  401a26:	460b      	mov	r3, r1
  401a28:	f001 f980 	bl	402d2c <__aeabi_dsub>
  401a2c:	2500      	movs	r5, #0
  401a2e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401a32:	e9ca 0100 	strd	r0, r1, [sl]
  401a36:	e7f1      	b.n	401a1c <__ieee754_rem_pio2+0x13c>
  401a38:	a33f      	add	r3, pc, #252	; (adr r3, 401b38 <__ieee754_rem_pio2+0x258>)
  401a3a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a3e:	f001 f975 	bl	402d2c <__aeabi_dsub>
  401a42:	a33f      	add	r3, pc, #252	; (adr r3, 401b40 <__ieee754_rem_pio2+0x260>)
  401a44:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a48:	460d      	mov	r5, r1
  401a4a:	4604      	mov	r4, r0
  401a4c:	f001 f96e 	bl	402d2c <__aeabi_dsub>
  401a50:	4602      	mov	r2, r0
  401a52:	460b      	mov	r3, r1
  401a54:	e9ca 2300 	strd	r2, r3, [sl]
  401a58:	4629      	mov	r1, r5
  401a5a:	4620      	mov	r0, r4
  401a5c:	f001 f966 	bl	402d2c <__aeabi_dsub>
  401a60:	a337      	add	r3, pc, #220	; (adr r3, 401b40 <__ieee754_rem_pio2+0x260>)
  401a62:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a66:	f001 f961 	bl	402d2c <__aeabi_dsub>
  401a6a:	2501      	movs	r5, #1
  401a6c:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401a70:	e7d4      	b.n	401a1c <__ieee754_rem_pio2+0x13c>
  401a72:	f001 f837 	bl	402ae4 <fabs>
  401a76:	a334      	add	r3, pc, #208	; (adr r3, 401b48 <__ieee754_rem_pio2+0x268>)
  401a78:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a7c:	4680      	mov	r8, r0
  401a7e:	4689      	mov	r9, r1
  401a80:	f001 fb08 	bl	403094 <__aeabi_dmul>
  401a84:	2200      	movs	r2, #0
  401a86:	4b39      	ldr	r3, [pc, #228]	; (401b6c <__ieee754_rem_pio2+0x28c>)
  401a88:	f001 f952 	bl	402d30 <__adddf3>
  401a8c:	f001 fdb2 	bl	4035f4 <__aeabi_d2iz>
  401a90:	4605      	mov	r5, r0
  401a92:	f001 fa99 	bl	402fc8 <__aeabi_i2d>
  401a96:	a324      	add	r3, pc, #144	; (adr r3, 401b28 <__ieee754_rem_pio2+0x248>)
  401a98:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a9c:	e9cd 0104 	strd	r0, r1, [sp, #16]
  401aa0:	f001 faf8 	bl	403094 <__aeabi_dmul>
  401aa4:	4602      	mov	r2, r0
  401aa6:	460b      	mov	r3, r1
  401aa8:	4640      	mov	r0, r8
  401aaa:	4649      	mov	r1, r9
  401aac:	f001 f93e 	bl	402d2c <__aeabi_dsub>
  401ab0:	a31f      	add	r3, pc, #124	; (adr r3, 401b30 <__ieee754_rem_pio2+0x250>)
  401ab2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ab6:	4680      	mov	r8, r0
  401ab8:	4689      	mov	r9, r1
  401aba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401abe:	f001 fae9 	bl	403094 <__aeabi_dmul>
  401ac2:	2d1f      	cmp	r5, #31
  401ac4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401ac8:	dc54      	bgt.n	401b74 <__ieee754_rem_pio2+0x294>
  401aca:	4b29      	ldr	r3, [pc, #164]	; (401b70 <__ieee754_rem_pio2+0x290>)
  401acc:	1e6a      	subs	r2, r5, #1
  401ace:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  401ad2:	429f      	cmp	r7, r3
  401ad4:	d04e      	beq.n	401b74 <__ieee754_rem_pio2+0x294>
  401ad6:	4602      	mov	r2, r0
  401ad8:	460b      	mov	r3, r1
  401ada:	4640      	mov	r0, r8
  401adc:	4649      	mov	r1, r9
  401ade:	f001 f925 	bl	402d2c <__aeabi_dsub>
  401ae2:	4602      	mov	r2, r0
  401ae4:	460b      	mov	r3, r1
  401ae6:	e9ca 2300 	strd	r2, r3, [sl]
  401aea:	4683      	mov	fp, r0
  401aec:	460e      	mov	r6, r1
  401aee:	465a      	mov	r2, fp
  401af0:	4633      	mov	r3, r6
  401af2:	4640      	mov	r0, r8
  401af4:	4649      	mov	r1, r9
  401af6:	f001 f919 	bl	402d2c <__aeabi_dsub>
  401afa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401afe:	f001 f915 	bl	402d2c <__aeabi_dsub>
  401b02:	2c00      	cmp	r4, #0
  401b04:	4602      	mov	r2, r0
  401b06:	460b      	mov	r3, r1
  401b08:	e9ca 2302 	strd	r2, r3, [sl, #8]
  401b0c:	da86      	bge.n	401a1c <__ieee754_rem_pio2+0x13c>
  401b0e:	465b      	mov	r3, fp
  401b10:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
  401b14:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  401b18:	e88a 0048 	stmia.w	sl, {r3, r6}
  401b1c:	f8ca 100c 	str.w	r1, [sl, #12]
  401b20:	f8ca 0008 	str.w	r0, [sl, #8]
  401b24:	426d      	negs	r5, r5
  401b26:	e779      	b.n	401a1c <__ieee754_rem_pio2+0x13c>
  401b28:	54400000 	.word	0x54400000
  401b2c:	3ff921fb 	.word	0x3ff921fb
  401b30:	1a626331 	.word	0x1a626331
  401b34:	3dd0b461 	.word	0x3dd0b461
  401b38:	1a600000 	.word	0x1a600000
  401b3c:	3dd0b461 	.word	0x3dd0b461
  401b40:	2e037073 	.word	0x2e037073
  401b44:	3ba3198a 	.word	0x3ba3198a
  401b48:	6dc9c883 	.word	0x6dc9c883
  401b4c:	3fe45f30 	.word	0x3fe45f30
  401b50:	3fe921fb 	.word	0x3fe921fb
  401b54:	4002d97b 	.word	0x4002d97b
  401b58:	3ff921fb 	.word	0x3ff921fb
  401b5c:	413921fb 	.word	0x413921fb
  401b60:	7fefffff 	.word	0x7fefffff
  401b64:	41700000 	.word	0x41700000
  401b68:	004037c4 	.word	0x004037c4
  401b6c:	3fe00000 	.word	0x3fe00000
  401b70:	00403744 	.word	0x00403744
  401b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401b78:	4640      	mov	r0, r8
  401b7a:	4649      	mov	r1, r9
  401b7c:	f001 f8d6 	bl	402d2c <__aeabi_dsub>
  401b80:	153a      	asrs	r2, r7, #20
  401b82:	f3c1 530a 	ubfx	r3, r1, #20, #11
  401b86:	1ad3      	subs	r3, r2, r3
  401b88:	2b10      	cmp	r3, #16
  401b8a:	4683      	mov	fp, r0
  401b8c:	460e      	mov	r6, r1
  401b8e:	9209      	str	r2, [sp, #36]	; 0x24
  401b90:	e9ca 0100 	strd	r0, r1, [sl]
  401b94:	ddab      	ble.n	401aee <__ieee754_rem_pio2+0x20e>
  401b96:	a358      	add	r3, pc, #352	; (adr r3, 401cf8 <__ieee754_rem_pio2+0x418>)
  401b98:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b9c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401ba0:	f001 fa78 	bl	403094 <__aeabi_dmul>
  401ba4:	4606      	mov	r6, r0
  401ba6:	460f      	mov	r7, r1
  401ba8:	4602      	mov	r2, r0
  401baa:	460b      	mov	r3, r1
  401bac:	4640      	mov	r0, r8
  401bae:	4649      	mov	r1, r9
  401bb0:	f001 f8bc 	bl	402d2c <__aeabi_dsub>
  401bb4:	e9cd 0106 	strd	r0, r1, [sp, #24]
  401bb8:	4602      	mov	r2, r0
  401bba:	460b      	mov	r3, r1
  401bbc:	4640      	mov	r0, r8
  401bbe:	4649      	mov	r1, r9
  401bc0:	f001 f8b4 	bl	402d2c <__aeabi_dsub>
  401bc4:	4632      	mov	r2, r6
  401bc6:	463b      	mov	r3, r7
  401bc8:	f001 f8b0 	bl	402d2c <__aeabi_dsub>
  401bcc:	a34c      	add	r3, pc, #304	; (adr r3, 401d00 <__ieee754_rem_pio2+0x420>)
  401bce:	e9d3 2300 	ldrd	r2, r3, [r3]
  401bd2:	4606      	mov	r6, r0
  401bd4:	460f      	mov	r7, r1
  401bd6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401bda:	f001 fa5b 	bl	403094 <__aeabi_dmul>
  401bde:	4632      	mov	r2, r6
  401be0:	463b      	mov	r3, r7
  401be2:	f001 f8a3 	bl	402d2c <__aeabi_dsub>
  401be6:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  401bea:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401bee:	4602      	mov	r2, r0
  401bf0:	460b      	mov	r3, r1
  401bf2:	4640      	mov	r0, r8
  401bf4:	4649      	mov	r1, r9
  401bf6:	f001 f899 	bl	402d2c <__aeabi_dsub>
  401bfa:	460b      	mov	r3, r1
  401bfc:	f3c1 570a 	ubfx	r7, r1, #20, #11
  401c00:	460e      	mov	r6, r1
  401c02:	9909      	ldr	r1, [sp, #36]	; 0x24
  401c04:	1bcf      	subs	r7, r1, r7
  401c06:	4602      	mov	r2, r0
  401c08:	2f31      	cmp	r7, #49	; 0x31
  401c0a:	4683      	mov	fp, r0
  401c0c:	e9ca 2300 	strd	r2, r3, [sl]
  401c10:	dd6c      	ble.n	401cec <__ieee754_rem_pio2+0x40c>
  401c12:	a33d      	add	r3, pc, #244	; (adr r3, 401d08 <__ieee754_rem_pio2+0x428>)
  401c14:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c18:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401c1c:	f001 fa3a 	bl	403094 <__aeabi_dmul>
  401c20:	4606      	mov	r6, r0
  401c22:	460f      	mov	r7, r1
  401c24:	4602      	mov	r2, r0
  401c26:	460b      	mov	r3, r1
  401c28:	4640      	mov	r0, r8
  401c2a:	4649      	mov	r1, r9
  401c2c:	e9cd 8906 	strd	r8, r9, [sp, #24]
  401c30:	f001 f87c 	bl	402d2c <__aeabi_dsub>
  401c34:	4602      	mov	r2, r0
  401c36:	460b      	mov	r3, r1
  401c38:	4680      	mov	r8, r0
  401c3a:	4689      	mov	r9, r1
  401c3c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  401c40:	f001 f874 	bl	402d2c <__aeabi_dsub>
  401c44:	4632      	mov	r2, r6
  401c46:	463b      	mov	r3, r7
  401c48:	f001 f870 	bl	402d2c <__aeabi_dsub>
  401c4c:	a330      	add	r3, pc, #192	; (adr r3, 401d10 <__ieee754_rem_pio2+0x430>)
  401c4e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c52:	4606      	mov	r6, r0
  401c54:	460f      	mov	r7, r1
  401c56:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401c5a:	f001 fa1b 	bl	403094 <__aeabi_dmul>
  401c5e:	4632      	mov	r2, r6
  401c60:	463b      	mov	r3, r7
  401c62:	f001 f863 	bl	402d2c <__aeabi_dsub>
  401c66:	4602      	mov	r2, r0
  401c68:	460b      	mov	r3, r1
  401c6a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  401c6e:	e734      	b.n	401ada <__ieee754_rem_pio2+0x1fa>
  401c70:	f001 f85e 	bl	402d30 <__adddf3>
  401c74:	4b2a      	ldr	r3, [pc, #168]	; (401d20 <__ieee754_rem_pio2+0x440>)
  401c76:	429f      	cmp	r7, r3
  401c78:	4604      	mov	r4, r0
  401c7a:	460d      	mov	r5, r1
  401c7c:	d018      	beq.n	401cb0 <__ieee754_rem_pio2+0x3d0>
  401c7e:	a326      	add	r3, pc, #152	; (adr r3, 401d18 <__ieee754_rem_pio2+0x438>)
  401c80:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c84:	f001 f854 	bl	402d30 <__adddf3>
  401c88:	4602      	mov	r2, r0
  401c8a:	460b      	mov	r3, r1
  401c8c:	e9ca 2300 	strd	r2, r3, [sl]
  401c90:	4629      	mov	r1, r5
  401c92:	4620      	mov	r0, r4
  401c94:	f001 f84a 	bl	402d2c <__aeabi_dsub>
  401c98:	a31f      	add	r3, pc, #124	; (adr r3, 401d18 <__ieee754_rem_pio2+0x438>)
  401c9a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c9e:	f001 f847 	bl	402d30 <__adddf3>
  401ca2:	f04f 35ff 	mov.w	r5, #4294967295
  401ca6:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401caa:	e6b7      	b.n	401a1c <__ieee754_rem_pio2+0x13c>
  401cac:	2303      	movs	r3, #3
  401cae:	e694      	b.n	4019da <__ieee754_rem_pio2+0xfa>
  401cb0:	a311      	add	r3, pc, #68	; (adr r3, 401cf8 <__ieee754_rem_pio2+0x418>)
  401cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cb6:	f001 f83b 	bl	402d30 <__adddf3>
  401cba:	a311      	add	r3, pc, #68	; (adr r3, 401d00 <__ieee754_rem_pio2+0x420>)
  401cbc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cc0:	460d      	mov	r5, r1
  401cc2:	4604      	mov	r4, r0
  401cc4:	f001 f834 	bl	402d30 <__adddf3>
  401cc8:	4602      	mov	r2, r0
  401cca:	460b      	mov	r3, r1
  401ccc:	e9ca 2300 	strd	r2, r3, [sl]
  401cd0:	4629      	mov	r1, r5
  401cd2:	4620      	mov	r0, r4
  401cd4:	f001 f82a 	bl	402d2c <__aeabi_dsub>
  401cd8:	a309      	add	r3, pc, #36	; (adr r3, 401d00 <__ieee754_rem_pio2+0x420>)
  401cda:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cde:	f001 f827 	bl	402d30 <__adddf3>
  401ce2:	f04f 35ff 	mov.w	r5, #4294967295
  401ce6:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401cea:	e697      	b.n	401a1c <__ieee754_rem_pio2+0x13c>
  401cec:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  401cf0:	e6fd      	b.n	401aee <__ieee754_rem_pio2+0x20e>
  401cf2:	bf00      	nop
  401cf4:	f3af 8000 	nop.w
  401cf8:	1a600000 	.word	0x1a600000
  401cfc:	3dd0b461 	.word	0x3dd0b461
  401d00:	2e037073 	.word	0x2e037073
  401d04:	3ba3198a 	.word	0x3ba3198a
  401d08:	2e000000 	.word	0x2e000000
  401d0c:	3ba3198a 	.word	0x3ba3198a
  401d10:	252049c1 	.word	0x252049c1
  401d14:	397b839a 	.word	0x397b839a
  401d18:	1a626331 	.word	0x1a626331
  401d1c:	3dd0b461 	.word	0x3dd0b461
  401d20:	3ff921fb 	.word	0x3ff921fb

00401d24 <__ieee754_sqrt>:
  401d24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401d28:	4f5b      	ldr	r7, [pc, #364]	; (401e98 <__ieee754_sqrt+0x174>)
  401d2a:	438f      	bics	r7, r1
  401d2c:	4605      	mov	r5, r0
  401d2e:	460c      	mov	r4, r1
  401d30:	f000 8092 	beq.w	401e58 <__ieee754_sqrt+0x134>
  401d34:	2900      	cmp	r1, #0
  401d36:	460b      	mov	r3, r1
  401d38:	4602      	mov	r2, r0
  401d3a:	dd6f      	ble.n	401e1c <__ieee754_sqrt+0xf8>
  401d3c:	150f      	asrs	r7, r1, #20
  401d3e:	d07b      	beq.n	401e38 <__ieee754_sqrt+0x114>
  401d40:	f2a7 37ff 	subw	r7, r7, #1023	; 0x3ff
  401d44:	f3c3 0313 	ubfx	r3, r3, #0, #20
  401d48:	07f8      	lsls	r0, r7, #31
  401d4a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401d4e:	d45c      	bmi.n	401e0a <__ieee754_sqrt+0xe6>
  401d50:	eb03 71d2 	add.w	r1, r3, r2, lsr #31
  401d54:	2600      	movs	r6, #0
  401d56:	440b      	add	r3, r1
  401d58:	107f      	asrs	r7, r7, #1
  401d5a:	0052      	lsls	r2, r2, #1
  401d5c:	46b6      	mov	lr, r6
  401d5e:	2016      	movs	r0, #22
  401d60:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  401d64:	eb0e 0401 	add.w	r4, lr, r1
  401d68:	429c      	cmp	r4, r3
  401d6a:	ea4f 75d2 	mov.w	r5, r2, lsr #31
  401d6e:	ea4f 0242 	mov.w	r2, r2, lsl #1
  401d72:	dc03      	bgt.n	401d7c <__ieee754_sqrt+0x58>
  401d74:	1b1b      	subs	r3, r3, r4
  401d76:	eb04 0e01 	add.w	lr, r4, r1
  401d7a:	440e      	add	r6, r1
  401d7c:	3801      	subs	r0, #1
  401d7e:	eb05 0343 	add.w	r3, r5, r3, lsl #1
  401d82:	ea4f 0151 	mov.w	r1, r1, lsr #1
  401d86:	d1ed      	bne.n	401d64 <__ieee754_sqrt+0x40>
  401d88:	4684      	mov	ip, r0
  401d8a:	2420      	movs	r4, #32
  401d8c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401d90:	e009      	b.n	401da6 <__ieee754_sqrt+0x82>
  401d92:	d020      	beq.n	401dd6 <__ieee754_sqrt+0xb2>
  401d94:	eb03 75d2 	add.w	r5, r3, r2, lsr #31
  401d98:	3c01      	subs	r4, #1
  401d9a:	ea4f 0151 	mov.w	r1, r1, lsr #1
  401d9e:	442b      	add	r3, r5
  401da0:	ea4f 0242 	mov.w	r2, r2, lsl #1
  401da4:	d020      	beq.n	401de8 <__ieee754_sqrt+0xc4>
  401da6:	4573      	cmp	r3, lr
  401da8:	eb01 050c 	add.w	r5, r1, ip
  401dac:	ddf1      	ble.n	401d92 <__ieee754_sqrt+0x6e>
  401dae:	2d00      	cmp	r5, #0
  401db0:	eb05 0c01 	add.w	ip, r5, r1
  401db4:	db09      	blt.n	401dca <__ieee754_sqrt+0xa6>
  401db6:	46f0      	mov	r8, lr
  401db8:	4295      	cmp	r5, r2
  401dba:	eba3 030e 	sub.w	r3, r3, lr
  401dbe:	d900      	bls.n	401dc2 <__ieee754_sqrt+0x9e>
  401dc0:	3b01      	subs	r3, #1
  401dc2:	1b52      	subs	r2, r2, r5
  401dc4:	4408      	add	r0, r1
  401dc6:	46c6      	mov	lr, r8
  401dc8:	e7e4      	b.n	401d94 <__ieee754_sqrt+0x70>
  401dca:	f1bc 0f00 	cmp.w	ip, #0
  401dce:	dbf2      	blt.n	401db6 <__ieee754_sqrt+0x92>
  401dd0:	f10e 0801 	add.w	r8, lr, #1
  401dd4:	e7f0      	b.n	401db8 <__ieee754_sqrt+0x94>
  401dd6:	4295      	cmp	r5, r2
  401dd8:	d8dc      	bhi.n	401d94 <__ieee754_sqrt+0x70>
  401dda:	2d00      	cmp	r5, #0
  401ddc:	eb05 0c01 	add.w	ip, r5, r1
  401de0:	db44      	blt.n	401e6c <__ieee754_sqrt+0x148>
  401de2:	4698      	mov	r8, r3
  401de4:	2300      	movs	r3, #0
  401de6:	e7ec      	b.n	401dc2 <__ieee754_sqrt+0x9e>
  401de8:	4313      	orrs	r3, r2
  401dea:	d113      	bne.n	401e14 <__ieee754_sqrt+0xf0>
  401dec:	0840      	lsrs	r0, r0, #1
  401dee:	1073      	asrs	r3, r6, #1
  401df0:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
  401df4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401df8:	07f2      	lsls	r2, r6, #31
  401dfa:	eb03 5907 	add.w	r9, r3, r7, lsl #20
  401dfe:	bf48      	it	mi
  401e00:	f040 4000 	orrmi.w	r0, r0, #2147483648	; 0x80000000
  401e04:	4649      	mov	r1, r9
  401e06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401e0a:	005b      	lsls	r3, r3, #1
  401e0c:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
  401e10:	0052      	lsls	r2, r2, #1
  401e12:	e79d      	b.n	401d50 <__ieee754_sqrt+0x2c>
  401e14:	1c41      	adds	r1, r0, #1
  401e16:	d02d      	beq.n	401e74 <__ieee754_sqrt+0x150>
  401e18:	3001      	adds	r0, #1
  401e1a:	e7e7      	b.n	401dec <__ieee754_sqrt+0xc8>
  401e1c:	4606      	mov	r6, r0
  401e1e:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  401e22:	433e      	orrs	r6, r7
  401e24:	d0ef      	beq.n	401e06 <__ieee754_sqrt+0xe2>
  401e26:	bb69      	cbnz	r1, 401e84 <__ieee754_sqrt+0x160>
  401e28:	460f      	mov	r7, r1
  401e2a:	0ad3      	lsrs	r3, r2, #11
  401e2c:	3f15      	subs	r7, #21
  401e2e:	0552      	lsls	r2, r2, #21
  401e30:	2b00      	cmp	r3, #0
  401e32:	d0fa      	beq.n	401e2a <__ieee754_sqrt+0x106>
  401e34:	02de      	lsls	r6, r3, #11
  401e36:	d420      	bmi.n	401e7a <__ieee754_sqrt+0x156>
  401e38:	2400      	movs	r4, #0
  401e3a:	e000      	b.n	401e3e <__ieee754_sqrt+0x11a>
  401e3c:	4604      	mov	r4, r0
  401e3e:	005b      	lsls	r3, r3, #1
  401e40:	02dd      	lsls	r5, r3, #11
  401e42:	f104 0001 	add.w	r0, r4, #1
  401e46:	d5f9      	bpl.n	401e3c <__ieee754_sqrt+0x118>
  401e48:	f1c0 0120 	rsb	r1, r0, #32
  401e4c:	fa22 f101 	lsr.w	r1, r2, r1
  401e50:	430b      	orrs	r3, r1
  401e52:	1b3f      	subs	r7, r7, r4
  401e54:	4082      	lsls	r2, r0
  401e56:	e773      	b.n	401d40 <__ieee754_sqrt+0x1c>
  401e58:	4602      	mov	r2, r0
  401e5a:	460b      	mov	r3, r1
  401e5c:	f001 f91a 	bl	403094 <__aeabi_dmul>
  401e60:	462a      	mov	r2, r5
  401e62:	4623      	mov	r3, r4
  401e64:	f000 ff64 	bl	402d30 <__adddf3>
  401e68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401e6c:	f1bc 0f00 	cmp.w	ip, #0
  401e70:	daae      	bge.n	401dd0 <__ieee754_sqrt+0xac>
  401e72:	e7b6      	b.n	401de2 <__ieee754_sqrt+0xbe>
  401e74:	3601      	adds	r6, #1
  401e76:	4620      	mov	r0, r4
  401e78:	e7b9      	b.n	401dee <__ieee754_sqrt+0xca>
  401e7a:	2000      	movs	r0, #0
  401e7c:	2120      	movs	r1, #32
  401e7e:	f04f 34ff 	mov.w	r4, #4294967295
  401e82:	e7e3      	b.n	401e4c <__ieee754_sqrt+0x128>
  401e84:	4602      	mov	r2, r0
  401e86:	460b      	mov	r3, r1
  401e88:	f000 ff50 	bl	402d2c <__aeabi_dsub>
  401e8c:	4602      	mov	r2, r0
  401e8e:	460b      	mov	r3, r1
  401e90:	f001 fa2a 	bl	4032e8 <__aeabi_ddiv>
  401e94:	e7b7      	b.n	401e06 <__ieee754_sqrt+0xe2>
  401e96:	bf00      	nop
  401e98:	7ff00000 	.word	0x7ff00000
  401e9c:	00000000 	.word	0x00000000

00401ea0 <__kernel_cos>:
  401ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401ea4:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  401ea8:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  401eac:	b085      	sub	sp, #20
  401eae:	460c      	mov	r4, r1
  401eb0:	4692      	mov	sl, r2
  401eb2:	469b      	mov	fp, r3
  401eb4:	4605      	mov	r5, r0
  401eb6:	da6b      	bge.n	401f90 <__kernel_cos+0xf0>
  401eb8:	f001 fb9c 	bl	4035f4 <__aeabi_d2iz>
  401ebc:	2800      	cmp	r0, #0
  401ebe:	f000 80e8 	beq.w	402092 <__kernel_cos+0x1f2>
  401ec2:	462a      	mov	r2, r5
  401ec4:	4623      	mov	r3, r4
  401ec6:	4628      	mov	r0, r5
  401ec8:	4621      	mov	r1, r4
  401eca:	f001 f8e3 	bl	403094 <__aeabi_dmul>
  401ece:	a374      	add	r3, pc, #464	; (adr r3, 4020a0 <__kernel_cos+0x200>)
  401ed0:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ed4:	4680      	mov	r8, r0
  401ed6:	4689      	mov	r9, r1
  401ed8:	f001 f8dc 	bl	403094 <__aeabi_dmul>
  401edc:	a372      	add	r3, pc, #456	; (adr r3, 4020a8 <__kernel_cos+0x208>)
  401ede:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ee2:	f000 ff25 	bl	402d30 <__adddf3>
  401ee6:	4642      	mov	r2, r8
  401ee8:	464b      	mov	r3, r9
  401eea:	f001 f8d3 	bl	403094 <__aeabi_dmul>
  401eee:	a370      	add	r3, pc, #448	; (adr r3, 4020b0 <__kernel_cos+0x210>)
  401ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ef4:	f000 ff1a 	bl	402d2c <__aeabi_dsub>
  401ef8:	4642      	mov	r2, r8
  401efa:	464b      	mov	r3, r9
  401efc:	f001 f8ca 	bl	403094 <__aeabi_dmul>
  401f00:	a36d      	add	r3, pc, #436	; (adr r3, 4020b8 <__kernel_cos+0x218>)
  401f02:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f06:	f000 ff13 	bl	402d30 <__adddf3>
  401f0a:	4642      	mov	r2, r8
  401f0c:	464b      	mov	r3, r9
  401f0e:	f001 f8c1 	bl	403094 <__aeabi_dmul>
  401f12:	a36b      	add	r3, pc, #428	; (adr r3, 4020c0 <__kernel_cos+0x220>)
  401f14:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f18:	f000 ff08 	bl	402d2c <__aeabi_dsub>
  401f1c:	4642      	mov	r2, r8
  401f1e:	464b      	mov	r3, r9
  401f20:	f001 f8b8 	bl	403094 <__aeabi_dmul>
  401f24:	a368      	add	r3, pc, #416	; (adr r3, 4020c8 <__kernel_cos+0x228>)
  401f26:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f2a:	f000 ff01 	bl	402d30 <__adddf3>
  401f2e:	4642      	mov	r2, r8
  401f30:	464b      	mov	r3, r9
  401f32:	f001 f8af 	bl	403094 <__aeabi_dmul>
  401f36:	e9cd 0100 	strd	r0, r1, [sp]
  401f3a:	2200      	movs	r2, #0
  401f3c:	4b64      	ldr	r3, [pc, #400]	; (4020d0 <__kernel_cos+0x230>)
  401f3e:	4640      	mov	r0, r8
  401f40:	4649      	mov	r1, r9
  401f42:	f001 f8a7 	bl	403094 <__aeabi_dmul>
  401f46:	e9dd 2300 	ldrd	r2, r3, [sp]
  401f4a:	4606      	mov	r6, r0
  401f4c:	460f      	mov	r7, r1
  401f4e:	4640      	mov	r0, r8
  401f50:	4649      	mov	r1, r9
  401f52:	f001 f89f 	bl	403094 <__aeabi_dmul>
  401f56:	4652      	mov	r2, sl
  401f58:	4680      	mov	r8, r0
  401f5a:	4689      	mov	r9, r1
  401f5c:	465b      	mov	r3, fp
  401f5e:	4628      	mov	r0, r5
  401f60:	4621      	mov	r1, r4
  401f62:	f001 f897 	bl	403094 <__aeabi_dmul>
  401f66:	4602      	mov	r2, r0
  401f68:	460b      	mov	r3, r1
  401f6a:	4640      	mov	r0, r8
  401f6c:	4649      	mov	r1, r9
  401f6e:	f000 fedd 	bl	402d2c <__aeabi_dsub>
  401f72:	4602      	mov	r2, r0
  401f74:	460b      	mov	r3, r1
  401f76:	4630      	mov	r0, r6
  401f78:	4639      	mov	r1, r7
  401f7a:	f000 fed7 	bl	402d2c <__aeabi_dsub>
  401f7e:	4602      	mov	r2, r0
  401f80:	460b      	mov	r3, r1
  401f82:	2000      	movs	r0, #0
  401f84:	4953      	ldr	r1, [pc, #332]	; (4020d4 <__kernel_cos+0x234>)
  401f86:	f000 fed1 	bl	402d2c <__aeabi_dsub>
  401f8a:	b005      	add	sp, #20
  401f8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f90:	4602      	mov	r2, r0
  401f92:	460b      	mov	r3, r1
  401f94:	f001 f87e 	bl	403094 <__aeabi_dmul>
  401f98:	a341      	add	r3, pc, #260	; (adr r3, 4020a0 <__kernel_cos+0x200>)
  401f9a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f9e:	4680      	mov	r8, r0
  401fa0:	4689      	mov	r9, r1
  401fa2:	f001 f877 	bl	403094 <__aeabi_dmul>
  401fa6:	a340      	add	r3, pc, #256	; (adr r3, 4020a8 <__kernel_cos+0x208>)
  401fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401fac:	f000 fec0 	bl	402d30 <__adddf3>
  401fb0:	4642      	mov	r2, r8
  401fb2:	464b      	mov	r3, r9
  401fb4:	f001 f86e 	bl	403094 <__aeabi_dmul>
  401fb8:	a33d      	add	r3, pc, #244	; (adr r3, 4020b0 <__kernel_cos+0x210>)
  401fba:	e9d3 2300 	ldrd	r2, r3, [r3]
  401fbe:	f000 feb5 	bl	402d2c <__aeabi_dsub>
  401fc2:	4642      	mov	r2, r8
  401fc4:	464b      	mov	r3, r9
  401fc6:	f001 f865 	bl	403094 <__aeabi_dmul>
  401fca:	a33b      	add	r3, pc, #236	; (adr r3, 4020b8 <__kernel_cos+0x218>)
  401fcc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401fd0:	f000 feae 	bl	402d30 <__adddf3>
  401fd4:	4642      	mov	r2, r8
  401fd6:	464b      	mov	r3, r9
  401fd8:	f001 f85c 	bl	403094 <__aeabi_dmul>
  401fdc:	a338      	add	r3, pc, #224	; (adr r3, 4020c0 <__kernel_cos+0x220>)
  401fde:	e9d3 2300 	ldrd	r2, r3, [r3]
  401fe2:	f000 fea3 	bl	402d2c <__aeabi_dsub>
  401fe6:	4642      	mov	r2, r8
  401fe8:	464b      	mov	r3, r9
  401fea:	f001 f853 	bl	403094 <__aeabi_dmul>
  401fee:	a336      	add	r3, pc, #216	; (adr r3, 4020c8 <__kernel_cos+0x228>)
  401ff0:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ff4:	f000 fe9c 	bl	402d30 <__adddf3>
  401ff8:	464b      	mov	r3, r9
  401ffa:	4642      	mov	r2, r8
  401ffc:	f001 f84a 	bl	403094 <__aeabi_dmul>
  402000:	4b35      	ldr	r3, [pc, #212]	; (4020d8 <__kernel_cos+0x238>)
  402002:	429e      	cmp	r6, r3
  402004:	e9cd 0100 	strd	r0, r1, [sp]
  402008:	dd97      	ble.n	401f3a <__kernel_cos+0x9a>
  40200a:	4b34      	ldr	r3, [pc, #208]	; (4020dc <__kernel_cos+0x23c>)
  40200c:	429e      	cmp	r6, r3
  40200e:	f04f 0200 	mov.w	r2, #0
  402012:	dc38      	bgt.n	402086 <__kernel_cos+0x1e6>
  402014:	f5a6 1300 	sub.w	r3, r6, #2097152	; 0x200000
  402018:	2000      	movs	r0, #0
  40201a:	492e      	ldr	r1, [pc, #184]	; (4020d4 <__kernel_cos+0x234>)
  40201c:	4616      	mov	r6, r2
  40201e:	461f      	mov	r7, r3
  402020:	f000 fe84 	bl	402d2c <__aeabi_dsub>
  402024:	e9cd 0102 	strd	r0, r1, [sp, #8]
  402028:	2200      	movs	r2, #0
  40202a:	4b29      	ldr	r3, [pc, #164]	; (4020d0 <__kernel_cos+0x230>)
  40202c:	4640      	mov	r0, r8
  40202e:	4649      	mov	r1, r9
  402030:	f001 f830 	bl	403094 <__aeabi_dmul>
  402034:	4632      	mov	r2, r6
  402036:	463b      	mov	r3, r7
  402038:	f000 fe78 	bl	402d2c <__aeabi_dsub>
  40203c:	e9dd 2300 	ldrd	r2, r3, [sp]
  402040:	4606      	mov	r6, r0
  402042:	460f      	mov	r7, r1
  402044:	4640      	mov	r0, r8
  402046:	4649      	mov	r1, r9
  402048:	f001 f824 	bl	403094 <__aeabi_dmul>
  40204c:	4652      	mov	r2, sl
  40204e:	4680      	mov	r8, r0
  402050:	4689      	mov	r9, r1
  402052:	465b      	mov	r3, fp
  402054:	4628      	mov	r0, r5
  402056:	4621      	mov	r1, r4
  402058:	f001 f81c 	bl	403094 <__aeabi_dmul>
  40205c:	4602      	mov	r2, r0
  40205e:	460b      	mov	r3, r1
  402060:	4640      	mov	r0, r8
  402062:	4649      	mov	r1, r9
  402064:	f000 fe62 	bl	402d2c <__aeabi_dsub>
  402068:	4602      	mov	r2, r0
  40206a:	460b      	mov	r3, r1
  40206c:	4630      	mov	r0, r6
  40206e:	4639      	mov	r1, r7
  402070:	f000 fe5c 	bl	402d2c <__aeabi_dsub>
  402074:	4602      	mov	r2, r0
  402076:	460b      	mov	r3, r1
  402078:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40207c:	f000 fe56 	bl	402d2c <__aeabi_dsub>
  402080:	b005      	add	sp, #20
  402082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402086:	4b16      	ldr	r3, [pc, #88]	; (4020e0 <__kernel_cos+0x240>)
  402088:	4f16      	ldr	r7, [pc, #88]	; (4020e4 <__kernel_cos+0x244>)
  40208a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  40208e:	2600      	movs	r6, #0
  402090:	e7ca      	b.n	402028 <__kernel_cos+0x188>
  402092:	4910      	ldr	r1, [pc, #64]	; (4020d4 <__kernel_cos+0x234>)
  402094:	2000      	movs	r0, #0
  402096:	b005      	add	sp, #20
  402098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40209c:	f3af 8000 	nop.w
  4020a0:	be8838d4 	.word	0xbe8838d4
  4020a4:	bda8fae9 	.word	0xbda8fae9
  4020a8:	bdb4b1c4 	.word	0xbdb4b1c4
  4020ac:	3e21ee9e 	.word	0x3e21ee9e
  4020b0:	809c52ad 	.word	0x809c52ad
  4020b4:	3e927e4f 	.word	0x3e927e4f
  4020b8:	19cb1590 	.word	0x19cb1590
  4020bc:	3efa01a0 	.word	0x3efa01a0
  4020c0:	16c15177 	.word	0x16c15177
  4020c4:	3f56c16c 	.word	0x3f56c16c
  4020c8:	5555554c 	.word	0x5555554c
  4020cc:	3fa55555 	.word	0x3fa55555
  4020d0:	3fe00000 	.word	0x3fe00000
  4020d4:	3ff00000 	.word	0x3ff00000
  4020d8:	3fd33332 	.word	0x3fd33332
  4020dc:	3fe90000 	.word	0x3fe90000
  4020e0:	3fe70000 	.word	0x3fe70000
  4020e4:	3fd20000 	.word	0x3fd20000

004020e8 <__kernel_rem_pio2>:
  4020e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4020ec:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
  4020f0:	4c9c      	ldr	r4, [pc, #624]	; (402364 <__kernel_rem_pio2+0x27c>)
  4020f2:	9ea2      	ldr	r6, [sp, #648]	; 0x288
  4020f4:	4d9c      	ldr	r5, [pc, #624]	; (402368 <__kernel_rem_pio2+0x280>)
  4020f6:	f854 4026 	ldr.w	r4, [r4, r6, lsl #2]
  4020fa:	9405      	str	r4, [sp, #20]
  4020fc:	4626      	mov	r6, r4
  4020fe:	1ed4      	subs	r4, r2, #3
  402100:	fb85 7504 	smull	r7, r5, r5, r4
  402104:	17e4      	asrs	r4, r4, #31
  402106:	ebc4 04a5 	rsb	r4, r4, r5, asr #2
  40210a:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
  40210e:	461d      	mov	r5, r3
  402110:	9308      	str	r3, [sp, #32]
  402112:	1c63      	adds	r3, r4, #1
  402114:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
  402118:	3d01      	subs	r5, #1
  40211a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  40211e:	9304      	str	r3, [sp, #16]
  402120:	462b      	mov	r3, r5
  402122:	9409      	str	r4, [sp, #36]	; 0x24
  402124:	9502      	str	r5, [sp, #8]
  402126:	1b65      	subs	r5, r4, r5
  402128:	18f4      	adds	r4, r6, r3
  40212a:	9003      	str	r0, [sp, #12]
  40212c:	9106      	str	r1, [sp, #24]
  40212e:	d41a      	bmi.n	402166 <__kernel_rem_pio2+0x7e>
  402130:	442c      	add	r4, r5
  402132:	3401      	adds	r4, #1
  402134:	f10d 0878 	add.w	r8, sp, #120	; 0x78
  402138:	2600      	movs	r6, #0
  40213a:	2700      	movs	r7, #0
  40213c:	f8dd 928c 	ldr.w	r9, [sp, #652]	; 0x28c
  402140:	e008      	b.n	402154 <__kernel_rem_pio2+0x6c>
  402142:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
  402146:	f000 ff3f 	bl	402fc8 <__aeabi_i2d>
  40214a:	3501      	adds	r5, #1
  40214c:	42a5      	cmp	r5, r4
  40214e:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  402152:	d008      	beq.n	402166 <__kernel_rem_pio2+0x7e>
  402154:	2d00      	cmp	r5, #0
  402156:	daf4      	bge.n	402142 <__kernel_rem_pio2+0x5a>
  402158:	3501      	adds	r5, #1
  40215a:	4630      	mov	r0, r6
  40215c:	4639      	mov	r1, r7
  40215e:	42a5      	cmp	r5, r4
  402160:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  402164:	d1f6      	bne.n	402154 <__kernel_rem_pio2+0x6c>
  402166:	9b05      	ldr	r3, [sp, #20]
  402168:	2b00      	cmp	r3, #0
  40216a:	db2e      	blt.n	4021ca <__kernel_rem_pio2+0xe2>
  40216c:	9b08      	ldr	r3, [sp, #32]
  40216e:	ea4f 09c3 	mov.w	r9, r3, lsl #3
  402172:	9b03      	ldr	r3, [sp, #12]
  402174:	f1a9 0808 	sub.w	r8, r9, #8
  402178:	4498      	add	r8, r3
  40217a:	ab20      	add	r3, sp, #128	; 0x80
  40217c:	4499      	add	r9, r3
  40217e:	9b05      	ldr	r3, [sp, #20]
  402180:	aa70      	add	r2, sp, #448	; 0x1c0
  402182:	eb02 0bc3 	add.w	fp, r2, r3, lsl #3
  402186:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  40218a:	9b02      	ldr	r3, [sp, #8]
  40218c:	2b00      	cmp	r3, #0
  40218e:	f2c0 830f 	blt.w	4027b0 <__kernel_rem_pio2+0x6c8>
  402192:	9b03      	ldr	r3, [sp, #12]
  402194:	464d      	mov	r5, r9
  402196:	f1a3 0408 	sub.w	r4, r3, #8
  40219a:	2600      	movs	r6, #0
  40219c:	2700      	movs	r7, #0
  40219e:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  4021a2:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  4021a6:	f000 ff75 	bl	403094 <__aeabi_dmul>
  4021aa:	4602      	mov	r2, r0
  4021ac:	460b      	mov	r3, r1
  4021ae:	4630      	mov	r0, r6
  4021b0:	4639      	mov	r1, r7
  4021b2:	f000 fdbd 	bl	402d30 <__adddf3>
  4021b6:	4544      	cmp	r4, r8
  4021b8:	4606      	mov	r6, r0
  4021ba:	460f      	mov	r7, r1
  4021bc:	d1ef      	bne.n	40219e <__kernel_rem_pio2+0xb6>
  4021be:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  4021c2:	45da      	cmp	sl, fp
  4021c4:	f109 0908 	add.w	r9, r9, #8
  4021c8:	d1df      	bne.n	40218a <__kernel_rem_pio2+0xa2>
  4021ca:	9805      	ldr	r0, [sp, #20]
  4021cc:	9a08      	ldr	r2, [sp, #32]
  4021ce:	9000      	str	r0, [sp, #0]
  4021d0:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  4021d4:	3b01      	subs	r3, #1
  4021d6:	009b      	lsls	r3, r3, #2
  4021d8:	ac0c      	add	r4, sp, #48	; 0x30
  4021da:	1f19      	subs	r1, r3, #4
  4021dc:	4423      	add	r3, r4
  4021de:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
  4021e2:	930b      	str	r3, [sp, #44]	; 0x2c
  4021e4:	9b03      	ldr	r3, [sp, #12]
  4021e6:	3a01      	subs	r2, #1
  4021e8:	4421      	add	r1, r4
  4021ea:	910a      	str	r1, [sp, #40]	; 0x28
  4021ec:	eb03 0bc2 	add.w	fp, r3, r2, lsl #3
  4021f0:	9a00      	ldr	r2, [sp, #0]
  4021f2:	a998      	add	r1, sp, #608	; 0x260
  4021f4:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  4021f8:	2a00      	cmp	r2, #0
  4021fa:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
  4021fe:	4613      	mov	r3, r2
  402200:	dd2b      	ble.n	40225a <__kernel_rem_pio2+0x172>
  402202:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  402206:	f1a8 08a8 	sub.w	r8, r8, #168	; 0xa8
  40220a:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  40220e:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  402212:	2200      	movs	r2, #0
  402214:	4b55      	ldr	r3, [pc, #340]	; (40236c <__kernel_rem_pio2+0x284>)
  402216:	4620      	mov	r0, r4
  402218:	4629      	mov	r1, r5
  40221a:	f000 ff3b 	bl	403094 <__aeabi_dmul>
  40221e:	f001 f9e9 	bl	4035f4 <__aeabi_d2iz>
  402222:	f000 fed1 	bl	402fc8 <__aeabi_i2d>
  402226:	2200      	movs	r2, #0
  402228:	4b51      	ldr	r3, [pc, #324]	; (402370 <__kernel_rem_pio2+0x288>)
  40222a:	4606      	mov	r6, r0
  40222c:	460f      	mov	r7, r1
  40222e:	f000 ff31 	bl	403094 <__aeabi_dmul>
  402232:	4602      	mov	r2, r0
  402234:	460b      	mov	r3, r1
  402236:	4620      	mov	r0, r4
  402238:	4629      	mov	r1, r5
  40223a:	f000 fd77 	bl	402d2c <__aeabi_dsub>
  40223e:	f001 f9d9 	bl	4035f4 <__aeabi_d2iz>
  402242:	e878 2302 	ldrd	r2, r3, [r8], #-8
  402246:	f849 0f04 	str.w	r0, [r9, #4]!
  40224a:	4639      	mov	r1, r7
  40224c:	4630      	mov	r0, r6
  40224e:	f000 fd6f 	bl	402d30 <__adddf3>
  402252:	45d0      	cmp	r8, sl
  402254:	4604      	mov	r4, r0
  402256:	460d      	mov	r5, r1
  402258:	d1db      	bne.n	402212 <__kernel_rem_pio2+0x12a>
  40225a:	f8dd 9010 	ldr.w	r9, [sp, #16]
  40225e:	4620      	mov	r0, r4
  402260:	4629      	mov	r1, r5
  402262:	464a      	mov	r2, r9
  402264:	f000 fcd8 	bl	402c18 <scalbn>
  402268:	2200      	movs	r2, #0
  40226a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
  40226e:	4604      	mov	r4, r0
  402270:	460d      	mov	r5, r1
  402272:	f000 ff0f 	bl	403094 <__aeabi_dmul>
  402276:	f000 fc3b 	bl	402af0 <floor>
  40227a:	2200      	movs	r2, #0
  40227c:	4b3d      	ldr	r3, [pc, #244]	; (402374 <__kernel_rem_pio2+0x28c>)
  40227e:	f000 ff09 	bl	403094 <__aeabi_dmul>
  402282:	4602      	mov	r2, r0
  402284:	460b      	mov	r3, r1
  402286:	4620      	mov	r0, r4
  402288:	4629      	mov	r1, r5
  40228a:	f000 fd4f 	bl	402d2c <__aeabi_dsub>
  40228e:	460d      	mov	r5, r1
  402290:	4604      	mov	r4, r0
  402292:	f001 f9af 	bl	4035f4 <__aeabi_d2iz>
  402296:	4680      	mov	r8, r0
  402298:	f000 fe96 	bl	402fc8 <__aeabi_i2d>
  40229c:	460b      	mov	r3, r1
  40229e:	4602      	mov	r2, r0
  4022a0:	4629      	mov	r1, r5
  4022a2:	4620      	mov	r0, r4
  4022a4:	f000 fd42 	bl	402d2c <__aeabi_dsub>
  4022a8:	464b      	mov	r3, r9
  4022aa:	2b00      	cmp	r3, #0
  4022ac:	4606      	mov	r6, r0
  4022ae:	460f      	mov	r7, r1
  4022b0:	f340 80f7 	ble.w	4024a2 <__kernel_rem_pio2+0x3ba>
  4022b4:	9a00      	ldr	r2, [sp, #0]
  4022b6:	a90c      	add	r1, sp, #48	; 0x30
  4022b8:	3a01      	subs	r2, #1
  4022ba:	f1c9 0318 	rsb	r3, r9, #24
  4022be:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
  4022c2:	fa45 f103 	asr.w	r1, r5, r3
  4022c6:	fa01 f303 	lsl.w	r3, r1, r3
  4022ca:	a80c      	add	r0, sp, #48	; 0x30
  4022cc:	1aeb      	subs	r3, r5, r3
  4022ce:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  4022d2:	f1c9 0517 	rsb	r5, r9, #23
  4022d6:	4488      	add	r8, r1
  4022d8:	fa43 f505 	asr.w	r5, r3, r5
  4022dc:	2d00      	cmp	r5, #0
  4022de:	dd63      	ble.n	4023a8 <__kernel_rem_pio2+0x2c0>
  4022e0:	9b00      	ldr	r3, [sp, #0]
  4022e2:	2b00      	cmp	r3, #0
  4022e4:	f108 0801 	add.w	r8, r8, #1
  4022e8:	f340 8281 	ble.w	4027ee <__kernel_rem_pio2+0x706>
  4022ec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4022ee:	2c00      	cmp	r4, #0
  4022f0:	f000 8318 	beq.w	402924 <__kernel_rem_pio2+0x83c>
  4022f4:	2001      	movs	r0, #1
  4022f6:	2300      	movs	r3, #0
  4022f8:	aa0c      	add	r2, sp, #48	; 0x30
  4022fa:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
  4022fe:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
  402302:	9a00      	ldr	r2, [sp, #0]
  402304:	4282      	cmp	r2, r0
  402306:	dd19      	ble.n	40233c <__kernel_rem_pio2+0x254>
  402308:	aa0c      	add	r2, sp, #48	; 0x30
  40230a:	ac0c      	add	r4, sp, #48	; 0x30
  40230c:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
  402310:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
  402314:	1a51      	subs	r1, r2, r1
  402316:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
  40231a:	9900      	ldr	r1, [sp, #0]
  40231c:	3302      	adds	r3, #2
  40231e:	4299      	cmp	r1, r3
  402320:	dd0c      	ble.n	40233c <__kernel_rem_pio2+0x254>
  402322:	4610      	mov	r0, r2
  402324:	9a00      	ldr	r2, [sp, #0]
  402326:	a90c      	add	r1, sp, #48	; 0x30
  402328:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  40232c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
  402330:	681a      	ldr	r2, [r3, #0]
  402332:	1a82      	subs	r2, r0, r2
  402334:	f843 2b04 	str.w	r2, [r3], #4
  402338:	428b      	cmp	r3, r1
  40233a:	d1f9      	bne.n	402330 <__kernel_rem_pio2+0x248>
  40233c:	9b04      	ldr	r3, [sp, #16]
  40233e:	2b00      	cmp	r3, #0
  402340:	dd1a      	ble.n	402378 <__kernel_rem_pio2+0x290>
  402342:	9b04      	ldr	r3, [sp, #16]
  402344:	2b01      	cmp	r3, #1
  402346:	f04f 0401 	mov.w	r4, #1
  40234a:	f040 8258 	bne.w	4027fe <__kernel_rem_pio2+0x716>
  40234e:	9b00      	ldr	r3, [sp, #0]
  402350:	1e5a      	subs	r2, r3, #1
  402352:	ab0c      	add	r3, sp, #48	; 0x30
  402354:	a90c      	add	r1, sp, #48	; 0x30
  402356:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  40235a:	f3c3 0316 	ubfx	r3, r3, #0, #23
  40235e:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  402362:	e258      	b.n	402816 <__kernel_rem_pio2+0x72e>
  402364:	00403910 	.word	0x00403910
  402368:	2aaaaaab 	.word	0x2aaaaaab
  40236c:	3e700000 	.word	0x3e700000
  402370:	41700000 	.word	0x41700000
  402374:	40200000 	.word	0x40200000
  402378:	2d02      	cmp	r5, #2
  40237a:	d115      	bne.n	4023a8 <__kernel_rem_pio2+0x2c0>
  40237c:	4632      	mov	r2, r6
  40237e:	463b      	mov	r3, r7
  402380:	2000      	movs	r0, #0
  402382:	4997      	ldr	r1, [pc, #604]	; (4025e0 <__kernel_rem_pio2+0x4f8>)
  402384:	f000 fcd2 	bl	402d2c <__aeabi_dsub>
  402388:	4606      	mov	r6, r0
  40238a:	460f      	mov	r7, r1
  40238c:	9a04      	ldr	r2, [sp, #16]
  40238e:	4994      	ldr	r1, [pc, #592]	; (4025e0 <__kernel_rem_pio2+0x4f8>)
  402390:	2000      	movs	r0, #0
  402392:	f000 fc41 	bl	402c18 <scalbn>
  402396:	4602      	mov	r2, r0
  402398:	460b      	mov	r3, r1
  40239a:	4630      	mov	r0, r6
  40239c:	4639      	mov	r1, r7
  40239e:	f000 fcc5 	bl	402d2c <__aeabi_dsub>
  4023a2:	2502      	movs	r5, #2
  4023a4:	4606      	mov	r6, r0
  4023a6:	460f      	mov	r7, r1
  4023a8:	2200      	movs	r2, #0
  4023aa:	2300      	movs	r3, #0
  4023ac:	4630      	mov	r0, r6
  4023ae:	4639      	mov	r1, r7
  4023b0:	f001 f8d8 	bl	403564 <__aeabi_dcmpeq>
  4023b4:	2800      	cmp	r0, #0
  4023b6:	f000 8252 	beq.w	40285e <__kernel_rem_pio2+0x776>
  4023ba:	9a00      	ldr	r2, [sp, #0]
  4023bc:	9b05      	ldr	r3, [sp, #20]
  4023be:	1e50      	subs	r0, r2, #1
  4023c0:	4283      	cmp	r3, r0
  4023c2:	dc0f      	bgt.n	4023e4 <__kernel_rem_pio2+0x2fc>
  4023c4:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
  4023c8:	3b01      	subs	r3, #1
  4023ca:	aa0c      	add	r2, sp, #48	; 0x30
  4023cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4023ce:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4023d2:	2200      	movs	r2, #0
  4023d4:	f853 1904 	ldr.w	r1, [r3], #-4
  4023d8:	42a3      	cmp	r3, r4
  4023da:	ea42 0201 	orr.w	r2, r2, r1
  4023de:	d1f9      	bne.n	4023d4 <__kernel_rem_pio2+0x2ec>
  4023e0:	2a00      	cmp	r2, #0
  4023e2:	d16f      	bne.n	4024c4 <__kernel_rem_pio2+0x3dc>
  4023e4:	9b05      	ldr	r3, [sp, #20]
  4023e6:	aa0c      	add	r2, sp, #48	; 0x30
  4023e8:	3b01      	subs	r3, #1
  4023ea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4023ee:	2b00      	cmp	r3, #0
  4023f0:	f040 8233 	bne.w	40285a <__kernel_rem_pio2+0x772>
  4023f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4023f6:	2301      	movs	r3, #1
  4023f8:	f852 1904 	ldr.w	r1, [r2], #-4
  4023fc:	3301      	adds	r3, #1
  4023fe:	2900      	cmp	r1, #0
  402400:	d0fa      	beq.n	4023f8 <__kernel_rem_pio2+0x310>
  402402:	9a00      	ldr	r2, [sp, #0]
  402404:	18d3      	adds	r3, r2, r3
  402406:	f102 0a01 	add.w	sl, r2, #1
  40240a:	459a      	cmp	sl, r3
  40240c:	9307      	str	r3, [sp, #28]
  40240e:	dc3d      	bgt.n	40248c <__kernel_rem_pio2+0x3a4>
  402410:	9b00      	ldr	r3, [sp, #0]
  402412:	9908      	ldr	r1, [sp, #32]
  402414:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402416:	440b      	add	r3, r1
  402418:	9907      	ldr	r1, [sp, #28]
  40241a:	eb0a 0802 	add.w	r8, sl, r2
  40241e:	4699      	mov	r9, r3
  402420:	ab20      	add	r3, sp, #128	; 0x80
  402422:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
  402426:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
  40242a:	188b      	adds	r3, r1, r2
  40242c:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  40242e:	f108 38ff 	add.w	r8, r8, #4294967295
  402432:	eb02 0888 	add.w	r8, r2, r8, lsl #2
  402436:	aa70      	add	r2, sp, #448	; 0x1c0
  402438:	eb02 0aca 	add.w	sl, r2, sl, lsl #3
  40243c:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  40243e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  402442:	9300      	str	r3, [sp, #0]
  402444:	f858 0f04 	ldr.w	r0, [r8, #4]!
  402448:	f000 fdbe 	bl	402fc8 <__aeabi_i2d>
  40244c:	9b02      	ldr	r3, [sp, #8]
  40244e:	2b00      	cmp	r3, #0
  402450:	e8e9 0102 	strd	r0, r1, [r9], #8
  402454:	db1d      	blt.n	402492 <__kernel_rem_pio2+0x3aa>
  402456:	9b03      	ldr	r3, [sp, #12]
  402458:	464d      	mov	r5, r9
  40245a:	f1a3 0408 	sub.w	r4, r3, #8
  40245e:	2600      	movs	r6, #0
  402460:	2700      	movs	r7, #0
  402462:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  402466:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  40246a:	f000 fe13 	bl	403094 <__aeabi_dmul>
  40246e:	4602      	mov	r2, r0
  402470:	460b      	mov	r3, r1
  402472:	4630      	mov	r0, r6
  402474:	4639      	mov	r1, r7
  402476:	f000 fc5b 	bl	402d30 <__adddf3>
  40247a:	455c      	cmp	r4, fp
  40247c:	4606      	mov	r6, r0
  40247e:	460f      	mov	r7, r1
  402480:	d1ef      	bne.n	402462 <__kernel_rem_pio2+0x37a>
  402482:	9b00      	ldr	r3, [sp, #0]
  402484:	4598      	cmp	r8, r3
  402486:	e8ea 6702 	strd	r6, r7, [sl], #8
  40248a:	d1db      	bne.n	402444 <__kernel_rem_pio2+0x35c>
  40248c:	9b07      	ldr	r3, [sp, #28]
  40248e:	9300      	str	r3, [sp, #0]
  402490:	e6ae      	b.n	4021f0 <__kernel_rem_pio2+0x108>
  402492:	9b00      	ldr	r3, [sp, #0]
  402494:	2600      	movs	r6, #0
  402496:	2700      	movs	r7, #0
  402498:	4598      	cmp	r8, r3
  40249a:	e8ea 6702 	strd	r6, r7, [sl], #8
  40249e:	d1d1      	bne.n	402444 <__kernel_rem_pio2+0x35c>
  4024a0:	e7f4      	b.n	40248c <__kernel_rem_pio2+0x3a4>
  4024a2:	d106      	bne.n	4024b2 <__kernel_rem_pio2+0x3ca>
  4024a4:	9b00      	ldr	r3, [sp, #0]
  4024a6:	aa0c      	add	r2, sp, #48	; 0x30
  4024a8:	3b01      	subs	r3, #1
  4024aa:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  4024ae:	15ed      	asrs	r5, r5, #23
  4024b0:	e714      	b.n	4022dc <__kernel_rem_pio2+0x1f4>
  4024b2:	2200      	movs	r2, #0
  4024b4:	4b4b      	ldr	r3, [pc, #300]	; (4025e4 <__kernel_rem_pio2+0x4fc>)
  4024b6:	f001 f873 	bl	4035a0 <__aeabi_dcmpge>
  4024ba:	2800      	cmp	r0, #0
  4024bc:	f040 8182 	bne.w	4027c4 <__kernel_rem_pio2+0x6dc>
  4024c0:	4605      	mov	r5, r0
  4024c2:	e771      	b.n	4023a8 <__kernel_rem_pio2+0x2c0>
  4024c4:	a90c      	add	r1, sp, #48	; 0x30
  4024c6:	9502      	str	r5, [sp, #8]
  4024c8:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
  4024cc:	9904      	ldr	r1, [sp, #16]
  4024ce:	f8cd 801c 	str.w	r8, [sp, #28]
  4024d2:	3918      	subs	r1, #24
  4024d4:	4602      	mov	r2, r0
  4024d6:	9000      	str	r0, [sp, #0]
  4024d8:	9104      	str	r1, [sp, #16]
  4024da:	b96b      	cbnz	r3, 4024f8 <__kernel_rem_pio2+0x410>
  4024dc:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  4024e0:	3b01      	subs	r3, #1
  4024e2:	a80c      	add	r0, sp, #48	; 0x30
  4024e4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
  4024e8:	f853 0904 	ldr.w	r0, [r3], #-4
  4024ec:	3a01      	subs	r2, #1
  4024ee:	3918      	subs	r1, #24
  4024f0:	2800      	cmp	r0, #0
  4024f2:	d0f9      	beq.n	4024e8 <__kernel_rem_pio2+0x400>
  4024f4:	9200      	str	r2, [sp, #0]
  4024f6:	9104      	str	r1, [sp, #16]
  4024f8:	9a04      	ldr	r2, [sp, #16]
  4024fa:	4939      	ldr	r1, [pc, #228]	; (4025e0 <__kernel_rem_pio2+0x4f8>)
  4024fc:	2000      	movs	r0, #0
  4024fe:	f000 fb8b 	bl	402c18 <scalbn>
  402502:	9b00      	ldr	r3, [sp, #0]
  402504:	2b00      	cmp	r3, #0
  402506:	4604      	mov	r4, r0
  402508:	460d      	mov	r5, r1
  40250a:	f2c0 8203 	blt.w	402914 <__kernel_rem_pio2+0x82c>
  40250e:	00da      	lsls	r2, r3, #3
  402510:	a970      	add	r1, sp, #448	; 0x1c0
  402512:	eb01 0b02 	add.w	fp, r1, r2
  402516:	9204      	str	r2, [sp, #16]
  402518:	aa0c      	add	r2, sp, #48	; 0x30
  40251a:	eb02 0683 	add.w	r6, r2, r3, lsl #2
  40251e:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 4025e8 <__kernel_rem_pio2+0x500>
  402522:	f10b 0708 	add.w	r7, fp, #8
  402526:	3604      	adds	r6, #4
  402528:	f04f 0800 	mov.w	r8, #0
  40252c:	f856 0d04 	ldr.w	r0, [r6, #-4]!
  402530:	f000 fd4a 	bl	402fc8 <__aeabi_i2d>
  402534:	4622      	mov	r2, r4
  402536:	462b      	mov	r3, r5
  402538:	f000 fdac 	bl	403094 <__aeabi_dmul>
  40253c:	464b      	mov	r3, r9
  40253e:	e967 0102 	strd	r0, r1, [r7, #-8]!
  402542:	4642      	mov	r2, r8
  402544:	4620      	mov	r0, r4
  402546:	4629      	mov	r1, r5
  402548:	f000 fda4 	bl	403094 <__aeabi_dmul>
  40254c:	ab0c      	add	r3, sp, #48	; 0x30
  40254e:	429e      	cmp	r6, r3
  402550:	4604      	mov	r4, r0
  402552:	460d      	mov	r5, r1
  402554:	d1ea      	bne.n	40252c <__kernel_rem_pio2+0x444>
  402556:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  40255a:	f8cd a00c 	str.w	sl, [sp, #12]
  40255e:	f8dd a014 	ldr.w	sl, [sp, #20]
  402562:	f04f 0900 	mov.w	r9, #0
  402566:	f1ba 0f00 	cmp.w	sl, #0
  40256a:	f2c0 813d 	blt.w	4027e8 <__kernel_rem_pio2+0x700>
  40256e:	f8df 807c 	ldr.w	r8, [pc, #124]	; 4025ec <__kernel_rem_pio2+0x504>
  402572:	465d      	mov	r5, fp
  402574:	a118      	add	r1, pc, #96	; (adr r1, 4025d8 <__kernel_rem_pio2+0x4f0>)
  402576:	e9d1 0100 	ldrd	r0, r1, [r1]
  40257a:	2600      	movs	r6, #0
  40257c:	2700      	movs	r7, #0
  40257e:	2400      	movs	r4, #0
  402580:	e003      	b.n	40258a <__kernel_rem_pio2+0x4a2>
  402582:	454c      	cmp	r4, r9
  402584:	dc10      	bgt.n	4025a8 <__kernel_rem_pio2+0x4c0>
  402586:	e8f8 0102 	ldrd	r0, r1, [r8], #8
  40258a:	e8f5 2302 	ldrd	r2, r3, [r5], #8
  40258e:	f000 fd81 	bl	403094 <__aeabi_dmul>
  402592:	4602      	mov	r2, r0
  402594:	460b      	mov	r3, r1
  402596:	4630      	mov	r0, r6
  402598:	4639      	mov	r1, r7
  40259a:	f000 fbc9 	bl	402d30 <__adddf3>
  40259e:	3401      	adds	r4, #1
  4025a0:	45a2      	cmp	sl, r4
  4025a2:	4606      	mov	r6, r0
  4025a4:	460f      	mov	r7, r1
  4025a6:	daec      	bge.n	402582 <__kernel_rem_pio2+0x49a>
  4025a8:	9b03      	ldr	r3, [sp, #12]
  4025aa:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  4025ae:	f1ab 0b08 	sub.w	fp, fp, #8
  4025b2:	e9c3 6700 	strd	r6, r7, [r3]
  4025b6:	ab6e      	add	r3, sp, #440	; 0x1b8
  4025b8:	455b      	cmp	r3, fp
  4025ba:	f109 0901 	add.w	r9, r9, #1
  4025be:	d1d2      	bne.n	402566 <__kernel_rem_pio2+0x47e>
  4025c0:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  4025c2:	f8dd a00c 	ldr.w	sl, [sp, #12]
  4025c6:	2b03      	cmp	r3, #3
  4025c8:	f200 808b 	bhi.w	4026e2 <__kernel_rem_pio2+0x5fa>
  4025cc:	e8df f013 	tbh	[pc, r3, lsl #1]
  4025d0:	009000d1 	.word	0x009000d1
  4025d4:	00100090 	.word	0x00100090
  4025d8:	40000000 	.word	0x40000000
  4025dc:	3ff921fb 	.word	0x3ff921fb
  4025e0:	3ff00000 	.word	0x3ff00000
  4025e4:	3fe00000 	.word	0x3fe00000
  4025e8:	3e700000 	.word	0x3e700000
  4025ec:	004038d8 	.word	0x004038d8
  4025f0:	9b00      	ldr	r3, [sp, #0]
  4025f2:	2b00      	cmp	r3, #0
  4025f4:	f340 81a4 	ble.w	402940 <__kernel_rem_pio2+0x858>
  4025f8:	9b04      	ldr	r3, [sp, #16]
  4025fa:	eb0a 0803 	add.w	r8, sl, r3
  4025fe:	e9d8 6700 	ldrd	r6, r7, [r8]
  402602:	46d3      	mov	fp, sl
  402604:	e958 9a02 	ldrd	r9, sl, [r8, #-8]
  402608:	4632      	mov	r2, r6
  40260a:	463b      	mov	r3, r7
  40260c:	4648      	mov	r0, r9
  40260e:	4651      	mov	r1, sl
  402610:	f000 fb8e 	bl	402d30 <__adddf3>
  402614:	4604      	mov	r4, r0
  402616:	460d      	mov	r5, r1
  402618:	4602      	mov	r2, r0
  40261a:	460b      	mov	r3, r1
  40261c:	4648      	mov	r0, r9
  40261e:	4651      	mov	r1, sl
  402620:	f000 fb84 	bl	402d2c <__aeabi_dsub>
  402624:	4632      	mov	r2, r6
  402626:	463b      	mov	r3, r7
  402628:	f000 fb82 	bl	402d30 <__adddf3>
  40262c:	e9c8 0100 	strd	r0, r1, [r8]
  402630:	e968 4502 	strd	r4, r5, [r8, #-8]!
  402634:	45c3      	cmp	fp, r8
  402636:	4626      	mov	r6, r4
  402638:	462f      	mov	r7, r5
  40263a:	d1e3      	bne.n	402604 <__kernel_rem_pio2+0x51c>
  40263c:	9b00      	ldr	r3, [sp, #0]
  40263e:	2b01      	cmp	r3, #1
  402640:	46da      	mov	sl, fp
  402642:	f340 817d 	ble.w	402940 <__kernel_rem_pio2+0x858>
  402646:	9b04      	ldr	r3, [sp, #16]
  402648:	445b      	add	r3, fp
  40264a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40264e:	4698      	mov	r8, r3
  402650:	4699      	mov	r9, r3
  402652:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
  402656:	e959 3402 	ldrd	r3, r4, [r9, #-8]
  40265a:	4632      	mov	r2, r6
  40265c:	4618      	mov	r0, r3
  40265e:	4621      	mov	r1, r4
  402660:	463b      	mov	r3, r7
  402662:	e9cd 0100 	strd	r0, r1, [sp]
  402666:	f000 fb63 	bl	402d30 <__adddf3>
  40266a:	4604      	mov	r4, r0
  40266c:	460d      	mov	r5, r1
  40266e:	4602      	mov	r2, r0
  402670:	460b      	mov	r3, r1
  402672:	e9dd 0100 	ldrd	r0, r1, [sp]
  402676:	f000 fb59 	bl	402d2c <__aeabi_dsub>
  40267a:	4632      	mov	r2, r6
  40267c:	463b      	mov	r3, r7
  40267e:	f000 fb57 	bl	402d30 <__adddf3>
  402682:	e9c9 0100 	strd	r0, r1, [r9]
  402686:	e969 4502 	strd	r4, r5, [r9, #-8]!
  40268a:	45cb      	cmp	fp, r9
  40268c:	4626      	mov	r6, r4
  40268e:	462f      	mov	r7, r5
  402690:	d1e1      	bne.n	402656 <__kernel_rem_pio2+0x56e>
  402692:	2300      	movs	r3, #0
  402694:	f108 0808 	add.w	r8, r8, #8
  402698:	461d      	mov	r5, r3
  40269a:	ac4c      	add	r4, sp, #304	; 0x130
  40269c:	4618      	mov	r0, r3
  40269e:	4629      	mov	r1, r5
  4026a0:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
  4026a4:	f000 fb44 	bl	402d30 <__adddf3>
  4026a8:	4544      	cmp	r4, r8
  4026aa:	4603      	mov	r3, r0
  4026ac:	460d      	mov	r5, r1
  4026ae:	d1f5      	bne.n	40269c <__kernel_rem_pio2+0x5b4>
  4026b0:	9a02      	ldr	r2, [sp, #8]
  4026b2:	2a00      	cmp	r2, #0
  4026b4:	f000 8120 	beq.w	4028f8 <__kernel_rem_pio2+0x810>
  4026b8:	f8da 4004 	ldr.w	r4, [sl, #4]
  4026bc:	f8da 200c 	ldr.w	r2, [sl, #12]
  4026c0:	9f06      	ldr	r7, [sp, #24]
  4026c2:	f8da 1000 	ldr.w	r1, [sl]
  4026c6:	f8da 0008 	ldr.w	r0, [sl, #8]
  4026ca:	613b      	str	r3, [r7, #16]
  4026cc:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
  4026d0:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
  4026d4:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  4026d8:	617d      	str	r5, [r7, #20]
  4026da:	607c      	str	r4, [r7, #4]
  4026dc:	60fa      	str	r2, [r7, #12]
  4026de:	6039      	str	r1, [r7, #0]
  4026e0:	60b8      	str	r0, [r7, #8]
  4026e2:	9b07      	ldr	r3, [sp, #28]
  4026e4:	f003 0007 	and.w	r0, r3, #7
  4026e8:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  4026ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026f0:	9c04      	ldr	r4, [sp, #16]
  4026f2:	2600      	movs	r6, #0
  4026f4:	3408      	adds	r4, #8
  4026f6:	4454      	add	r4, sl
  4026f8:	4633      	mov	r3, r6
  4026fa:	4630      	mov	r0, r6
  4026fc:	4619      	mov	r1, r3
  4026fe:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  402702:	f000 fb15 	bl	402d30 <__adddf3>
  402706:	4554      	cmp	r4, sl
  402708:	4606      	mov	r6, r0
  40270a:	460b      	mov	r3, r1
  40270c:	d1f5      	bne.n	4026fa <__kernel_rem_pio2+0x612>
  40270e:	9a02      	ldr	r2, [sp, #8]
  402710:	4630      	mov	r0, r6
  402712:	4619      	mov	r1, r3
  402714:	2a00      	cmp	r2, #0
  402716:	f000 80da 	beq.w	4028ce <__kernel_rem_pio2+0x7e6>
  40271a:	9806      	ldr	r0, [sp, #24]
  40271c:	f103 4400 	add.w	r4, r3, #2147483648	; 0x80000000
  402720:	4632      	mov	r2, r6
  402722:	6044      	str	r4, [r0, #4]
  402724:	6006      	str	r6, [r0, #0]
  402726:	e9da 0100 	ldrd	r0, r1, [sl]
  40272a:	f000 faff 	bl	402d2c <__aeabi_dsub>
  40272e:	460b      	mov	r3, r1
  402730:	9900      	ldr	r1, [sp, #0]
  402732:	2900      	cmp	r1, #0
  402734:	4602      	mov	r2, r0
  402736:	dd0e      	ble.n	402756 <__kernel_rem_pio2+0x66e>
  402738:	2401      	movs	r4, #1
  40273a:	4610      	mov	r0, r2
  40273c:	4619      	mov	r1, r3
  40273e:	e9fa 2302 	ldrd	r2, r3, [sl, #8]!
  402742:	f000 faf5 	bl	402d30 <__adddf3>
  402746:	460b      	mov	r3, r1
  402748:	9900      	ldr	r1, [sp, #0]
  40274a:	3401      	adds	r4, #1
  40274c:	42a1      	cmp	r1, r4
  40274e:	4602      	mov	r2, r0
  402750:	daf3      	bge.n	40273a <__kernel_rem_pio2+0x652>
  402752:	9902      	ldr	r1, [sp, #8]
  402754:	b109      	cbz	r1, 40275a <__kernel_rem_pio2+0x672>
  402756:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  40275a:	4619      	mov	r1, r3
  40275c:	9b06      	ldr	r3, [sp, #24]
  40275e:	4610      	mov	r0, r2
  402760:	e9c3 0102 	strd	r0, r1, [r3, #8]
  402764:	9b07      	ldr	r3, [sp, #28]
  402766:	f003 0007 	and.w	r0, r3, #7
  40276a:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  40276e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402772:	9c04      	ldr	r4, [sp, #16]
  402774:	2200      	movs	r2, #0
  402776:	3408      	adds	r4, #8
  402778:	4454      	add	r4, sl
  40277a:	4613      	mov	r3, r2
  40277c:	4610      	mov	r0, r2
  40277e:	4619      	mov	r1, r3
  402780:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  402784:	f000 fad4 	bl	402d30 <__adddf3>
  402788:	45a2      	cmp	sl, r4
  40278a:	4602      	mov	r2, r0
  40278c:	460b      	mov	r3, r1
  40278e:	d1f5      	bne.n	40277c <__kernel_rem_pio2+0x694>
  402790:	9902      	ldr	r1, [sp, #8]
  402792:	b109      	cbz	r1, 402798 <__kernel_rem_pio2+0x6b0>
  402794:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  402798:	4619      	mov	r1, r3
  40279a:	9b06      	ldr	r3, [sp, #24]
  40279c:	4610      	mov	r0, r2
  40279e:	e9c3 0100 	strd	r0, r1, [r3]
  4027a2:	9b07      	ldr	r3, [sp, #28]
  4027a4:	f003 0007 	and.w	r0, r3, #7
  4027a8:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  4027ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4027b0:	2600      	movs	r6, #0
  4027b2:	2700      	movs	r7, #0
  4027b4:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  4027b8:	45da      	cmp	sl, fp
  4027ba:	f109 0908 	add.w	r9, r9, #8
  4027be:	f47f ace4 	bne.w	40218a <__kernel_rem_pio2+0xa2>
  4027c2:	e502      	b.n	4021ca <__kernel_rem_pio2+0xe2>
  4027c4:	9b00      	ldr	r3, [sp, #0]
  4027c6:	2b00      	cmp	r3, #0
  4027c8:	f108 0801 	add.w	r8, r8, #1
  4027cc:	bfc8      	it	gt
  4027ce:	2502      	movgt	r5, #2
  4027d0:	f73f ad8c 	bgt.w	4022ec <__kernel_rem_pio2+0x204>
  4027d4:	4632      	mov	r2, r6
  4027d6:	463b      	mov	r3, r7
  4027d8:	2000      	movs	r0, #0
  4027da:	4963      	ldr	r1, [pc, #396]	; (402968 <__kernel_rem_pio2+0x880>)
  4027dc:	f000 faa6 	bl	402d2c <__aeabi_dsub>
  4027e0:	2502      	movs	r5, #2
  4027e2:	4606      	mov	r6, r0
  4027e4:	460f      	mov	r7, r1
  4027e6:	e5df      	b.n	4023a8 <__kernel_rem_pio2+0x2c0>
  4027e8:	2600      	movs	r6, #0
  4027ea:	2700      	movs	r7, #0
  4027ec:	e6dc      	b.n	4025a8 <__kernel_rem_pio2+0x4c0>
  4027ee:	9b04      	ldr	r3, [sp, #16]
  4027f0:	2b00      	cmp	r3, #0
  4027f2:	dd26      	ble.n	402842 <__kernel_rem_pio2+0x75a>
  4027f4:	2400      	movs	r4, #0
  4027f6:	9b04      	ldr	r3, [sp, #16]
  4027f8:	2b01      	cmp	r3, #1
  4027fa:	f43f ada8 	beq.w	40234e <__kernel_rem_pio2+0x266>
  4027fe:	2b02      	cmp	r3, #2
  402800:	d109      	bne.n	402816 <__kernel_rem_pio2+0x72e>
  402802:	9b00      	ldr	r3, [sp, #0]
  402804:	1e5a      	subs	r2, r3, #1
  402806:	ab0c      	add	r3, sp, #48	; 0x30
  402808:	a90c      	add	r1, sp, #48	; 0x30
  40280a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  40280e:	f3c3 0315 	ubfx	r3, r3, #0, #22
  402812:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  402816:	2d02      	cmp	r5, #2
  402818:	f47f adc6 	bne.w	4023a8 <__kernel_rem_pio2+0x2c0>
  40281c:	4632      	mov	r2, r6
  40281e:	463b      	mov	r3, r7
  402820:	2000      	movs	r0, #0
  402822:	4951      	ldr	r1, [pc, #324]	; (402968 <__kernel_rem_pio2+0x880>)
  402824:	f000 fa82 	bl	402d2c <__aeabi_dsub>
  402828:	4606      	mov	r6, r0
  40282a:	460f      	mov	r7, r1
  40282c:	2c00      	cmp	r4, #0
  40282e:	f43f adbb 	beq.w	4023a8 <__kernel_rem_pio2+0x2c0>
  402832:	e5ab      	b.n	40238c <__kernel_rem_pio2+0x2a4>
  402834:	9900      	ldr	r1, [sp, #0]
  402836:	3301      	adds	r3, #1
  402838:	4299      	cmp	r1, r3
  40283a:	d178      	bne.n	40292e <__kernel_rem_pio2+0x846>
  40283c:	9b04      	ldr	r3, [sp, #16]
  40283e:	2b00      	cmp	r3, #0
  402840:	dcd9      	bgt.n	4027f6 <__kernel_rem_pio2+0x70e>
  402842:	2d02      	cmp	r5, #2
  402844:	f47f adb0 	bne.w	4023a8 <__kernel_rem_pio2+0x2c0>
  402848:	4632      	mov	r2, r6
  40284a:	463b      	mov	r3, r7
  40284c:	2000      	movs	r0, #0
  40284e:	4946      	ldr	r1, [pc, #280]	; (402968 <__kernel_rem_pio2+0x880>)
  402850:	f000 fa6c 	bl	402d2c <__aeabi_dsub>
  402854:	4606      	mov	r6, r0
  402856:	460f      	mov	r7, r1
  402858:	e5a6      	b.n	4023a8 <__kernel_rem_pio2+0x2c0>
  40285a:	2301      	movs	r3, #1
  40285c:	e5d1      	b.n	402402 <__kernel_rem_pio2+0x31a>
  40285e:	4639      	mov	r1, r7
  402860:	9f04      	ldr	r7, [sp, #16]
  402862:	9502      	str	r5, [sp, #8]
  402864:	427a      	negs	r2, r7
  402866:	4630      	mov	r0, r6
  402868:	f8cd 801c 	str.w	r8, [sp, #28]
  40286c:	f000 f9d4 	bl	402c18 <scalbn>
  402870:	2200      	movs	r2, #0
  402872:	4b3e      	ldr	r3, [pc, #248]	; (40296c <__kernel_rem_pio2+0x884>)
  402874:	4604      	mov	r4, r0
  402876:	460d      	mov	r5, r1
  402878:	f000 fe92 	bl	4035a0 <__aeabi_dcmpge>
  40287c:	2800      	cmp	r0, #0
  40287e:	d062      	beq.n	402946 <__kernel_rem_pio2+0x85e>
  402880:	2200      	movs	r2, #0
  402882:	4b3b      	ldr	r3, [pc, #236]	; (402970 <__kernel_rem_pio2+0x888>)
  402884:	4620      	mov	r0, r4
  402886:	4629      	mov	r1, r5
  402888:	f000 fc04 	bl	403094 <__aeabi_dmul>
  40288c:	f000 feb2 	bl	4035f4 <__aeabi_d2iz>
  402890:	4606      	mov	r6, r0
  402892:	f000 fb99 	bl	402fc8 <__aeabi_i2d>
  402896:	2200      	movs	r2, #0
  402898:	4b34      	ldr	r3, [pc, #208]	; (40296c <__kernel_rem_pio2+0x884>)
  40289a:	f000 fbfb 	bl	403094 <__aeabi_dmul>
  40289e:	4602      	mov	r2, r0
  4028a0:	460b      	mov	r3, r1
  4028a2:	4620      	mov	r0, r4
  4028a4:	4629      	mov	r1, r5
  4028a6:	f000 fa41 	bl	402d2c <__aeabi_dsub>
  4028aa:	f000 fea3 	bl	4035f4 <__aeabi_d2iz>
  4028ae:	9900      	ldr	r1, [sp, #0]
  4028b0:	460b      	mov	r3, r1
  4028b2:	3301      	adds	r3, #1
  4028b4:	461a      	mov	r2, r3
  4028b6:	9300      	str	r3, [sp, #0]
  4028b8:	463b      	mov	r3, r7
  4028ba:	3318      	adds	r3, #24
  4028bc:	9304      	str	r3, [sp, #16]
  4028be:	460b      	mov	r3, r1
  4028c0:	a90c      	add	r1, sp, #48	; 0x30
  4028c2:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  4028c6:	4613      	mov	r3, r2
  4028c8:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
  4028cc:	e614      	b.n	4024f8 <__kernel_rem_pio2+0x410>
  4028ce:	9b06      	ldr	r3, [sp, #24]
  4028d0:	4632      	mov	r2, r6
  4028d2:	e9c3 0100 	strd	r0, r1, [r3]
  4028d6:	460b      	mov	r3, r1
  4028d8:	e9da 0100 	ldrd	r0, r1, [sl]
  4028dc:	f000 fa26 	bl	402d2c <__aeabi_dsub>
  4028e0:	460b      	mov	r3, r1
  4028e2:	9900      	ldr	r1, [sp, #0]
  4028e4:	2900      	cmp	r1, #0
  4028e6:	4602      	mov	r2, r0
  4028e8:	f73f af26 	bgt.w	402738 <__kernel_rem_pio2+0x650>
  4028ec:	4619      	mov	r1, r3
  4028ee:	9b06      	ldr	r3, [sp, #24]
  4028f0:	4610      	mov	r0, r2
  4028f2:	e9c3 0102 	strd	r0, r1, [r3, #8]
  4028f6:	e735      	b.n	402764 <__kernel_rem_pio2+0x67c>
  4028f8:	4618      	mov	r0, r3
  4028fa:	4629      	mov	r1, r5
  4028fc:	e9da 2300 	ldrd	r2, r3, [sl]
  402900:	e9da 4502 	ldrd	r4, r5, [sl, #8]
  402904:	9f06      	ldr	r7, [sp, #24]
  402906:	e9c7 0104 	strd	r0, r1, [r7, #16]
  40290a:	e9c7 2300 	strd	r2, r3, [r7]
  40290e:	e9c7 4502 	strd	r4, r5, [r7, #8]
  402912:	e6e6      	b.n	4026e2 <__kernel_rem_pio2+0x5fa>
  402914:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  402916:	2b03      	cmp	r3, #3
  402918:	f63f aee3 	bhi.w	4026e2 <__kernel_rem_pio2+0x5fa>
  40291c:	e8df f003 	tbb	[pc, r3]
  402920:	0e1c1c21 	.word	0x0e1c1c21
  402924:	9b00      	ldr	r3, [sp, #0]
  402926:	2b01      	cmp	r3, #1
  402928:	dd88      	ble.n	40283c <__kernel_rem_pio2+0x754>
  40292a:	aa0c      	add	r2, sp, #48	; 0x30
  40292c:	2301      	movs	r3, #1
  40292e:	f852 4f04 	ldr.w	r4, [r2, #4]!
  402932:	2c00      	cmp	r4, #0
  402934:	f43f af7e 	beq.w	402834 <__kernel_rem_pio2+0x74c>
  402938:	1c58      	adds	r0, r3, #1
  40293a:	e4dd      	b.n	4022f8 <__kernel_rem_pio2+0x210>
  40293c:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  402940:	2300      	movs	r3, #0
  402942:	461d      	mov	r5, r3
  402944:	e6b4      	b.n	4026b0 <__kernel_rem_pio2+0x5c8>
  402946:	4629      	mov	r1, r5
  402948:	4620      	mov	r0, r4
  40294a:	f000 fe53 	bl	4035f4 <__aeabi_d2iz>
  40294e:	9a00      	ldr	r2, [sp, #0]
  402950:	a90c      	add	r1, sp, #48	; 0x30
  402952:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
  402956:	e5cf      	b.n	4024f8 <__kernel_rem_pio2+0x410>
  402958:	2600      	movs	r6, #0
  40295a:	4633      	mov	r3, r6
  40295c:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  402960:	e6d5      	b.n	40270e <__kernel_rem_pio2+0x626>
  402962:	2200      	movs	r2, #0
  402964:	4613      	mov	r3, r2
  402966:	e713      	b.n	402790 <__kernel_rem_pio2+0x6a8>
  402968:	3ff00000 	.word	0x3ff00000
  40296c:	41700000 	.word	0x41700000
  402970:	3e700000 	.word	0x3e700000
  402974:	00000000 	.word	0x00000000

00402978 <__kernel_sin>:
  402978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40297c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  402980:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  402984:	b085      	sub	sp, #20
  402986:	460c      	mov	r4, r1
  402988:	4690      	mov	r8, r2
  40298a:	4699      	mov	r9, r3
  40298c:	4605      	mov	r5, r0
  40298e:	da04      	bge.n	40299a <__kernel_sin+0x22>
  402990:	f000 fe30 	bl	4035f4 <__aeabi_d2iz>
  402994:	2800      	cmp	r0, #0
  402996:	f000 8085 	beq.w	402aa4 <__kernel_sin+0x12c>
  40299a:	462a      	mov	r2, r5
  40299c:	4623      	mov	r3, r4
  40299e:	4628      	mov	r0, r5
  4029a0:	4621      	mov	r1, r4
  4029a2:	f000 fb77 	bl	403094 <__aeabi_dmul>
  4029a6:	4606      	mov	r6, r0
  4029a8:	460f      	mov	r7, r1
  4029aa:	4602      	mov	r2, r0
  4029ac:	460b      	mov	r3, r1
  4029ae:	4628      	mov	r0, r5
  4029b0:	4621      	mov	r1, r4
  4029b2:	f000 fb6f 	bl	403094 <__aeabi_dmul>
  4029b6:	a33e      	add	r3, pc, #248	; (adr r3, 402ab0 <__kernel_sin+0x138>)
  4029b8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4029bc:	4682      	mov	sl, r0
  4029be:	468b      	mov	fp, r1
  4029c0:	4630      	mov	r0, r6
  4029c2:	4639      	mov	r1, r7
  4029c4:	f000 fb66 	bl	403094 <__aeabi_dmul>
  4029c8:	a33b      	add	r3, pc, #236	; (adr r3, 402ab8 <__kernel_sin+0x140>)
  4029ca:	e9d3 2300 	ldrd	r2, r3, [r3]
  4029ce:	f000 f9ad 	bl	402d2c <__aeabi_dsub>
  4029d2:	4632      	mov	r2, r6
  4029d4:	463b      	mov	r3, r7
  4029d6:	f000 fb5d 	bl	403094 <__aeabi_dmul>
  4029da:	a339      	add	r3, pc, #228	; (adr r3, 402ac0 <__kernel_sin+0x148>)
  4029dc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4029e0:	f000 f9a6 	bl	402d30 <__adddf3>
  4029e4:	4632      	mov	r2, r6
  4029e6:	463b      	mov	r3, r7
  4029e8:	f000 fb54 	bl	403094 <__aeabi_dmul>
  4029ec:	a336      	add	r3, pc, #216	; (adr r3, 402ac8 <__kernel_sin+0x150>)
  4029ee:	e9d3 2300 	ldrd	r2, r3, [r3]
  4029f2:	f000 f99b 	bl	402d2c <__aeabi_dsub>
  4029f6:	4632      	mov	r2, r6
  4029f8:	463b      	mov	r3, r7
  4029fa:	f000 fb4b 	bl	403094 <__aeabi_dmul>
  4029fe:	a334      	add	r3, pc, #208	; (adr r3, 402ad0 <__kernel_sin+0x158>)
  402a00:	e9d3 2300 	ldrd	r2, r3, [r3]
  402a04:	f000 f994 	bl	402d30 <__adddf3>
  402a08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402a0a:	e9cd 0100 	strd	r0, r1, [sp]
  402a0e:	b39b      	cbz	r3, 402a78 <__kernel_sin+0x100>
  402a10:	2200      	movs	r2, #0
  402a12:	4b33      	ldr	r3, [pc, #204]	; (402ae0 <__kernel_sin+0x168>)
  402a14:	4640      	mov	r0, r8
  402a16:	4649      	mov	r1, r9
  402a18:	f000 fb3c 	bl	403094 <__aeabi_dmul>
  402a1c:	e9dd 2300 	ldrd	r2, r3, [sp]
  402a20:	e9cd 0102 	strd	r0, r1, [sp, #8]
  402a24:	4650      	mov	r0, sl
  402a26:	4659      	mov	r1, fp
  402a28:	f000 fb34 	bl	403094 <__aeabi_dmul>
  402a2c:	4602      	mov	r2, r0
  402a2e:	460b      	mov	r3, r1
  402a30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  402a34:	f000 f97a 	bl	402d2c <__aeabi_dsub>
  402a38:	4632      	mov	r2, r6
  402a3a:	463b      	mov	r3, r7
  402a3c:	f000 fb2a 	bl	403094 <__aeabi_dmul>
  402a40:	4642      	mov	r2, r8
  402a42:	464b      	mov	r3, r9
  402a44:	f000 f972 	bl	402d2c <__aeabi_dsub>
  402a48:	a323      	add	r3, pc, #140	; (adr r3, 402ad8 <__kernel_sin+0x160>)
  402a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
  402a4e:	4606      	mov	r6, r0
  402a50:	460f      	mov	r7, r1
  402a52:	4650      	mov	r0, sl
  402a54:	4659      	mov	r1, fp
  402a56:	f000 fb1d 	bl	403094 <__aeabi_dmul>
  402a5a:	4602      	mov	r2, r0
  402a5c:	460b      	mov	r3, r1
  402a5e:	4630      	mov	r0, r6
  402a60:	4639      	mov	r1, r7
  402a62:	f000 f965 	bl	402d30 <__adddf3>
  402a66:	4602      	mov	r2, r0
  402a68:	460b      	mov	r3, r1
  402a6a:	4628      	mov	r0, r5
  402a6c:	4621      	mov	r1, r4
  402a6e:	f000 f95d 	bl	402d2c <__aeabi_dsub>
  402a72:	b005      	add	sp, #20
  402a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a78:	4602      	mov	r2, r0
  402a7a:	460b      	mov	r3, r1
  402a7c:	4630      	mov	r0, r6
  402a7e:	4639      	mov	r1, r7
  402a80:	f000 fb08 	bl	403094 <__aeabi_dmul>
  402a84:	a314      	add	r3, pc, #80	; (adr r3, 402ad8 <__kernel_sin+0x160>)
  402a86:	e9d3 2300 	ldrd	r2, r3, [r3]
  402a8a:	f000 f94f 	bl	402d2c <__aeabi_dsub>
  402a8e:	4652      	mov	r2, sl
  402a90:	465b      	mov	r3, fp
  402a92:	f000 faff 	bl	403094 <__aeabi_dmul>
  402a96:	462a      	mov	r2, r5
  402a98:	4623      	mov	r3, r4
  402a9a:	f000 f949 	bl	402d30 <__adddf3>
  402a9e:	b005      	add	sp, #20
  402aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402aa4:	4628      	mov	r0, r5
  402aa6:	4621      	mov	r1, r4
  402aa8:	b005      	add	sp, #20
  402aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402aae:	bf00      	nop
  402ab0:	5acfd57c 	.word	0x5acfd57c
  402ab4:	3de5d93a 	.word	0x3de5d93a
  402ab8:	8a2b9ceb 	.word	0x8a2b9ceb
  402abc:	3e5ae5e6 	.word	0x3e5ae5e6
  402ac0:	57b1fe7d 	.word	0x57b1fe7d
  402ac4:	3ec71de3 	.word	0x3ec71de3
  402ac8:	19c161d5 	.word	0x19c161d5
  402acc:	3f2a01a0 	.word	0x3f2a01a0
  402ad0:	1110f8a6 	.word	0x1110f8a6
  402ad4:	3f811111 	.word	0x3f811111
  402ad8:	55555549 	.word	0x55555549
  402adc:	3fc55555 	.word	0x3fc55555
  402ae0:	3fe00000 	.word	0x3fe00000

00402ae4 <fabs>:
  402ae4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402ae8:	4770      	bx	lr
  402aea:	bf00      	nop
  402aec:	0000      	movs	r0, r0
	...

00402af0 <floor>:
  402af0:	f3c1 520a 	ubfx	r2, r1, #20, #11
  402af4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402af8:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
  402afc:	2e13      	cmp	r6, #19
  402afe:	460b      	mov	r3, r1
  402b00:	460d      	mov	r5, r1
  402b02:	4604      	mov	r4, r0
  402b04:	4688      	mov	r8, r1
  402b06:	4607      	mov	r7, r0
  402b08:	dc1d      	bgt.n	402b46 <floor+0x56>
  402b0a:	2e00      	cmp	r6, #0
  402b0c:	db40      	blt.n	402b90 <floor+0xa0>
  402b0e:	4a3c      	ldr	r2, [pc, #240]	; (402c00 <floor+0x110>)
  402b10:	fa42 f906 	asr.w	r9, r2, r6
  402b14:	ea01 0209 	and.w	r2, r1, r9
  402b18:	4302      	orrs	r2, r0
  402b1a:	4686      	mov	lr, r0
  402b1c:	d018      	beq.n	402b50 <floor+0x60>
  402b1e:	a336      	add	r3, pc, #216	; (adr r3, 402bf8 <floor+0x108>)
  402b20:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b24:	f000 f904 	bl	402d30 <__adddf3>
  402b28:	2200      	movs	r2, #0
  402b2a:	2300      	movs	r3, #0
  402b2c:	f000 fd42 	bl	4035b4 <__aeabi_dcmpgt>
  402b30:	b120      	cbz	r0, 402b3c <floor+0x4c>
  402b32:	2d00      	cmp	r5, #0
  402b34:	db42      	blt.n	402bbc <floor+0xcc>
  402b36:	ea28 0509 	bic.w	r5, r8, r9
  402b3a:	2700      	movs	r7, #0
  402b3c:	463c      	mov	r4, r7
  402b3e:	4629      	mov	r1, r5
  402b40:	4620      	mov	r0, r4
  402b42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402b46:	2e33      	cmp	r6, #51	; 0x33
  402b48:	dd06      	ble.n	402b58 <floor+0x68>
  402b4a:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  402b4e:	d02f      	beq.n	402bb0 <floor+0xc0>
  402b50:	4619      	mov	r1, r3
  402b52:	4620      	mov	r0, r4
  402b54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402b58:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
  402b5c:	f04f 39ff 	mov.w	r9, #4294967295
  402b60:	fa29 f902 	lsr.w	r9, r9, r2
  402b64:	ea10 0f09 	tst.w	r0, r9
  402b68:	d0f2      	beq.n	402b50 <floor+0x60>
  402b6a:	a323      	add	r3, pc, #140	; (adr r3, 402bf8 <floor+0x108>)
  402b6c:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b70:	f000 f8de 	bl	402d30 <__adddf3>
  402b74:	2200      	movs	r2, #0
  402b76:	2300      	movs	r3, #0
  402b78:	f000 fd1c 	bl	4035b4 <__aeabi_dcmpgt>
  402b7c:	2800      	cmp	r0, #0
  402b7e:	d0dd      	beq.n	402b3c <floor+0x4c>
  402b80:	2d00      	cmp	r5, #0
  402b82:	db21      	blt.n	402bc8 <floor+0xd8>
  402b84:	4645      	mov	r5, r8
  402b86:	ea27 0709 	bic.w	r7, r7, r9
  402b8a:	463c      	mov	r4, r7
  402b8c:	4629      	mov	r1, r5
  402b8e:	e7d7      	b.n	402b40 <floor+0x50>
  402b90:	a319      	add	r3, pc, #100	; (adr r3, 402bf8 <floor+0x108>)
  402b92:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b96:	f000 f8cb 	bl	402d30 <__adddf3>
  402b9a:	2200      	movs	r2, #0
  402b9c:	2300      	movs	r3, #0
  402b9e:	f000 fd09 	bl	4035b4 <__aeabi_dcmpgt>
  402ba2:	2800      	cmp	r0, #0
  402ba4:	d0ca      	beq.n	402b3c <floor+0x4c>
  402ba6:	2d00      	cmp	r5, #0
  402ba8:	db19      	blt.n	402bde <floor+0xee>
  402baa:	2700      	movs	r7, #0
  402bac:	463d      	mov	r5, r7
  402bae:	e7c5      	b.n	402b3c <floor+0x4c>
  402bb0:	4602      	mov	r2, r0
  402bb2:	460b      	mov	r3, r1
  402bb4:	f000 f8bc 	bl	402d30 <__adddf3>
  402bb8:	4604      	mov	r4, r0
  402bba:	e7ca      	b.n	402b52 <floor+0x62>
  402bbc:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  402bc0:	fa43 f606 	asr.w	r6, r3, r6
  402bc4:	44b0      	add	r8, r6
  402bc6:	e7b6      	b.n	402b36 <floor+0x46>
  402bc8:	2e14      	cmp	r6, #20
  402bca:	d010      	beq.n	402bee <floor+0xfe>
  402bcc:	2301      	movs	r3, #1
  402bce:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
  402bd2:	fa03 f606 	lsl.w	r6, r3, r6
  402bd6:	1937      	adds	r7, r6, r4
  402bd8:	bf28      	it	cs
  402bda:	4498      	addcs	r8, r3
  402bdc:	e7d2      	b.n	402b84 <floor+0x94>
  402bde:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
  402be2:	4b08      	ldr	r3, [pc, #32]	; (402c04 <floor+0x114>)
  402be4:	4322      	orrs	r2, r4
  402be6:	bf18      	it	ne
  402be8:	461d      	movne	r5, r3
  402bea:	2700      	movs	r7, #0
  402bec:	e7a6      	b.n	402b3c <floor+0x4c>
  402bee:	f105 0801 	add.w	r8, r5, #1
  402bf2:	e7c7      	b.n	402b84 <floor+0x94>
  402bf4:	f3af 8000 	nop.w
  402bf8:	8800759c 	.word	0x8800759c
  402bfc:	7e37e43c 	.word	0x7e37e43c
  402c00:	000fffff 	.word	0x000fffff
  402c04:	bff00000 	.word	0xbff00000

00402c08 <matherr>:
  402c08:	2000      	movs	r0, #0
  402c0a:	4770      	bx	lr

00402c0c <nan>:
  402c0c:	2000      	movs	r0, #0
  402c0e:	4901      	ldr	r1, [pc, #4]	; (402c14 <nan+0x8>)
  402c10:	4770      	bx	lr
  402c12:	bf00      	nop
  402c14:	7ff80000 	.word	0x7ff80000

00402c18 <scalbn>:
  402c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402c1a:	f3c1 560a 	ubfx	r6, r1, #20, #11
  402c1e:	4604      	mov	r4, r0
  402c20:	460d      	mov	r5, r1
  402c22:	460b      	mov	r3, r1
  402c24:	4617      	mov	r7, r2
  402c26:	bb0e      	cbnz	r6, 402c6c <scalbn+0x54>
  402c28:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  402c2c:	4303      	orrs	r3, r0
  402c2e:	4686      	mov	lr, r0
  402c30:	d025      	beq.n	402c7e <scalbn+0x66>
  402c32:	2200      	movs	r2, #0
  402c34:	4b34      	ldr	r3, [pc, #208]	; (402d08 <scalbn+0xf0>)
  402c36:	f000 fa2d 	bl	403094 <__aeabi_dmul>
  402c3a:	4a34      	ldr	r2, [pc, #208]	; (402d0c <scalbn+0xf4>)
  402c3c:	4297      	cmp	r7, r2
  402c3e:	4604      	mov	r4, r0
  402c40:	460d      	mov	r5, r1
  402c42:	460b      	mov	r3, r1
  402c44:	db2a      	blt.n	402c9c <scalbn+0x84>
  402c46:	f3c1 560a 	ubfx	r6, r1, #20, #11
  402c4a:	3e36      	subs	r6, #54	; 0x36
  402c4c:	443e      	add	r6, r7
  402c4e:	f240 72fe 	movw	r2, #2046	; 0x7fe
  402c52:	4296      	cmp	r6, r2
  402c54:	dc28      	bgt.n	402ca8 <scalbn+0x90>
  402c56:	2e00      	cmp	r6, #0
  402c58:	dd12      	ble.n	402c80 <scalbn+0x68>
  402c5a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  402c5e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  402c62:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  402c66:	4620      	mov	r0, r4
  402c68:	4629      	mov	r1, r5
  402c6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c6c:	f240 72ff 	movw	r2, #2047	; 0x7ff
  402c70:	4296      	cmp	r6, r2
  402c72:	d1eb      	bne.n	402c4c <scalbn+0x34>
  402c74:	4602      	mov	r2, r0
  402c76:	460b      	mov	r3, r1
  402c78:	f000 f85a 	bl	402d30 <__adddf3>
  402c7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c80:	f116 0f35 	cmn.w	r6, #53	; 0x35
  402c84:	da1d      	bge.n	402cc2 <scalbn+0xaa>
  402c86:	f24c 3350 	movw	r3, #50000	; 0xc350
  402c8a:	429f      	cmp	r7, r3
  402c8c:	4622      	mov	r2, r4
  402c8e:	462b      	mov	r3, r5
  402c90:	dc25      	bgt.n	402cde <scalbn+0xc6>
  402c92:	a119      	add	r1, pc, #100	; (adr r1, 402cf8 <scalbn+0xe0>)
  402c94:	e9d1 0100 	ldrd	r0, r1, [r1]
  402c98:	f000 f83c 	bl	402d14 <copysign>
  402c9c:	a316      	add	r3, pc, #88	; (adr r3, 402cf8 <scalbn+0xe0>)
  402c9e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402ca2:	f000 f9f7 	bl	403094 <__aeabi_dmul>
  402ca6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402ca8:	4622      	mov	r2, r4
  402caa:	462b      	mov	r3, r5
  402cac:	a114      	add	r1, pc, #80	; (adr r1, 402d00 <scalbn+0xe8>)
  402cae:	e9d1 0100 	ldrd	r0, r1, [r1]
  402cb2:	f000 f82f 	bl	402d14 <copysign>
  402cb6:	a312      	add	r3, pc, #72	; (adr r3, 402d00 <scalbn+0xe8>)
  402cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
  402cbc:	f000 f9ea 	bl	403094 <__aeabi_dmul>
  402cc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402cc2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  402cc6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  402cca:	3636      	adds	r6, #54	; 0x36
  402ccc:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  402cd0:	4620      	mov	r0, r4
  402cd2:	4629      	mov	r1, r5
  402cd4:	2200      	movs	r2, #0
  402cd6:	4b0e      	ldr	r3, [pc, #56]	; (402d10 <scalbn+0xf8>)
  402cd8:	f000 f9dc 	bl	403094 <__aeabi_dmul>
  402cdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402cde:	a108      	add	r1, pc, #32	; (adr r1, 402d00 <scalbn+0xe8>)
  402ce0:	e9d1 0100 	ldrd	r0, r1, [r1]
  402ce4:	f000 f816 	bl	402d14 <copysign>
  402ce8:	a305      	add	r3, pc, #20	; (adr r3, 402d00 <scalbn+0xe8>)
  402cea:	e9d3 2300 	ldrd	r2, r3, [r3]
  402cee:	f000 f9d1 	bl	403094 <__aeabi_dmul>
  402cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402cf4:	f3af 8000 	nop.w
  402cf8:	c2f8f359 	.word	0xc2f8f359
  402cfc:	01a56e1f 	.word	0x01a56e1f
  402d00:	8800759c 	.word	0x8800759c
  402d04:	7e37e43c 	.word	0x7e37e43c
  402d08:	43500000 	.word	0x43500000
  402d0c:	ffff3cb0 	.word	0xffff3cb0
  402d10:	3c900000 	.word	0x3c900000

00402d14 <copysign>:
  402d14:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
  402d18:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  402d1c:	ea42 0103 	orr.w	r1, r2, r3
  402d20:	4770      	bx	lr
  402d22:	bf00      	nop

00402d24 <__aeabi_drsub>:
  402d24:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  402d28:	e002      	b.n	402d30 <__adddf3>
  402d2a:	bf00      	nop

00402d2c <__aeabi_dsub>:
  402d2c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00402d30 <__adddf3>:
  402d30:	b530      	push	{r4, r5, lr}
  402d32:	ea4f 0441 	mov.w	r4, r1, lsl #1
  402d36:	ea4f 0543 	mov.w	r5, r3, lsl #1
  402d3a:	ea94 0f05 	teq	r4, r5
  402d3e:	bf08      	it	eq
  402d40:	ea90 0f02 	teqeq	r0, r2
  402d44:	bf1f      	itttt	ne
  402d46:	ea54 0c00 	orrsne.w	ip, r4, r0
  402d4a:	ea55 0c02 	orrsne.w	ip, r5, r2
  402d4e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  402d52:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402d56:	f000 80e2 	beq.w	402f1e <__adddf3+0x1ee>
  402d5a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  402d5e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  402d62:	bfb8      	it	lt
  402d64:	426d      	neglt	r5, r5
  402d66:	dd0c      	ble.n	402d82 <__adddf3+0x52>
  402d68:	442c      	add	r4, r5
  402d6a:	ea80 0202 	eor.w	r2, r0, r2
  402d6e:	ea81 0303 	eor.w	r3, r1, r3
  402d72:	ea82 0000 	eor.w	r0, r2, r0
  402d76:	ea83 0101 	eor.w	r1, r3, r1
  402d7a:	ea80 0202 	eor.w	r2, r0, r2
  402d7e:	ea81 0303 	eor.w	r3, r1, r3
  402d82:	2d36      	cmp	r5, #54	; 0x36
  402d84:	bf88      	it	hi
  402d86:	bd30      	pophi	{r4, r5, pc}
  402d88:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402d8c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402d90:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  402d94:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402d98:	d002      	beq.n	402da0 <__adddf3+0x70>
  402d9a:	4240      	negs	r0, r0
  402d9c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402da0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  402da4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402da8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  402dac:	d002      	beq.n	402db4 <__adddf3+0x84>
  402dae:	4252      	negs	r2, r2
  402db0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  402db4:	ea94 0f05 	teq	r4, r5
  402db8:	f000 80a7 	beq.w	402f0a <__adddf3+0x1da>
  402dbc:	f1a4 0401 	sub.w	r4, r4, #1
  402dc0:	f1d5 0e20 	rsbs	lr, r5, #32
  402dc4:	db0d      	blt.n	402de2 <__adddf3+0xb2>
  402dc6:	fa02 fc0e 	lsl.w	ip, r2, lr
  402dca:	fa22 f205 	lsr.w	r2, r2, r5
  402dce:	1880      	adds	r0, r0, r2
  402dd0:	f141 0100 	adc.w	r1, r1, #0
  402dd4:	fa03 f20e 	lsl.w	r2, r3, lr
  402dd8:	1880      	adds	r0, r0, r2
  402dda:	fa43 f305 	asr.w	r3, r3, r5
  402dde:	4159      	adcs	r1, r3
  402de0:	e00e      	b.n	402e00 <__adddf3+0xd0>
  402de2:	f1a5 0520 	sub.w	r5, r5, #32
  402de6:	f10e 0e20 	add.w	lr, lr, #32
  402dea:	2a01      	cmp	r2, #1
  402dec:	fa03 fc0e 	lsl.w	ip, r3, lr
  402df0:	bf28      	it	cs
  402df2:	f04c 0c02 	orrcs.w	ip, ip, #2
  402df6:	fa43 f305 	asr.w	r3, r3, r5
  402dfa:	18c0      	adds	r0, r0, r3
  402dfc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  402e00:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402e04:	d507      	bpl.n	402e16 <__adddf3+0xe6>
  402e06:	f04f 0e00 	mov.w	lr, #0
  402e0a:	f1dc 0c00 	rsbs	ip, ip, #0
  402e0e:	eb7e 0000 	sbcs.w	r0, lr, r0
  402e12:	eb6e 0101 	sbc.w	r1, lr, r1
  402e16:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  402e1a:	d31b      	bcc.n	402e54 <__adddf3+0x124>
  402e1c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  402e20:	d30c      	bcc.n	402e3c <__adddf3+0x10c>
  402e22:	0849      	lsrs	r1, r1, #1
  402e24:	ea5f 0030 	movs.w	r0, r0, rrx
  402e28:	ea4f 0c3c 	mov.w	ip, ip, rrx
  402e2c:	f104 0401 	add.w	r4, r4, #1
  402e30:	ea4f 5244 	mov.w	r2, r4, lsl #21
  402e34:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  402e38:	f080 809a 	bcs.w	402f70 <__adddf3+0x240>
  402e3c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  402e40:	bf08      	it	eq
  402e42:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  402e46:	f150 0000 	adcs.w	r0, r0, #0
  402e4a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402e4e:	ea41 0105 	orr.w	r1, r1, r5
  402e52:	bd30      	pop	{r4, r5, pc}
  402e54:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  402e58:	4140      	adcs	r0, r0
  402e5a:	eb41 0101 	adc.w	r1, r1, r1
  402e5e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402e62:	f1a4 0401 	sub.w	r4, r4, #1
  402e66:	d1e9      	bne.n	402e3c <__adddf3+0x10c>
  402e68:	f091 0f00 	teq	r1, #0
  402e6c:	bf04      	itt	eq
  402e6e:	4601      	moveq	r1, r0
  402e70:	2000      	moveq	r0, #0
  402e72:	fab1 f381 	clz	r3, r1
  402e76:	bf08      	it	eq
  402e78:	3320      	addeq	r3, #32
  402e7a:	f1a3 030b 	sub.w	r3, r3, #11
  402e7e:	f1b3 0220 	subs.w	r2, r3, #32
  402e82:	da0c      	bge.n	402e9e <__adddf3+0x16e>
  402e84:	320c      	adds	r2, #12
  402e86:	dd08      	ble.n	402e9a <__adddf3+0x16a>
  402e88:	f102 0c14 	add.w	ip, r2, #20
  402e8c:	f1c2 020c 	rsb	r2, r2, #12
  402e90:	fa01 f00c 	lsl.w	r0, r1, ip
  402e94:	fa21 f102 	lsr.w	r1, r1, r2
  402e98:	e00c      	b.n	402eb4 <__adddf3+0x184>
  402e9a:	f102 0214 	add.w	r2, r2, #20
  402e9e:	bfd8      	it	le
  402ea0:	f1c2 0c20 	rsble	ip, r2, #32
  402ea4:	fa01 f102 	lsl.w	r1, r1, r2
  402ea8:	fa20 fc0c 	lsr.w	ip, r0, ip
  402eac:	bfdc      	itt	le
  402eae:	ea41 010c 	orrle.w	r1, r1, ip
  402eb2:	4090      	lslle	r0, r2
  402eb4:	1ae4      	subs	r4, r4, r3
  402eb6:	bfa2      	ittt	ge
  402eb8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  402ebc:	4329      	orrge	r1, r5
  402ebe:	bd30      	popge	{r4, r5, pc}
  402ec0:	ea6f 0404 	mvn.w	r4, r4
  402ec4:	3c1f      	subs	r4, #31
  402ec6:	da1c      	bge.n	402f02 <__adddf3+0x1d2>
  402ec8:	340c      	adds	r4, #12
  402eca:	dc0e      	bgt.n	402eea <__adddf3+0x1ba>
  402ecc:	f104 0414 	add.w	r4, r4, #20
  402ed0:	f1c4 0220 	rsb	r2, r4, #32
  402ed4:	fa20 f004 	lsr.w	r0, r0, r4
  402ed8:	fa01 f302 	lsl.w	r3, r1, r2
  402edc:	ea40 0003 	orr.w	r0, r0, r3
  402ee0:	fa21 f304 	lsr.w	r3, r1, r4
  402ee4:	ea45 0103 	orr.w	r1, r5, r3
  402ee8:	bd30      	pop	{r4, r5, pc}
  402eea:	f1c4 040c 	rsb	r4, r4, #12
  402eee:	f1c4 0220 	rsb	r2, r4, #32
  402ef2:	fa20 f002 	lsr.w	r0, r0, r2
  402ef6:	fa01 f304 	lsl.w	r3, r1, r4
  402efa:	ea40 0003 	orr.w	r0, r0, r3
  402efe:	4629      	mov	r1, r5
  402f00:	bd30      	pop	{r4, r5, pc}
  402f02:	fa21 f004 	lsr.w	r0, r1, r4
  402f06:	4629      	mov	r1, r5
  402f08:	bd30      	pop	{r4, r5, pc}
  402f0a:	f094 0f00 	teq	r4, #0
  402f0e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  402f12:	bf06      	itte	eq
  402f14:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  402f18:	3401      	addeq	r4, #1
  402f1a:	3d01      	subne	r5, #1
  402f1c:	e74e      	b.n	402dbc <__adddf3+0x8c>
  402f1e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402f22:	bf18      	it	ne
  402f24:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402f28:	d029      	beq.n	402f7e <__adddf3+0x24e>
  402f2a:	ea94 0f05 	teq	r4, r5
  402f2e:	bf08      	it	eq
  402f30:	ea90 0f02 	teqeq	r0, r2
  402f34:	d005      	beq.n	402f42 <__adddf3+0x212>
  402f36:	ea54 0c00 	orrs.w	ip, r4, r0
  402f3a:	bf04      	itt	eq
  402f3c:	4619      	moveq	r1, r3
  402f3e:	4610      	moveq	r0, r2
  402f40:	bd30      	pop	{r4, r5, pc}
  402f42:	ea91 0f03 	teq	r1, r3
  402f46:	bf1e      	ittt	ne
  402f48:	2100      	movne	r1, #0
  402f4a:	2000      	movne	r0, #0
  402f4c:	bd30      	popne	{r4, r5, pc}
  402f4e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  402f52:	d105      	bne.n	402f60 <__adddf3+0x230>
  402f54:	0040      	lsls	r0, r0, #1
  402f56:	4149      	adcs	r1, r1
  402f58:	bf28      	it	cs
  402f5a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  402f5e:	bd30      	pop	{r4, r5, pc}
  402f60:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  402f64:	bf3c      	itt	cc
  402f66:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  402f6a:	bd30      	popcc	{r4, r5, pc}
  402f6c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402f70:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  402f74:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402f78:	f04f 0000 	mov.w	r0, #0
  402f7c:	bd30      	pop	{r4, r5, pc}
  402f7e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402f82:	bf1a      	itte	ne
  402f84:	4619      	movne	r1, r3
  402f86:	4610      	movne	r0, r2
  402f88:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  402f8c:	bf1c      	itt	ne
  402f8e:	460b      	movne	r3, r1
  402f90:	4602      	movne	r2, r0
  402f92:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402f96:	bf06      	itte	eq
  402f98:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  402f9c:	ea91 0f03 	teqeq	r1, r3
  402fa0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  402fa4:	bd30      	pop	{r4, r5, pc}
  402fa6:	bf00      	nop

00402fa8 <__aeabi_ui2d>:
  402fa8:	f090 0f00 	teq	r0, #0
  402fac:	bf04      	itt	eq
  402fae:	2100      	moveq	r1, #0
  402fb0:	4770      	bxeq	lr
  402fb2:	b530      	push	{r4, r5, lr}
  402fb4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402fb8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402fbc:	f04f 0500 	mov.w	r5, #0
  402fc0:	f04f 0100 	mov.w	r1, #0
  402fc4:	e750      	b.n	402e68 <__adddf3+0x138>
  402fc6:	bf00      	nop

00402fc8 <__aeabi_i2d>:
  402fc8:	f090 0f00 	teq	r0, #0
  402fcc:	bf04      	itt	eq
  402fce:	2100      	moveq	r1, #0
  402fd0:	4770      	bxeq	lr
  402fd2:	b530      	push	{r4, r5, lr}
  402fd4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402fd8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402fdc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  402fe0:	bf48      	it	mi
  402fe2:	4240      	negmi	r0, r0
  402fe4:	f04f 0100 	mov.w	r1, #0
  402fe8:	e73e      	b.n	402e68 <__adddf3+0x138>
  402fea:	bf00      	nop

00402fec <__aeabi_f2d>:
  402fec:	0042      	lsls	r2, r0, #1
  402fee:	ea4f 01e2 	mov.w	r1, r2, asr #3
  402ff2:	ea4f 0131 	mov.w	r1, r1, rrx
  402ff6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  402ffa:	bf1f      	itttt	ne
  402ffc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  403000:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403004:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  403008:	4770      	bxne	lr
  40300a:	f092 0f00 	teq	r2, #0
  40300e:	bf14      	ite	ne
  403010:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403014:	4770      	bxeq	lr
  403016:	b530      	push	{r4, r5, lr}
  403018:	f44f 7460 	mov.w	r4, #896	; 0x380
  40301c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403020:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403024:	e720      	b.n	402e68 <__adddf3+0x138>
  403026:	bf00      	nop

00403028 <__aeabi_ul2d>:
  403028:	ea50 0201 	orrs.w	r2, r0, r1
  40302c:	bf08      	it	eq
  40302e:	4770      	bxeq	lr
  403030:	b530      	push	{r4, r5, lr}
  403032:	f04f 0500 	mov.w	r5, #0
  403036:	e00a      	b.n	40304e <__aeabi_l2d+0x16>

00403038 <__aeabi_l2d>:
  403038:	ea50 0201 	orrs.w	r2, r0, r1
  40303c:	bf08      	it	eq
  40303e:	4770      	bxeq	lr
  403040:	b530      	push	{r4, r5, lr}
  403042:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  403046:	d502      	bpl.n	40304e <__aeabi_l2d+0x16>
  403048:	4240      	negs	r0, r0
  40304a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40304e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403052:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403056:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40305a:	f43f aedc 	beq.w	402e16 <__adddf3+0xe6>
  40305e:	f04f 0203 	mov.w	r2, #3
  403062:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  403066:	bf18      	it	ne
  403068:	3203      	addne	r2, #3
  40306a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40306e:	bf18      	it	ne
  403070:	3203      	addne	r2, #3
  403072:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  403076:	f1c2 0320 	rsb	r3, r2, #32
  40307a:	fa00 fc03 	lsl.w	ip, r0, r3
  40307e:	fa20 f002 	lsr.w	r0, r0, r2
  403082:	fa01 fe03 	lsl.w	lr, r1, r3
  403086:	ea40 000e 	orr.w	r0, r0, lr
  40308a:	fa21 f102 	lsr.w	r1, r1, r2
  40308e:	4414      	add	r4, r2
  403090:	e6c1      	b.n	402e16 <__adddf3+0xe6>
  403092:	bf00      	nop

00403094 <__aeabi_dmul>:
  403094:	b570      	push	{r4, r5, r6, lr}
  403096:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40309a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40309e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4030a2:	bf1d      	ittte	ne
  4030a4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4030a8:	ea94 0f0c 	teqne	r4, ip
  4030ac:	ea95 0f0c 	teqne	r5, ip
  4030b0:	f000 f8de 	bleq	403270 <__aeabi_dmul+0x1dc>
  4030b4:	442c      	add	r4, r5
  4030b6:	ea81 0603 	eor.w	r6, r1, r3
  4030ba:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4030be:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4030c2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4030c6:	bf18      	it	ne
  4030c8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4030cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4030d0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4030d4:	d038      	beq.n	403148 <__aeabi_dmul+0xb4>
  4030d6:	fba0 ce02 	umull	ip, lr, r0, r2
  4030da:	f04f 0500 	mov.w	r5, #0
  4030de:	fbe1 e502 	umlal	lr, r5, r1, r2
  4030e2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4030e6:	fbe0 e503 	umlal	lr, r5, r0, r3
  4030ea:	f04f 0600 	mov.w	r6, #0
  4030ee:	fbe1 5603 	umlal	r5, r6, r1, r3
  4030f2:	f09c 0f00 	teq	ip, #0
  4030f6:	bf18      	it	ne
  4030f8:	f04e 0e01 	orrne.w	lr, lr, #1
  4030fc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  403100:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  403104:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  403108:	d204      	bcs.n	403114 <__aeabi_dmul+0x80>
  40310a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40310e:	416d      	adcs	r5, r5
  403110:	eb46 0606 	adc.w	r6, r6, r6
  403114:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  403118:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40311c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  403120:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  403124:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  403128:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40312c:	bf88      	it	hi
  40312e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403132:	d81e      	bhi.n	403172 <__aeabi_dmul+0xde>
  403134:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  403138:	bf08      	it	eq
  40313a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40313e:	f150 0000 	adcs.w	r0, r0, #0
  403142:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403146:	bd70      	pop	{r4, r5, r6, pc}
  403148:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40314c:	ea46 0101 	orr.w	r1, r6, r1
  403150:	ea40 0002 	orr.w	r0, r0, r2
  403154:	ea81 0103 	eor.w	r1, r1, r3
  403158:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40315c:	bfc2      	ittt	gt
  40315e:	ebd4 050c 	rsbsgt	r5, r4, ip
  403162:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403166:	bd70      	popgt	{r4, r5, r6, pc}
  403168:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40316c:	f04f 0e00 	mov.w	lr, #0
  403170:	3c01      	subs	r4, #1
  403172:	f300 80ab 	bgt.w	4032cc <__aeabi_dmul+0x238>
  403176:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40317a:	bfde      	ittt	le
  40317c:	2000      	movle	r0, #0
  40317e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  403182:	bd70      	pople	{r4, r5, r6, pc}
  403184:	f1c4 0400 	rsb	r4, r4, #0
  403188:	3c20      	subs	r4, #32
  40318a:	da35      	bge.n	4031f8 <__aeabi_dmul+0x164>
  40318c:	340c      	adds	r4, #12
  40318e:	dc1b      	bgt.n	4031c8 <__aeabi_dmul+0x134>
  403190:	f104 0414 	add.w	r4, r4, #20
  403194:	f1c4 0520 	rsb	r5, r4, #32
  403198:	fa00 f305 	lsl.w	r3, r0, r5
  40319c:	fa20 f004 	lsr.w	r0, r0, r4
  4031a0:	fa01 f205 	lsl.w	r2, r1, r5
  4031a4:	ea40 0002 	orr.w	r0, r0, r2
  4031a8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4031ac:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4031b0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4031b4:	fa21 f604 	lsr.w	r6, r1, r4
  4031b8:	eb42 0106 	adc.w	r1, r2, r6
  4031bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4031c0:	bf08      	it	eq
  4031c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4031c6:	bd70      	pop	{r4, r5, r6, pc}
  4031c8:	f1c4 040c 	rsb	r4, r4, #12
  4031cc:	f1c4 0520 	rsb	r5, r4, #32
  4031d0:	fa00 f304 	lsl.w	r3, r0, r4
  4031d4:	fa20 f005 	lsr.w	r0, r0, r5
  4031d8:	fa01 f204 	lsl.w	r2, r1, r4
  4031dc:	ea40 0002 	orr.w	r0, r0, r2
  4031e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4031e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4031e8:	f141 0100 	adc.w	r1, r1, #0
  4031ec:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4031f0:	bf08      	it	eq
  4031f2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4031f6:	bd70      	pop	{r4, r5, r6, pc}
  4031f8:	f1c4 0520 	rsb	r5, r4, #32
  4031fc:	fa00 f205 	lsl.w	r2, r0, r5
  403200:	ea4e 0e02 	orr.w	lr, lr, r2
  403204:	fa20 f304 	lsr.w	r3, r0, r4
  403208:	fa01 f205 	lsl.w	r2, r1, r5
  40320c:	ea43 0302 	orr.w	r3, r3, r2
  403210:	fa21 f004 	lsr.w	r0, r1, r4
  403214:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403218:	fa21 f204 	lsr.w	r2, r1, r4
  40321c:	ea20 0002 	bic.w	r0, r0, r2
  403220:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  403224:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403228:	bf08      	it	eq
  40322a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40322e:	bd70      	pop	{r4, r5, r6, pc}
  403230:	f094 0f00 	teq	r4, #0
  403234:	d10f      	bne.n	403256 <__aeabi_dmul+0x1c2>
  403236:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40323a:	0040      	lsls	r0, r0, #1
  40323c:	eb41 0101 	adc.w	r1, r1, r1
  403240:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403244:	bf08      	it	eq
  403246:	3c01      	subeq	r4, #1
  403248:	d0f7      	beq.n	40323a <__aeabi_dmul+0x1a6>
  40324a:	ea41 0106 	orr.w	r1, r1, r6
  40324e:	f095 0f00 	teq	r5, #0
  403252:	bf18      	it	ne
  403254:	4770      	bxne	lr
  403256:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40325a:	0052      	lsls	r2, r2, #1
  40325c:	eb43 0303 	adc.w	r3, r3, r3
  403260:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  403264:	bf08      	it	eq
  403266:	3d01      	subeq	r5, #1
  403268:	d0f7      	beq.n	40325a <__aeabi_dmul+0x1c6>
  40326a:	ea43 0306 	orr.w	r3, r3, r6
  40326e:	4770      	bx	lr
  403270:	ea94 0f0c 	teq	r4, ip
  403274:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403278:	bf18      	it	ne
  40327a:	ea95 0f0c 	teqne	r5, ip
  40327e:	d00c      	beq.n	40329a <__aeabi_dmul+0x206>
  403280:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403284:	bf18      	it	ne
  403286:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40328a:	d1d1      	bne.n	403230 <__aeabi_dmul+0x19c>
  40328c:	ea81 0103 	eor.w	r1, r1, r3
  403290:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403294:	f04f 0000 	mov.w	r0, #0
  403298:	bd70      	pop	{r4, r5, r6, pc}
  40329a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40329e:	bf06      	itte	eq
  4032a0:	4610      	moveq	r0, r2
  4032a2:	4619      	moveq	r1, r3
  4032a4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4032a8:	d019      	beq.n	4032de <__aeabi_dmul+0x24a>
  4032aa:	ea94 0f0c 	teq	r4, ip
  4032ae:	d102      	bne.n	4032b6 <__aeabi_dmul+0x222>
  4032b0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4032b4:	d113      	bne.n	4032de <__aeabi_dmul+0x24a>
  4032b6:	ea95 0f0c 	teq	r5, ip
  4032ba:	d105      	bne.n	4032c8 <__aeabi_dmul+0x234>
  4032bc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4032c0:	bf1c      	itt	ne
  4032c2:	4610      	movne	r0, r2
  4032c4:	4619      	movne	r1, r3
  4032c6:	d10a      	bne.n	4032de <__aeabi_dmul+0x24a>
  4032c8:	ea81 0103 	eor.w	r1, r1, r3
  4032cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4032d0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4032d4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4032d8:	f04f 0000 	mov.w	r0, #0
  4032dc:	bd70      	pop	{r4, r5, r6, pc}
  4032de:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4032e2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4032e6:	bd70      	pop	{r4, r5, r6, pc}

004032e8 <__aeabi_ddiv>:
  4032e8:	b570      	push	{r4, r5, r6, lr}
  4032ea:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4032ee:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4032f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4032f6:	bf1d      	ittte	ne
  4032f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4032fc:	ea94 0f0c 	teqne	r4, ip
  403300:	ea95 0f0c 	teqne	r5, ip
  403304:	f000 f8a7 	bleq	403456 <__aeabi_ddiv+0x16e>
  403308:	eba4 0405 	sub.w	r4, r4, r5
  40330c:	ea81 0e03 	eor.w	lr, r1, r3
  403310:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403314:	ea4f 3101 	mov.w	r1, r1, lsl #12
  403318:	f000 8088 	beq.w	40342c <__aeabi_ddiv+0x144>
  40331c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403320:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  403324:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  403328:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40332c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  403330:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  403334:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  403338:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40333c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  403340:	429d      	cmp	r5, r3
  403342:	bf08      	it	eq
  403344:	4296      	cmpeq	r6, r2
  403346:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40334a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40334e:	d202      	bcs.n	403356 <__aeabi_ddiv+0x6e>
  403350:	085b      	lsrs	r3, r3, #1
  403352:	ea4f 0232 	mov.w	r2, r2, rrx
  403356:	1ab6      	subs	r6, r6, r2
  403358:	eb65 0503 	sbc.w	r5, r5, r3
  40335c:	085b      	lsrs	r3, r3, #1
  40335e:	ea4f 0232 	mov.w	r2, r2, rrx
  403362:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  403366:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40336a:	ebb6 0e02 	subs.w	lr, r6, r2
  40336e:	eb75 0e03 	sbcs.w	lr, r5, r3
  403372:	bf22      	ittt	cs
  403374:	1ab6      	subcs	r6, r6, r2
  403376:	4675      	movcs	r5, lr
  403378:	ea40 000c 	orrcs.w	r0, r0, ip
  40337c:	085b      	lsrs	r3, r3, #1
  40337e:	ea4f 0232 	mov.w	r2, r2, rrx
  403382:	ebb6 0e02 	subs.w	lr, r6, r2
  403386:	eb75 0e03 	sbcs.w	lr, r5, r3
  40338a:	bf22      	ittt	cs
  40338c:	1ab6      	subcs	r6, r6, r2
  40338e:	4675      	movcs	r5, lr
  403390:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  403394:	085b      	lsrs	r3, r3, #1
  403396:	ea4f 0232 	mov.w	r2, r2, rrx
  40339a:	ebb6 0e02 	subs.w	lr, r6, r2
  40339e:	eb75 0e03 	sbcs.w	lr, r5, r3
  4033a2:	bf22      	ittt	cs
  4033a4:	1ab6      	subcs	r6, r6, r2
  4033a6:	4675      	movcs	r5, lr
  4033a8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4033ac:	085b      	lsrs	r3, r3, #1
  4033ae:	ea4f 0232 	mov.w	r2, r2, rrx
  4033b2:	ebb6 0e02 	subs.w	lr, r6, r2
  4033b6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4033ba:	bf22      	ittt	cs
  4033bc:	1ab6      	subcs	r6, r6, r2
  4033be:	4675      	movcs	r5, lr
  4033c0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4033c4:	ea55 0e06 	orrs.w	lr, r5, r6
  4033c8:	d018      	beq.n	4033fc <__aeabi_ddiv+0x114>
  4033ca:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4033ce:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4033d2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4033d6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4033da:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4033de:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4033e2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4033e6:	d1c0      	bne.n	40336a <__aeabi_ddiv+0x82>
  4033e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4033ec:	d10b      	bne.n	403406 <__aeabi_ddiv+0x11e>
  4033ee:	ea41 0100 	orr.w	r1, r1, r0
  4033f2:	f04f 0000 	mov.w	r0, #0
  4033f6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4033fa:	e7b6      	b.n	40336a <__aeabi_ddiv+0x82>
  4033fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403400:	bf04      	itt	eq
  403402:	4301      	orreq	r1, r0
  403404:	2000      	moveq	r0, #0
  403406:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40340a:	bf88      	it	hi
  40340c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403410:	f63f aeaf 	bhi.w	403172 <__aeabi_dmul+0xde>
  403414:	ebb5 0c03 	subs.w	ip, r5, r3
  403418:	bf04      	itt	eq
  40341a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40341e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  403422:	f150 0000 	adcs.w	r0, r0, #0
  403426:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40342a:	bd70      	pop	{r4, r5, r6, pc}
  40342c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  403430:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  403434:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  403438:	bfc2      	ittt	gt
  40343a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40343e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403442:	bd70      	popgt	{r4, r5, r6, pc}
  403444:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403448:	f04f 0e00 	mov.w	lr, #0
  40344c:	3c01      	subs	r4, #1
  40344e:	e690      	b.n	403172 <__aeabi_dmul+0xde>
  403450:	ea45 0e06 	orr.w	lr, r5, r6
  403454:	e68d      	b.n	403172 <__aeabi_dmul+0xde>
  403456:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40345a:	ea94 0f0c 	teq	r4, ip
  40345e:	bf08      	it	eq
  403460:	ea95 0f0c 	teqeq	r5, ip
  403464:	f43f af3b 	beq.w	4032de <__aeabi_dmul+0x24a>
  403468:	ea94 0f0c 	teq	r4, ip
  40346c:	d10a      	bne.n	403484 <__aeabi_ddiv+0x19c>
  40346e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  403472:	f47f af34 	bne.w	4032de <__aeabi_dmul+0x24a>
  403476:	ea95 0f0c 	teq	r5, ip
  40347a:	f47f af25 	bne.w	4032c8 <__aeabi_dmul+0x234>
  40347e:	4610      	mov	r0, r2
  403480:	4619      	mov	r1, r3
  403482:	e72c      	b.n	4032de <__aeabi_dmul+0x24a>
  403484:	ea95 0f0c 	teq	r5, ip
  403488:	d106      	bne.n	403498 <__aeabi_ddiv+0x1b0>
  40348a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40348e:	f43f aefd 	beq.w	40328c <__aeabi_dmul+0x1f8>
  403492:	4610      	mov	r0, r2
  403494:	4619      	mov	r1, r3
  403496:	e722      	b.n	4032de <__aeabi_dmul+0x24a>
  403498:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40349c:	bf18      	it	ne
  40349e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4034a2:	f47f aec5 	bne.w	403230 <__aeabi_dmul+0x19c>
  4034a6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4034aa:	f47f af0d 	bne.w	4032c8 <__aeabi_dmul+0x234>
  4034ae:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4034b2:	f47f aeeb 	bne.w	40328c <__aeabi_dmul+0x1f8>
  4034b6:	e712      	b.n	4032de <__aeabi_dmul+0x24a>

004034b8 <__gedf2>:
  4034b8:	f04f 3cff 	mov.w	ip, #4294967295
  4034bc:	e006      	b.n	4034cc <__cmpdf2+0x4>
  4034be:	bf00      	nop

004034c0 <__ledf2>:
  4034c0:	f04f 0c01 	mov.w	ip, #1
  4034c4:	e002      	b.n	4034cc <__cmpdf2+0x4>
  4034c6:	bf00      	nop

004034c8 <__cmpdf2>:
  4034c8:	f04f 0c01 	mov.w	ip, #1
  4034cc:	f84d cd04 	str.w	ip, [sp, #-4]!
  4034d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4034d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4034d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4034dc:	bf18      	it	ne
  4034de:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4034e2:	d01b      	beq.n	40351c <__cmpdf2+0x54>
  4034e4:	b001      	add	sp, #4
  4034e6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4034ea:	bf0c      	ite	eq
  4034ec:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4034f0:	ea91 0f03 	teqne	r1, r3
  4034f4:	bf02      	ittt	eq
  4034f6:	ea90 0f02 	teqeq	r0, r2
  4034fa:	2000      	moveq	r0, #0
  4034fc:	4770      	bxeq	lr
  4034fe:	f110 0f00 	cmn.w	r0, #0
  403502:	ea91 0f03 	teq	r1, r3
  403506:	bf58      	it	pl
  403508:	4299      	cmppl	r1, r3
  40350a:	bf08      	it	eq
  40350c:	4290      	cmpeq	r0, r2
  40350e:	bf2c      	ite	cs
  403510:	17d8      	asrcs	r0, r3, #31
  403512:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  403516:	f040 0001 	orr.w	r0, r0, #1
  40351a:	4770      	bx	lr
  40351c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  403520:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403524:	d102      	bne.n	40352c <__cmpdf2+0x64>
  403526:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40352a:	d107      	bne.n	40353c <__cmpdf2+0x74>
  40352c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  403530:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403534:	d1d6      	bne.n	4034e4 <__cmpdf2+0x1c>
  403536:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40353a:	d0d3      	beq.n	4034e4 <__cmpdf2+0x1c>
  40353c:	f85d 0b04 	ldr.w	r0, [sp], #4
  403540:	4770      	bx	lr
  403542:	bf00      	nop

00403544 <__aeabi_cdrcmple>:
  403544:	4684      	mov	ip, r0
  403546:	4610      	mov	r0, r2
  403548:	4662      	mov	r2, ip
  40354a:	468c      	mov	ip, r1
  40354c:	4619      	mov	r1, r3
  40354e:	4663      	mov	r3, ip
  403550:	e000      	b.n	403554 <__aeabi_cdcmpeq>
  403552:	bf00      	nop

00403554 <__aeabi_cdcmpeq>:
  403554:	b501      	push	{r0, lr}
  403556:	f7ff ffb7 	bl	4034c8 <__cmpdf2>
  40355a:	2800      	cmp	r0, #0
  40355c:	bf48      	it	mi
  40355e:	f110 0f00 	cmnmi.w	r0, #0
  403562:	bd01      	pop	{r0, pc}

00403564 <__aeabi_dcmpeq>:
  403564:	f84d ed08 	str.w	lr, [sp, #-8]!
  403568:	f7ff fff4 	bl	403554 <__aeabi_cdcmpeq>
  40356c:	bf0c      	ite	eq
  40356e:	2001      	moveq	r0, #1
  403570:	2000      	movne	r0, #0
  403572:	f85d fb08 	ldr.w	pc, [sp], #8
  403576:	bf00      	nop

00403578 <__aeabi_dcmplt>:
  403578:	f84d ed08 	str.w	lr, [sp, #-8]!
  40357c:	f7ff ffea 	bl	403554 <__aeabi_cdcmpeq>
  403580:	bf34      	ite	cc
  403582:	2001      	movcc	r0, #1
  403584:	2000      	movcs	r0, #0
  403586:	f85d fb08 	ldr.w	pc, [sp], #8
  40358a:	bf00      	nop

0040358c <__aeabi_dcmple>:
  40358c:	f84d ed08 	str.w	lr, [sp, #-8]!
  403590:	f7ff ffe0 	bl	403554 <__aeabi_cdcmpeq>
  403594:	bf94      	ite	ls
  403596:	2001      	movls	r0, #1
  403598:	2000      	movhi	r0, #0
  40359a:	f85d fb08 	ldr.w	pc, [sp], #8
  40359e:	bf00      	nop

004035a0 <__aeabi_dcmpge>:
  4035a0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4035a4:	f7ff ffce 	bl	403544 <__aeabi_cdrcmple>
  4035a8:	bf94      	ite	ls
  4035aa:	2001      	movls	r0, #1
  4035ac:	2000      	movhi	r0, #0
  4035ae:	f85d fb08 	ldr.w	pc, [sp], #8
  4035b2:	bf00      	nop

004035b4 <__aeabi_dcmpgt>:
  4035b4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4035b8:	f7ff ffc4 	bl	403544 <__aeabi_cdrcmple>
  4035bc:	bf34      	ite	cc
  4035be:	2001      	movcc	r0, #1
  4035c0:	2000      	movcs	r0, #0
  4035c2:	f85d fb08 	ldr.w	pc, [sp], #8
  4035c6:	bf00      	nop

004035c8 <__aeabi_dcmpun>:
  4035c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4035cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4035d0:	d102      	bne.n	4035d8 <__aeabi_dcmpun+0x10>
  4035d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4035d6:	d10a      	bne.n	4035ee <__aeabi_dcmpun+0x26>
  4035d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4035dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4035e0:	d102      	bne.n	4035e8 <__aeabi_dcmpun+0x20>
  4035e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4035e6:	d102      	bne.n	4035ee <__aeabi_dcmpun+0x26>
  4035e8:	f04f 0000 	mov.w	r0, #0
  4035ec:	4770      	bx	lr
  4035ee:	f04f 0001 	mov.w	r0, #1
  4035f2:	4770      	bx	lr

004035f4 <__aeabi_d2iz>:
  4035f4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4035f8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4035fc:	d215      	bcs.n	40362a <__aeabi_d2iz+0x36>
  4035fe:	d511      	bpl.n	403624 <__aeabi_d2iz+0x30>
  403600:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  403604:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  403608:	d912      	bls.n	403630 <__aeabi_d2iz+0x3c>
  40360a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40360e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  403612:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  403616:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40361a:	fa23 f002 	lsr.w	r0, r3, r2
  40361e:	bf18      	it	ne
  403620:	4240      	negne	r0, r0
  403622:	4770      	bx	lr
  403624:	f04f 0000 	mov.w	r0, #0
  403628:	4770      	bx	lr
  40362a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40362e:	d105      	bne.n	40363c <__aeabi_d2iz+0x48>
  403630:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  403634:	bf08      	it	eq
  403636:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40363a:	4770      	bx	lr
  40363c:	f04f 0000 	mov.w	r0, #0
  403640:	4770      	bx	lr
  403642:	bf00      	nop

00403644 <__errno>:
  403644:	4b01      	ldr	r3, [pc, #4]	; (40364c <__errno+0x8>)
  403646:	6818      	ldr	r0, [r3, #0]
  403648:	4770      	bx	lr
  40364a:	bf00      	nop
  40364c:	20000004 	.word	0x20000004

00403650 <__libc_init_array>:
  403650:	b570      	push	{r4, r5, r6, lr}
  403652:	4e0d      	ldr	r6, [pc, #52]	; (403688 <__libc_init_array+0x38>)
  403654:	4c0d      	ldr	r4, [pc, #52]	; (40368c <__libc_init_array+0x3c>)
  403656:	1ba4      	subs	r4, r4, r6
  403658:	10a4      	asrs	r4, r4, #2
  40365a:	2500      	movs	r5, #0
  40365c:	42a5      	cmp	r5, r4
  40365e:	d109      	bne.n	403674 <__libc_init_array+0x24>
  403660:	4e0b      	ldr	r6, [pc, #44]	; (403690 <__libc_init_array+0x40>)
  403662:	4c0c      	ldr	r4, [pc, #48]	; (403694 <__libc_init_array+0x44>)
  403664:	f000 f98c 	bl	403980 <_init>
  403668:	1ba4      	subs	r4, r4, r6
  40366a:	10a4      	asrs	r4, r4, #2
  40366c:	2500      	movs	r5, #0
  40366e:	42a5      	cmp	r5, r4
  403670:	d105      	bne.n	40367e <__libc_init_array+0x2e>
  403672:	bd70      	pop	{r4, r5, r6, pc}
  403674:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
  403678:	4798      	blx	r3
  40367a:	3501      	adds	r5, #1
  40367c:	e7ee      	b.n	40365c <__libc_init_array+0xc>
  40367e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
  403682:	4798      	blx	r3
  403684:	3501      	adds	r5, #1
  403686:	e7f2      	b.n	40366e <__libc_init_array+0x1e>
  403688:	0040398c 	.word	0x0040398c
  40368c:	0040398c 	.word	0x0040398c
  403690:	0040398c 	.word	0x0040398c
  403694:	00403990 	.word	0x00403990

00403698 <memset>:
  403698:	4402      	add	r2, r0
  40369a:	4603      	mov	r3, r0
  40369c:	4293      	cmp	r3, r2
  40369e:	d100      	bne.n	4036a2 <memset+0xa>
  4036a0:	4770      	bx	lr
  4036a2:	f803 1b01 	strb.w	r1, [r3], #1
  4036a6:	e7f9      	b.n	40369c <memset+0x4>
  4036a8:	682f2e2e 	.word	0x682f2e2e
  4036ac:	732f6c61 	.word	0x732f6c61
  4036b0:	682f6372 	.word	0x682f6372
  4036b4:	615f6c61 	.word	0x615f6c61
  4036b8:	735f6364 	.word	0x735f6364
  4036bc:	2e636e79 	.word	0x2e636e79
  4036c0:	00000063 	.word	0x00000063
  4036c4:	682f2e2e 	.word	0x682f2e2e
  4036c8:	732f6c61 	.word	0x732f6c61
  4036cc:	682f6372 	.word	0x682f6372
  4036d0:	695f6c61 	.word	0x695f6c61
  4036d4:	6d5f6332 	.word	0x6d5f6332
  4036d8:	6e79735f 	.word	0x6e79735f
  4036dc:	00632e63 	.word	0x00632e63
  4036e0:	682f2e2e 	.word	0x682f2e2e
  4036e4:	732f6c61 	.word	0x732f6c61
  4036e8:	682f6372 	.word	0x682f6372
  4036ec:	695f6c61 	.word	0x695f6c61
  4036f0:	00632e6f 	.word	0x00632e6f
  4036f4:	682f2e2e 	.word	0x682f2e2e
  4036f8:	612f6c70 	.word	0x612f6c70
  4036fc:	682f6364 	.word	0x682f6364
  403700:	615f6c70 	.word	0x615f6c70
  403704:	632e6364 	.word	0x632e6364
  403708:	00000000 	.word	0x00000000

0040370c <_i2cm_sync_cfgs>:
  40370c:	40018600 00000020 00000000 00000000     ...@ ...........
  40371c:	00000707 00001f40 682f2e2e 742f6c70     ....@...../hpl/t
  40372c:	682f6977 745f6c70 632e6977 00000000     wi/hpl_twi.c....
  40373c:	736f6361 00000000                       acos....

00403744 <npio2_hw>:
  403744:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
  403754:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
  403764:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
  403774:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
  403784:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
  403794:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
  4037a4:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
  4037b4:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

004037c4 <two_over_pi>:
  4037c4:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
  4037d4:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
  4037e4:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
  4037f4:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
  403804:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
  403814:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
  403824:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
  403834:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
  403844:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
  403854:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
  403864:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
  403874:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
  403884:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
  403894:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
  4038a4:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
  4038b4:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
  4038c4:	0060e27b 00c08c6b 00000000              {.`.k.......

004038d0 <PIo2>:
  4038d0:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
  4038e0:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
  4038f0:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
  403900:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

00403910 <init_jk>:
  403910:	00000002 00000003 00000004 00000006     ................

00403920 <__sf_fake_stderr>:
	...

00403940 <__sf_fake_stdin>:
	...

00403960 <__sf_fake_stdout>:
	...

00403980 <_init>:
  403980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403982:	bf00      	nop
  403984:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403986:	bc08      	pop	{r3}
  403988:	469e      	mov	lr, r3
  40398a:	4770      	bx	lr

0040398c <__init_array_start>:
  40398c:	0040012d 	.word	0x0040012d

00403990 <_fini>:
  403990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403992:	bf00      	nop
  403994:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403996:	bc08      	pop	{r3}
  403998:	469e      	mov	lr, r3
  40399a:	4770      	bx	lr

0040399c <__fini_array_start>:
  40399c:	00400109 	.word	0x00400109
